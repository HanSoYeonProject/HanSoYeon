[{"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\index.js":"1","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\App.js":"2","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\reportWebVitals.js":"3","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Components\\Navigate.js":"4","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\MainPage.js":"5","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AnnouncementPage.js":"6","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\SignupPage.js":"7","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\SigninPage.js":"8","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\CompanySignupPage.js":"9","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\MemberSignupPage.js":"10","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\GoogleLoginPage.js":"11","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\stores\\index.js":"12","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\stores\\user.store.js":"13","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\MyInfoPage.js":"14","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\InfoChangePage.js":"15"},{"size":552,"mtime":1699530756186,"results":"16","hashOfConfig":"17"},{"size":1529,"mtime":1700391946788,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1699530756188,"results":"19","hashOfConfig":"17"},{"size":5714,"mtime":1700386563766,"results":"20","hashOfConfig":"17"},{"size":250,"mtime":1699576969785,"results":"21","hashOfConfig":"17"},{"size":2988,"mtime":1699576969782,"results":"22","hashOfConfig":"17"},{"size":6647,"mtime":1699789453062,"results":"23","hashOfConfig":"17"},{"size":14878,"mtime":1699892711014,"results":"24","hashOfConfig":"17"},{"size":13839,"mtime":1699778806354,"results":"25","hashOfConfig":"17"},{"size":15976,"mtime":1699928007602,"results":"26","hashOfConfig":"17"},{"size":881,"mtime":1699893377495,"results":"27","hashOfConfig":"17"},{"size":66,"mtime":1699795655167,"results":"28","hashOfConfig":"17"},{"size":437,"mtime":1699795593647,"results":"29","hashOfConfig":"17"},{"size":5488,"mtime":1700404997874,"results":"30","hashOfConfig":"17"},{"size":20031,"mtime":1700458447688,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"10txgi9",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\index.js",[],[],["80","81","82","83","84","85"],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\App.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\reportWebVitals.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Components\\Navigate.js",["86","87","88","89","90","91","92"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\MainPage.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AnnouncementPage.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\SignupPage.js",["93","94","95","96","97","98","99"],[],"import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport company from \"../imgs/company.png\"\r\nimport member from \"../imgs/member.png\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\r\nimport kakao from \"../imgs/kakaoRegister.png\";\r\nimport google from \"../imgs/googleRegister.png\";\r\nimport email from \"../imgs/emailRegister.png\"\r\nimport GoogleLogin from \"react-google-login\";\r\nimport logo from \"../imgs/logo2.png\";\r\nimport {Form, InputGroup} from \"react-bootstrap\";\r\nconst SignupPage = (props) => {\r\n    const [showMemberForm, setShowMemberForm] = useState(false);\r\n    const [isKakaoSdkLoaded, setIsKakaoSdkLoaded] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = \"https://developers.kakao.com/sdk/js/kakao.min.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n\r\n        script.onload = () => {\r\n            if (window.Kakao && !window.Kakao.isInitialized()) {\r\n                window.Kakao.init('af3894518c9ad04274d8c7c098885abd');\r\n            }\r\n            setIsKakaoSdkLoaded(true); // SDK 로드 완료 후 상태 업데이트\r\n        };\r\n\r\n        return () => {\r\n            if (document.body.contains(script)) {\r\n                document.body.removeChild(script);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const handleCompanyImageClick = () => {\r\n        navigate(\"/companyRegister\")\r\n    };\r\n\r\n    const handleMemberImageClick = () => {\r\n        setShowMemberForm(true);\r\n    };\r\n\r\n    const handleGoogleRegisterImageClick = () => {\r\n        const clientId = \"234889770604-vcqi694q1kvfblt30ajhq77gsh5s8j2t.apps.googleusercontent.com\";\r\n        const redirectUri = \"http://localhost:3000/googleCallback\";\r\n        const scope = \"https://www.googleapis.com/auth/userinfo.email\";\r\n        const url = `https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&access_type=offline&prompt=consent`;\r\n\r\n        window.location.href = url;\r\n    };\r\n\r\n    const handleEmailRegisterImageClick = () => {\r\n        navigate(\"/memberRegister\")\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setShowMemberForm(false);\r\n    };\r\n\r\n    const handleKakaoRegisterImageClick = () => {\r\n\r\n        if (window.Kakao && window.Kakao.isInitialized()) { // Kakao SDK 초기화 확인\r\n            window.Kakao.Auth.login({\r\n                success: function(authObj) {\r\n                    console.log(authObj); // 인증 객체 확인\r\n\r\n                    window.Kakao.API.request({\r\n                        url: '/v2/user/me',\r\n                        success: function(response) {\r\n                            console.log(response);\r\n                            if (response.kakao_account && response.kakao_account.email) {\r\n                                const email = \"(kakao)\" + response.kakao_account.email;\r\n                                navigate(\"/memberRegister\", { state: { email } });\r\n                            } else {\r\n                                console.log(\"이메일 정보를 가져올 수 없습니다.\");\r\n                            }\r\n                        },\r\n                        fail: function(error) {\r\n                            console.log(error);\r\n                        },\r\n                    });\r\n                },\r\n                fail: function(err) {\r\n                    console.log(err);\r\n                },\r\n            });\r\n        } else {\r\n            console.error(\"Kakao SDK가 아직 로드되지 않았거나 초기화되지 않았습니다.\");\r\n        }\r\n    };\r\n\r\n\r\n    if (!showMemberForm) {\r\n        return (\r\n            <StyledContainer>\r\n                <Title>회원가입</Title>\r\n                <ImageContainer>\r\n                    <UserImg onClick={handleCompanyImageClick}>\r\n                        <SelectImg alt=\"company\" src={company} />\r\n                    </UserImg>\r\n                    <UserImg onClick={handleMemberImageClick}>\r\n                        <SelectImg alt=\"member\" src={member} />\r\n                    </UserImg>\r\n                </ImageContainer>\r\n            </StyledContainer>\r\n        );\r\n    }else if(showMemberForm){\r\n        return (\r\n            <StyledContainer>\r\n                <FormBox>\r\n                    <BackButton onClick={handleBack}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </BackButton>\r\n                    <Title>일반회원가입</Title>\r\n                    <UserImg onClick={handleKakaoRegisterImageClick}>\r\n                        <RegisterSelectImg alt=\"kakao\" src={kakao} />\r\n                    </UserImg>\r\n                    <UserImg onClick={handleGoogleRegisterImageClick}>\r\n                        <RegisterSelectImg alt=\"google\" src={google} />\r\n                    </UserImg>\r\n                    <UserImg onClick={handleEmailRegisterImageClick}>\r\n                        <RegisterEmailImg alt=\"email\" src={email} />\r\n                    </UserImg>\r\n                </FormBox>\r\n            </StyledContainer>\r\n        )\r\n    }\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #ffffff;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  margin-bottom: 80px;\r\n  align-items:center;\r\n  justify-content: center;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserImg = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SelectImg = styled.img`\r\n  height: 45vh;\r\n  width: auto;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst RegisterSelectImg = styled.img`\r\n  height: 10vh;\r\n  width: 500px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst RegisterEmailImg = styled.img`\r\n  height: 8.8vh;\r\n  width: 500px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5em; \r\n  color: #000; \r\n`;\r\n\r\nconst FormBox = styled.div`\r\n  padding: 40px;\r\n  justify-content: center;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-top: 150px;\r\n  position: relative;\r\n`;\r\n\r\nexport default SignupPage;","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\SigninPage.js",["100","101","102","103"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\CompanySignupPage.js",["104","105"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport { Form, Button, InputGroup, Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport logo from \"../imgs/logo2.png\";\r\n\r\nconst CompanySignUpPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [showSecondPart, setShowSecondPart] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        providerId: '',\r\n        providerName: '',\r\n        providerEmail: '',\r\n        providerPassword: '',\r\n        providerPasswordCheck: '',\r\n        companyName: '',\r\n        companyAddress: '',\r\n        companyTel: ''\r\n    });\r\n    const [addressFields, setAddressFields] = useState({\r\n        postalCode: '',\r\n        address: '',\r\n        detailAddress: ''\r\n    });\r\n\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        };\r\n    }, []);\r\n\r\n    const searchAddress = () => {\r\n        new window.daum.Postcode({\r\n            oncomplete: function(data) {\r\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\r\n                const fullAddress = {\r\n                    postalCode: data.zonecode,\r\n                    address: addr,\r\n                    detailAddress: ''\r\n                };\r\n                setAddressFields(fullAddress);\r\n            }\r\n        }).open();\r\n    };\r\n    const validateForm = () => {\r\n        let errors = {};\r\n\r\n        // 아이디 유효성 검사\r\n        if (formData.providerId.length < 4 || formData.providerId.length > 12) {\r\n            errors.providerId = \"아이디는 4자 이상 12자 이하로 입력해주세요.\";\r\n        }\r\n\r\n        // 이름 유효성 검사\r\n        if (!formData.providerName) {\r\n            errors.providerName = \"이름을 입력해주세요.\";\r\n        }\r\n\r\n        // 이메일 유효성 검사\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(formData.providerEmail)) {\r\n            errors.providerEmail = \"올바른 이메일 주소를 입력해주세요.\";\r\n        }\r\n\r\n        // 비밀번호 유효성 검사\r\n        const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9]).{4,12}$/;\r\n        if (!passwordPattern.test(formData.providerPassword)) {\r\n            errors.providerPassword = \"비밀번호는 4~12자의 영문 대소문자, 숫자로만 입력해야 합니다.\";\r\n        }\r\n\r\n        // 비밀번호 확인 검사\r\n        if (formData.providerPassword !== formData.providerPasswordCheck) {\r\n            errors.providerPasswordCheck = \"비밀번호가 일치하지 않습니다.\";\r\n        }\r\n\r\n        // 휴대폰 번호 유효성 검사\r\n        const telPattern = /^[0-9]{8,11}$/;\r\n        if (!telPattern.test(formData.companyTel)) {\r\n            errors.companyTel = \"올바른 회사 전화번호를 입력해주세요.\";\r\n        }\r\n\r\n        // 회사명\r\n        if (!formData.companyName) {\r\n            errors.companyName = \"선호 지역을 입력해주세요.\";\r\n        }\r\n\r\n        setValidationErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleAddressChange = (e) => {\r\n        setAddressFields({ ...addressFields, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setShowSecondPart(true);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        if (showSecondPart) {\r\n            setShowSecondPart(false);\r\n        } else {\r\n            navigate(-1);\r\n        }\r\n    };\r\n\r\n    const handleSignUp = (event) => {\r\n        event.preventDefault();\r\n        if (validateForm()) {\r\n            const combinedAddress = `${addressFields.postalCode} ${addressFields.address} ${addressFields.detailAddress}`.trim();\r\n            const signUpData = {\r\n                ...formData,\r\n                companyAddress: combinedAddress\r\n            };\r\n\r\n            axios.post('http://localhost:8050/api/auth/signUp/company', signUpData)\r\n                .then(response => {\r\n                    console.log(\"회원가입 성공: \", response.data);\r\n                    navigate(\"/login\");\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"회원가입 실패: \", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <FormBox>\r\n                <BackButton onClick={handleBack}>\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </BackButton>\r\n                <LogoImg src={logo} alt=\"Logo\" />\r\n                <Form onSubmit={handleSignUp}>\r\n                    {!showSecondPart ? (\r\n                        <>\r\n                            <StyledFormGroup controlId=\"formBasicProviderId\">\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"아이디\"\r\n                                    name=\"providerId\"\r\n                                    value={formData.providerId}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.providerId && <ErrorText>{validationErrors.providerId}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicProviderName\">\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"이름\"\r\n                                    name=\"providerName\"\r\n                                    value={formData.providerName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.providerName && <ErrorText>{validationErrors.providerName}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicProviderEmail\">\r\n                                <StyledFormControl\r\n                                    type=\"email\"\r\n                                    placeholder=\"회사 이메일\"\r\n                                    name=\"providerEmail\"\r\n                                    value={formData.providerEmail}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.providerEmail && <ErrorText>{validationErrors.providerEmail}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicProviderPassword\">\r\n                                <StyledFormControl\r\n                                    type=\"password\"\r\n                                    placeholder=\"비밀번호\"\r\n                                    name=\"providerPassword\"\r\n                                    value={formData.providerPassword}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.providerPassword && <ErrorText>{validationErrors.providerPassword}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicPasswordCheck\">\r\n                                <StyledFormControl\r\n                                    type=\"password\"\r\n                                    placeholder=\"비밀번호 확인\"\r\n                                    name=\"providerPasswordCheck\"\r\n                                    value={formData.providerPasswordCheck}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.providerPasswordCheck && <ErrorText>{validationErrors.providerPasswordCheck}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledButton variant=\"secondary\" onClick={handleNext}>\r\n                                다음\r\n                            </StyledButton>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <StyledFormGroup>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <StyledFormControl\r\n                                            type=\"text\"\r\n                                            placeholder=\"회사 우편번호\"\r\n                                            name=\"postalCode\"\r\n                                            value={addressFields.postalCode}\r\n                                            onChange={handleAddressChange}\r\n                                            disabled\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"auto\">\r\n                                        <Button variant=\"outline-secondary\" onClick={searchAddress}>\r\n                                            검색\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </StyledFormGroup>\r\n                            <StyledFormGroup>\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"회사 주소\"\r\n                                    name=\"address\"\r\n                                    value={addressFields.address}\r\n                                    onChange={handleAddressChange}\r\n                                    disabled\r\n                                />\r\n                            </StyledFormGroup>\r\n                            <StyledFormGroup>\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"회사 상세주소\"\r\n                                    name=\"detailAddress\"\r\n                                    value={addressFields.detailAddress}\r\n                                    onChange={handleAddressChange}\r\n                                />\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicCompanyName\">\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"회사명\"\r\n                                    name=\"companyName\"\r\n                                    value={formData.companyName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.companyName && <ErrorText>{validationErrors.companyName}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicTel\">\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"회사 전화번호(-빼고 입력)\"\r\n                                    name=\"companyTel\"\r\n                                    value={formData.companyTel}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.companyTel && <ErrorText>{validationErrors.companyTel}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledButton variant=\"primary\" type=\"submit\">\r\n                                회원가입\r\n                            </StyledButton>\r\n                        </>\r\n                    )}\r\n                </Form>\r\n            </FormBox>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #ffffff;\r\n`;\r\n\r\nconst FormBox = styled.div`\r\n  padding: 40px;\r\n  justify-content: center;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 450px;\r\n  margin-top: 150px;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledFormGroup = styled(Form.Group)`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StyledFormControl = styled(Form.Control)`\r\n  font-size: 16px;\r\n  padding: 10px;\r\n\r\n  ::placeholder {\r\n    color: #666;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  height: 18vh;\r\n  width: auto;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5em;\r\n  color: #000;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  margin-bottom: 40px;\r\n  align-items:center;\r\n  justify-content: center;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  font-family: \"Berlin Sans FB\",fantasy;\r\n  color: #996666;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  color: red;\r\n  font-size: 12px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport default CompanySignUpPage;\r\n","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\MemberSignupPage.js",["106","107"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\GoogleLoginPage.js",["108"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\stores\\index.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\stores\\user.store.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\MyInfoPage.js",["109","110","111","112","113","114"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\InfoChangePage.js",["115","116","117","118","119","120"],[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"137","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},{"ruleId":"133","severity":1,"message":"138","line":2,"column":22,"nodeType":"135","messageId":"136","endLine":2,"endColumn":31},{"ruleId":"133","severity":1,"message":"139","line":14,"column":21,"nodeType":"135","messageId":"136","endLine":14,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":38,"column":8,"nodeType":"142","endLine":38,"endColumn":10,"suggestions":"143"},{"ruleId":"133","severity":1,"message":"144","line":135,"column":7,"nodeType":"135","messageId":"136","endLine":135,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":159,"column":5,"nodeType":"147","endLine":167,"endColumn":6},{"ruleId":"133","severity":1,"message":"148","line":7,"column":22,"nodeType":"135","messageId":"136","endLine":7,"endColumn":27},{"ruleId":"133","severity":1,"message":"149","line":7,"column":29,"nodeType":"135","messageId":"136","endLine":7,"endColumn":39},{"ruleId":"133","severity":1,"message":"150","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":19},{"ruleId":"133","severity":1,"message":"151","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":12},{"ruleId":"133","severity":1,"message":"152","line":13,"column":9,"nodeType":"135","messageId":"136","endLine":13,"endColumn":13},{"ruleId":"133","severity":1,"message":"153","line":13,"column":15,"nodeType":"135","messageId":"136","endLine":13,"endColumn":25},{"ruleId":"133","severity":1,"message":"154","line":16,"column":12,"nodeType":"135","messageId":"136","endLine":16,"endColumn":28},{"ruleId":"133","severity":1,"message":"155","line":28,"column":12,"nodeType":"135","messageId":"136","endLine":28,"endColumn":19},{"ruleId":"133","severity":1,"message":"156","line":29,"column":12,"nodeType":"135","messageId":"136","endLine":29,"endColumn":16},{"ruleId":"133","severity":1,"message":"154","line":31,"column":12,"nodeType":"135","messageId":"136","endLine":31,"endColumn":28},{"ruleId":"133","severity":1,"message":"157","line":32,"column":12,"nodeType":"135","messageId":"136","endLine":32,"endColumn":21},{"ruleId":"133","severity":1,"message":"153","line":3,"column":24,"nodeType":"135","messageId":"136","endLine":3,"endColumn":34},{"ruleId":"133","severity":1,"message":"158","line":341,"column":7,"nodeType":"135","messageId":"136","endLine":341,"endColumn":12},{"ruleId":"133","severity":1,"message":"153","line":4,"column":24,"nodeType":"135","messageId":"136","endLine":4,"endColumn":34},{"ruleId":"133","severity":1,"message":"158","line":393,"column":7,"nodeType":"135","messageId":"136","endLine":393,"endColumn":12},{"ruleId":"133","severity":1,"message":"159","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":24},{"ruleId":"133","severity":1,"message":"160","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":10},{"ruleId":"133","severity":1,"message":"139","line":14,"column":21,"nodeType":"135","messageId":"136","endLine":14,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":33,"column":8,"nodeType":"142","endLine":33,"endColumn":10,"suggestions":"161"},{"ruleId":"133","severity":1,"message":"162","line":148,"column":7,"nodeType":"135","messageId":"136","endLine":148,"endColumn":16},{"ruleId":"133","severity":1,"message":"163","line":154,"column":7,"nodeType":"135","messageId":"136","endLine":154,"endColumn":12},{"ruleId":"133","severity":1,"message":"164","line":158,"column":7,"nodeType":"135","messageId":"136","endLine":158,"endColumn":12},{"ruleId":"133","severity":1,"message":"165","line":8,"column":9,"nodeType":"135","messageId":"136","endLine":8,"endColumn":14},{"ruleId":"133","severity":1,"message":"160","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":10},{"ruleId":"133","severity":1,"message":"139","line":17,"column":21,"nodeType":"135","messageId":"136","endLine":17,"endColumn":30},{"ruleId":"133","severity":1,"message":"166","line":30,"column":12,"nodeType":"135","messageId":"136","endLine":30,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":66,"column":8,"nodeType":"142","endLine":66,"endColumn":10,"suggestions":"167"},{"ruleId":"133","severity":1,"message":"168","line":132,"column":11,"nodeType":"135","messageId":"136","endLine":132,"endColumn":23},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["169"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Container' is defined but never used.","'setCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.token', 'handleLogout', and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["170"],"'Nav_Str' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'faEye' is defined but never used.","'faEyeSlash' is defined but never used.","'GoogleLogin' is defined but never used.","'logo' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'isKakaoSdkLoaded' is assigned a value but never used.","'cookies' is assigned a value but never used.","'user' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'Title' is assigned a value but never used.","'MemberSignUpPage' is defined but never used.","'iu' is defined but never used.",["171"],"'DetailRow' is assigned a value but never used.","'Label' is assigned a value but never used.","'Value' is assigned a value but never used.","'Badge' is defined but never used.","'addressFields' is assigned a value but never used.",["172"],"'validateForm' is assigned a value but never used.","no-object-constructor",{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},{"desc":"173","fix":"176"},"Update the dependencies array to be: [cookies.token, handleLogout, setUser]",{"range":"177","text":"178"},{"range":"179","text":"178"},{"range":"180","text":"178"},[1442,1444],"[cookies.token, handleLogout, setUser]",[1215,1217],[2592,2594]]