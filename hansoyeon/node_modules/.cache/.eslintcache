[{"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/index.js":"1","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/App.js":"2","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/reportWebVitals.js":"3","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/SigninPage.js":"4","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AnnouncementListPage.js":"5","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ThemaPage.js":"6","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecommendPage.js":"7","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/SignupPage.js":"8","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AnnouncementContentPage.js":"9","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/Navigate.js":"10","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/InputSkill.js":"11","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/MainPage.js":"12","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RegionPage.js":"13","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingNewsPage.js":"14","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewPage.js":"15","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/NewPage.js":"16","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/InfoChangePage.js":"17","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/MyInfoPage.js":"18","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/CompanySignupPage.js":"19","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/GoogleLoginPage.js":"20","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/MemberSignupPage.js":"21","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/Footer.js":"22","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/stores/index.js":"23","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/stores/user.store.js":"24","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AboutPage.js":"25","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecruitPage.js":"26","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/CompanyInfoChangePage.js":"27","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingReviewPage.js":"28","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewContentPage.js":"29","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AboutPolicyPage.js":"30","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingRecruitPage.js":"31","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecruitViewPage.js":"32"},{"size":535,"mtime":1699365264611,"results":"33","hashOfConfig":"34"},{"size":3515,"mtime":1700667622827,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1699365264611,"results":"36","hashOfConfig":"34"},{"size":14435,"mtime":1700463867044,"results":"37","hashOfConfig":"34"},{"size":7434,"mtime":1700484629788,"results":"38","hashOfConfig":"34"},{"size":17361,"mtime":1700308894573,"results":"39","hashOfConfig":"34"},{"size":3420,"mtime":1700706060317,"results":"40","hashOfConfig":"34"},{"size":6443,"mtime":1700463867045,"results":"41","hashOfConfig":"34"},{"size":7536,"mtime":1700463867043,"results":"42","hashOfConfig":"34"},{"size":10097,"mtime":1700706389270,"results":"43","hashOfConfig":"34"},{"size":1558,"mtime":1700056735572,"results":"44","hashOfConfig":"34"},{"size":12806,"mtime":1700492388344,"results":"45","hashOfConfig":"34"},{"size":17353,"mtime":1700456521661,"results":"46","hashOfConfig":"34"},{"size":4001,"mtime":1700476501558,"results":"47","hashOfConfig":"34"},{"size":3750,"mtime":1700654872984,"results":"48","hashOfConfig":"34"},{"size":44590,"mtime":1700704068403,"results":"49","hashOfConfig":"34"},{"size":18134,"mtime":1700548775455,"results":"50","hashOfConfig":"34"},{"size":7983,"mtime":1700548800504,"results":"51","hashOfConfig":"34"},{"size":13509,"mtime":1700548119621,"results":"52","hashOfConfig":"34"},{"size":854,"mtime":1700463867040,"results":"53","hashOfConfig":"34"},{"size":15566,"mtime":1700463867040,"results":"54","hashOfConfig":"34"},{"size":996,"mtime":1700463867040,"results":"55","hashOfConfig":"34"},{"size":64,"mtime":1700463867066,"results":"56","hashOfConfig":"34"},{"size":417,"mtime":1700463867066,"results":"57","hashOfConfig":"34"},{"size":15978,"mtime":1700666855589,"results":"58","hashOfConfig":"34"},{"size":2990,"mtime":1700667277509,"results":"59","hashOfConfig":"34"},{"size":16510,"mtime":1700548764970,"results":"60","hashOfConfig":"34"},{"size":4819,"mtime":1700636861909,"results":"61","hashOfConfig":"34"},{"size":1653,"mtime":1700654806609,"results":"62","hashOfConfig":"34"},{"size":3850,"mtime":1700670142349,"results":"63","hashOfConfig":"34"},{"size":5917,"mtime":1700667210998,"results":"64","hashOfConfig":"34"},{"size":1092,"mtime":1700667265076,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1z06aj9",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"69"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"69"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"69"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"69"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"69"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"69"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"69"},"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/index.js",[],[],["183","184","185","186","187","188"],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/App.js",["189"],[],"import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Routes, Route} from 'react-router-dom';\nimport Navigate from \"./Components/Navigate\";\nimport MainPage from \"./Pages/MainPage\";\nimport AnnouncementContentPage from \"./Pages/AnnouncementContentPage\";\nimport AnnouncementListPage from \"./Pages/AnnouncementListPage\";\nimport LoginPage from \"./Pages/SigninPage\"\nimport RegisterPage from \"./Pages/SignupPage\"\nimport MemberSignUpPage from \"./AuthPage/MemberSignupPage\";\nimport GoogleCallbackPage from \"./AuthPage/GoogleLoginPage\"\nimport CompanySignUpPage from \"./AuthPage/CompanySignupPage\";\nimport MyInfoPage from \"./Pages/MyInfoPage\";\nimport InfoChange from \"./Pages/InfoChangePage\";\nimport CompanyInfoChange from \"./Pages/CompanyInfoChangePage\";\nimport WritingNewsPage from \"./Pages/WritingNewsPage\";\nimport NewPage from \"./Pages/NewPage\";\nimport RecommendPage from \"./Pages/RecommendPage\";\nimport ThemePage from \"./Pages/ThemaPage\";\nimport RegionPage from \"./Pages/RegionPage\";\nimport ReviewPage from \"./Pages/ReviewPage\";\nimport AboutPage from \"./Pages/AboutPage\";\nimport RecruitPage from \"./Pages/RecruitPage\";\nimport InputSkill from './Components/InputSkill';\nimport WritingReviewPage from \"./Pages/WritingReviewPage\";\nimport ReviewContentPage from './Pages/ReviewContentPage';\nimport AboutPolicyPage from \"./Pages/AboutPolicyPage\";\nimport WritingRecruitPage from \"./Pages/WritingRecruitPage\";\nimport RecruitViewPage from \"./Pages/RecruitViewPage\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Navigate/>\n          <Routes>\n            <Route path = \"/\" element={<MainPage/>}></Route>\n            <Route path = \"/about\" element={<AboutPage/>}></Route>\n            <Route path=\"/announcementcontent/:anno_id\" element={<AnnouncementContentPage/>}></Route>\n            <Route path=\"/announcementlist\" element={<AnnouncementListPage/>}></Route>\n            <Route path = \"/login\" element={<LoginPage />}></Route>\n            <Route path = \"/register\" element={<RegisterPage />}></Route>\n            <Route path = \"/memberRegister\" element={<MemberSignUpPage />}></Route>\n            <Route path = \"/googleCallback\" element={<GoogleCallbackPage />}></Route>\n            <Route path = \"/companyRegister\" element={<CompanySignUpPage />}></Route>\n            <Route path = \"/MyInfo\" element={<MyInfoPage />}></Route>\n            <Route path = \"/infoChange\" element={<InfoChange />}></Route>\n            <Route path = \"/companyInfoChange\" element={<CompanyInfoChange />}></Route>\n            <Route path=\"/newcourse\" element={<NewPage/>}></Route>\n            <Route path=\"/writingNewsPage\" element={<WritingNewsPage/>}></Route>\n            <Route path=\"/recommendcourse\" element={<RecommendPage/>}></Route>\n            <Route path=\"/themecourse\" element={<ThemePage/>}></Route>\n            <Route path=\"/regioncourse\" element={<RegionPage/>}></Route>\n            <Route path=\"/review\" element={<ReviewPage/>}></Route>\n            <Route path=\"/recruit\" element={<RecruitPage/>}></Route>\n            <Route path=\"/writeReview\" element={<WritingReviewPage/>}></Route>\n            <Route path=\"/reviewContent/:id\" element={<ReviewContentPage />} />\n            <Route path=\"/aboutPolicy\" element={<AboutPolicyPage />} />\n            <Route path=\"/recruit/:id\" element={<RecruitViewPage/>}></Route>\n            <Route path=\"/recruit/write\" element={<WritingRecruitPage />} />\n          </Routes>\n        </BrowserRouter>\n      </div>\n  );\n}\n\nexport default App;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/reportWebVitals.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/SigninPage.js",["190","191","192","193"],[],"import React, {useEffect, useState} from 'react';\nimport {Form, Button, InputGroup} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from 'styled-components';\nimport {useNavigate} from 'react-router-dom';\nimport logo from \"../imgs/logo2.png\";\nimport kakao from \"../imgs/kakao.png\"\nimport google from \"../imgs/google.png\"\nimport company from \"../imgs/company.png\"\nimport member from \"../imgs/member.png\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport {useCookies} from \"react-cookie\";\nimport {useUserStore} from \"../stores\";\n\nconst SigninPage = (props) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [showMemberForm, setShowMemberForm] = useState(false);\n    const [showCompanyForm, setShowCompanyForm] = useState(false);\n    const navigate = useNavigate();\n\n    const [userId, setUserId] = useState('');\n    const [userPassword, setUserPassword] = useState('');\n    const [providerId, setProviderId] = useState('');\n    const [providerPassword, setProviderPassword] = useState('');\n\n    const [cookies, setCookies] = useCookies();\n    const {user, setUser} = useUserStore();\n\n    const [isKakaoSdkLoaded, setIsKakaoSdkLoaded] = useState(false);\n    const [userEmail, setUserEmail] = useState('');\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = \"https://developers.kakao.com/sdk/js/kakao.min.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        script.onload = () => {\n            if (window.Kakao && !window.Kakao.isInitialized()) {\n                window.Kakao.init('af3894518c9ad04274d8c7c098885abd');\n            }\n            setIsKakaoSdkLoaded(true); // SDK 로드 완료 후 상태 업데이트\n        };\n\n        return () => {\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, []);\n\n    const handleKakaoLoginImageClick = () => {\n\n        if (window.Kakao && window.Kakao.isInitialized()) { // Kakao SDK 초기화 확인\n            window.Kakao.Auth.login({\n                success: function(authObj) {\n                    window.Kakao.API.request({\n                        url: '/v2/user/me',\n                        success: function(response) {\n                            const userEmail = response.kakao_account?.email;\n                            if (userEmail) {\n                                setUserEmail(\"(kakao)\" + userEmail);\n                                handleKakaoLogin(\"(kakao)\" + userEmail);\n                            } else {\n                                console.log(\"이메일 정보를 가져올 수 없습니다.\");\n                            }\n                        },\n                        fail: function(error) {\n                            console.log(error);\n                        },\n                    });\n                },\n                fail: function(err) {\n                    console.log(err);\n                },\n            });\n        } else {\n            console.error(\"Kakao SDK가 아직 로드되지 않았거나 초기화되지 않았습니다.\");\n        }\n    };\n\n    const handleLogin = () => {\n        if(userId.length === 0 || userPassword.length === 0){\n            alert('아이디와 비밀번호를 입력하세요');\n            return;\n        }\n\n        const data = {\n            userId,\n            userPassword\n        }\n        axios.post(\"http://localhost:8050/api/auth/signIn\", data).then((response) => {\n            const responseData = response.data;\n            console.log(responseData);\n            if(!responseData.result){\n                alert('아이디 또는 비밀번호가 일치하지 않습니다. ');\n                return;\n            }\n            const { token, exprTime, user, userType } = responseData.data;\n            const expires = new Date();\n            expires.setMilliseconds(expires.getMilliseconds() + exprTime);\n\n            setCookies('token', token, {expires});\n            setCookies('userType', userType, {expires});\n            setUser(user);\n            navigate(\"/\");\n        }).catch((error) => {\n            alert('로그인에 실패했습니다. ')\n        })\n    };\n\n    const handleCompanyLogin = () => {\n        if(providerId.length === 0 || providerPassword.length === 0){\n            alert('아이디와 비밀번호를 입력하세요');\n            return;\n        }\n\n        const data = {\n            providerId,\n            providerPassword\n        }\n        axios.post(\"http://localhost:8050/api/auth/signIn/company\", data).then((response) => {\n            const responseData = response.data;\n            console.log(responseData);\n            if(!responseData.result){\n                alert('아이디 또는 비밀번호가 일치하지 않습니다. ');\n                return;\n            }\n            const { token, exprTime, user, userType } = responseData.data;\n            const expires = new Date();\n            expires.setMilliseconds(expires.getMilliseconds() + exprTime);\n\n            setCookies('token', token, {expires});\n            setCookies('userType', userType, {expires});\n            setUser(user);\n            navigate(\"/\")\n        }).catch((error) => {\n            alert('로그인에 실패했습니다. ')\n        })\n    };\n\n    const handleKakaoLogin = (userEmail) => {\n        axios.post(\"http://localhost:8050/api/auth/signIn/kakao\", { userEmail })\n            .then(response => {\n                const responseData = response.data;\n                if (!responseData.result) {\n                    alert('일치하는 사용자를 찾을 수 없습니다.');\n                    return;\n                }\n                const { token, exprTime, user, userType } = responseData.data;\n                const expires = new Date();\n                expires.setMilliseconds(expires.getMilliseconds() + exprTime);\n\n                setCookies('token', token, { expires });\n                setCookies('userType', userType, { expires });\n                setUser(user);\n                navigate(\"/\");\n            })\n            .catch(error => {\n                alert('로그인에 실패했습니다.');\n            });\n    };\n\n\n    const handleSignUp = () => {\n        navigate(\"/register\")\n    };\n\n    const togglePasswordVisibility = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleCompanyImageClick = () => {\n        setShowCompanyForm(true);\n    };\n\n    const handleMemberImageClick = () => {\n        setShowMemberForm(true);\n    };\n\n    const handleBack = () => {\n        setShowCompanyForm(false);\n        setShowMemberForm(false);\n    };\n\n\n    if (!showMemberForm && !showCompanyForm) {\n        return (\n            <StyledContainer>\n                <Title>로그인</Title>\n                <ImageContainer>\n                    <UserImg onClick={handleCompanyImageClick}>\n                        <SelectImg alt=\"company\" src={company} />\n                    </UserImg>\n                    <UserImg onClick={handleMemberImageClick}>\n                        <SelectImg alt=\"member\" src={member} />\n                    </UserImg>\n                </ImageContainer>\n            </StyledContainer>\n        );\n    }else if(showMemberForm && !showCompanyForm){\n        return (\n            <StyledContainer>\n                <FormBox>\n                    <BackButton onClick={handleBack}>\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                    </BackButton>\n                    <LogoImg src={logo} alt=\"Logo\" />\n                    <Form>\n                        <StyledFormGroup controlId=\"formBasicId\">\n                            <StyledFormControl\n                                type=\"text\"\n                                placeholder=\"아이디 입력\"\n                                onChange={(e) => setUserId(e.target.value)}\n                            />\n                        </StyledFormGroup>\n\n                        <StyledFormGroup controlId=\"formBasicPassword\">\n                            <InputGroup>\n                                <StyledFormControl\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    placeholder=\"비밀번호 입력\"\n                                    onChange={(e) => setUserPassword(e.target.value)}\n                                />\n                                <InputGroup.Text onClick={togglePasswordVisibility} style={{ borderLeft: 'none', cursor: 'pointer' }}>\n                                    <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\n                                </InputGroup.Text>\n                            </InputGroup>\n                        </StyledFormGroup>\n\n                        <StyledButton variant=\"primary\" type=\"button\" onClick={handleLogin}>\n                            로그인\n                        </StyledButton>\n\n                        <Divider>또는</Divider>\n                        <UserImg type=\"button\" onClick={handleKakaoLoginImageClick}>\n                            <KakaoImg alt=\"kakao\" src={kakao} />\n                        </UserImg>\n                        <UserImg >\n                            <GoogleImg alt=\"google\" src={google} />\n                        </UserImg>\n                    </Form>\n                    <NavigationLinks>\n                        <NavLink>아이디 찾기</NavLink>\n                        <NavLinkDivider>•</NavLinkDivider>\n                        <NavLink href=\"#find-password\">비밀번호 찾기</NavLink>\n                        <NavLinkDivider>•</NavLinkDivider>\n                        <NavLink onClick={handleSignUp}>회원가입</NavLink>\n                    </NavigationLinks>\n                </FormBox>\n            </StyledContainer>\n        )\n    }else if(!showMemberForm && showCompanyForm){\n        return (\n            <StyledContainer>\n                <FormBox>\n                    <BackButton onClick={handleBack}>\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                    </BackButton>\n                    <LogoImg src={logo} alt=\"Logo\" />\n                    <Form>\n                        <StyledFormGroup controlId=\"formBasicId\">\n                            <StyledFormControl\n                                type=\"text\"\n                                placeholder=\"기업 아이디 입력\"\n                                onChange={(e) => setProviderId(e.target.value)}\n                            />\n                        </StyledFormGroup>\n\n                        <StyledFormGroup controlId=\"formBasicPassword\">\n                            <InputGroup>\n                                <StyledFormControl\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    placeholder=\"비밀번호 입력\"\n                                    onChange={(e) => setProviderPassword(e.target.value)}\n                                />\n                                <InputGroup.Text onClick={togglePasswordVisibility} style={{ borderLeft: 'none', cursor: 'pointer' }}>\n                                    <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\n                                </InputGroup.Text>\n                            </InputGroup>\n                        </StyledFormGroup>\n\n                        <StyledButton variant=\"primary\" type=\"button\" onClick={handleCompanyLogin}>\n                            로그인\n                        </StyledButton>\n                    </Form>\n                    <NavigationLinks>\n                        <NavLink href=\"#find-id\">아이디 찾기</NavLink>\n                        <NavLinkDivider>•</NavLinkDivider>\n                        <NavLink href=\"#find-password\">비밀번호 찾기</NavLink>\n                        <NavLinkDivider>•</NavLinkDivider>\n                        <NavLink onClick={handleSignUp}>회원가입</NavLink>\n                    </NavigationLinks>\n                </FormBox>\n            </StyledContainer>\n\n        )\n\n    }\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #ffffff;\n`;\n\nconst FormBox = styled.div`\n  padding: 40px;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 450px; \n  margin-top: 20px;\n  position: relative;\n`;\n\nconst StyledFormGroup = styled(Form.Group)`\n  margin-bottom: 20px; \n`;\n\nconst StyledFormControl = styled(Form.Control)`\n  font-size: 16px; \n  padding: 10px; \n  \n  ::placeholder {\n    color: #666; \n  }\n`;\n\nconst StyledButton = styled(Button)`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst LogoImg = styled.img`\n  height: 20vh;\n  width: auto;\n  margin-bottom: 20px;\n`;\n\nconst Divider = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px solid #ccc;\n  }\n\n  &::before {\n    margin-right: 10px;\n  }\n\n  &::after {\n    margin-left: 10px;\n  }\n`;\n\nconst UserImg = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n\nconst SelectImg = styled.img`\n  height: 45vh;\n  width: auto;\n  margin-right: 20px;\n`;\n\nconst KakaoImg = styled.img`\n  height: 5.5vh;\n  width: auto;\n`;\n\nconst GoogleImg = styled.img`\n  height: 7vh;\n  width: auto;\n`;\n\nconst NavigationLinks = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 13px;\n  font-weight: bolder;\n  margin-top: 25px;\n`;\n\nconst NavLink = styled.a`\n  text-decoration: none;\n  color: #000; \n  margin: 0 10px;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst NavLinkDivider = styled.span`\n  color: #000; \n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em; \n  color: #000; \n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 80px;\n  align-items:center;\n  font-size: 40px;\n  font-weight: 700;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n\n\nexport default SigninPage;\n","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AnnouncementListPage.js",["194","195","196"],[],"import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport navigate from \"../Components/Navigate\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport data from \"bootstrap/js/src/dom/data\";\nconst AnnouncementListPage = (props) => {\n    const navigate = useNavigate();\n    const [announcements, setAnnouncements] = useState([]);\n    //페이지 시작번호\n    const [currentPage, setCurrentPage] = useState(1);\n    //최대 5개까지만 목록에 표시\n    const itemsPerPage = 5;\n    //글 작성 버튼 클릭시 작성페이지로 이동\n    const WritingNews = () => {\n        navigate(\"/WritingNewsPage\");\n    }\n    // 전체 공지사항 목록에서 현재 페이지에 표시할 목록만 추출\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItems = announcements.slice(indexOfFirstItem, indexOfLastItem);\n    // 글 번호 고유Id값\n     // 글 제목 클릭시 상세내용 페이지 이동\n    const viewAnnouncement = async (annoId) => {\n        try {\n            const response = await axios.get(`http://localhost:8050/api/announcements/${annoId}`);\n            const data = response.data;\n            await axios.put(`http://localhost:8050/api/announcements/${annoId}/increaseViews`);\n\n            navigate(`/AnnouncementContent/${annoId}`);\n        } catch (error) {\n            console.error('Error fetching or updating announcement:', error);\n        }\n    };\n\n\n    //글 목록 띄우기\n    useEffect(() => {\n        // API 호출을 통해 공지사항 목록 가져오기\n        axios.get('http://localhost:8050/api/announcements')\n            .then(response => {\n\n                // 받아온 목록을 오름차순으로 정렬\n                const reversedAnnouncements = [...response.data].reverse();\n                setAnnouncements(reversedAnnouncements);\n            })\n            .catch(error => console.error('Error fetching announcements:', error));\n    }, []);\n\n    // 페이지 번호 클릭 시 호출되는 함수\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n    return (\n        <Container>\n            <MiddleContainer>\n                <AnnouncementTitle>공지사항</AnnouncementTitle>\n                <NewsTitle>\n                    <SmallNewsTitle>\n                        <LeftNewsTitle>한소연 소식</LeftNewsTitle>\n                        <RightNewsTitle>\n                            <WritingButton onClick={WritingNews}>글 작성</WritingButton>\n                            <ExitButton>더 보기 ></ExitButton>\n                        </RightNewsTitle>\n                    </SmallNewsTitle>\n                </NewsTitle>\n                <MainTitle>\n                    <TopMainTitle>\n                        <h3 style={{flex: '1', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>번호</h3>\n                        <h3 style={{flex: '3', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>제목</h3>\n                        <h3 style={{flex: '1.3', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>등록일</h3>\n                        <h3 style={{flex: '0.7', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', color: \"#747474\",justifyContent:'center'}}>조회수</h3>\n                    </TopMainTitle>\n                    <BottomTitle>\n                        {currentItems.map((announcement) => (\n                            <BottomContent key={announcement.anno_id}>\n                            <h3 style={{flex: '1', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>{announcement.anno_id}</h3>\n                            <button style={{flex: '3', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\",border: 'none', backgroundColor:'white'}} onClick={() => viewAnnouncement(announcement.anno_id)} >{announcement.anno_title}</button>\n                            <h3 style={{flex: '1.3', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>{announcement.anno_regist.substring(0, 10)}</h3>\n                            <h3 style={{flex: '0.7', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', color: \"#747474\",justifyContent:'center'}}>{announcement.anno_views}</h3>\n                        </BottomContent>\n                            ))}\n                    </BottomTitle>\n                </MainTitle>\n                <Pagination>\n                    {Array.from({ length: Math.ceil(announcements.length / itemsPerPage) }, (_, i) => i + 1).map((number) => (\n                        <PageNumber key={number} onClick={() => paginate(number)}>\n                            {number}\n                        </PageNumber>\n                    ))}\n                </Pagination>\n            </MiddleContainer>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 700px;\n  align-items: center;\n  justify-content: center;\n`\n\nconst MiddleContainer = styled.div`\n  display: flex;\n  height: 500px;\n  width: 1000px;\n  flex-direction: column;\n`\nconst AnnouncementTitle = styled.div`\n  display: flex;\n  flex: 1;\n  align-items:center;\n  font-size: 40px;\n  font-weight: 700;\n`\n\nconst NewsTitle = styled.div`\n  display: flex;\n  flex: 2;\n  flex-direction: row;\n  align-items: center;\n`\nconst SmallNewsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 60px;\n  flex: 1;\n`\n\nconst LeftNewsTitle = styled.div`\n  display: flex;\n  flex: 5;\n  height: 60px;\n  font-size: 20px;\n  align-items: center;\n  margin-left: 0.5rem;\n`\n\nconst RightNewsTitle = styled.div`\n  display: flex;\n  flex: 5;\n  height: 60px;\n  font-weight: 700;\n  align-items: center;\n  justify-content: right;\n`\nconst WritingButton = styled.button`\n  background-color: skyblue;\n  display: flex;\n  width: 100px;\n  height: 40px;\n  text-align: center;\n  color: white;\n  margin-right: 1rem;\n  border-radius: 10px;\n  font-size: 20px;\n  align-items: center;\n  justify-content: center;\n  border: none;\n`\n\nconst ExitButton = styled.div`\n  display: flex;\n  width: 100px;\n  height: 40px;\n  text-align: center;\n  color: white;\n  border-radius: 10px;\n  background-color: mediumseagreen;\n  font-size: 20px;\n  float: right;\n  align-items: center;\n  justify-content: center;\n`\nconst MainTitle = styled.div`\n  display: flex;\n  flex: 7;\n  flex-direction: column;\n`\nconst TopMainTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 2px solid hotpink;\n  border-top: 2px solid gray;\n  height: 50px;\n  align-items: center;\n`\nconst BottomTitle = styled.div`\n  display: flex;\n  height: 250px;\n  flex-direction: column;\n\n`\nconst BottomContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 50px;\n  border-bottom: 1px solid skyblue;\n`\n\nconst Pagination = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst PageNumber = styled.div`\n  cursor: pointer;\n  margin: 0 0.5rem;\n  padding: 0.3rem 0.5rem;\n  border: 1px solid #61dafb;\n  border-radius: 5px;\n  color: #61dafb;\n  &:hover {\n    background-color: #61dafb;\n    color: white;\n  }\n`;\n\nexport default AnnouncementListPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ThemaPage.js",["197"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sharing from '../imgs/sharing.png';\nimport bookmark from '../imgs/bookmark.png';\nimport hart from '../imgs/hart.png';\nimport jijele from '../imgs/jijele.jpeg';\n\nconst ThemaPage = (props) => {\n    // 공유\n    const handleSharingClick = () => {\n        console.log('Click');\n    };\n    // 북마크\n    const handleBookmarkClick = () => {\n        console.log('Click2');\n    };\n    // 좋아요\n    const handleHartClick = () => {\n        console.log('Click3');\n    };\n    const [activeTab, setActiveTab] = useState(1);\n\n    const handleTabClick = (tabNumber) => {\n        setActiveTab(tabNumber);\n    };\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 1:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                <NewCourseContainer>\n                                    <NewCourseTitle>테마별 코스</NewCourseTitle>\n                                </NewCourseContainer>\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                            <SmallTitleContainer>\n                                <SmallTitle>\n                                    <SmallTitleContent>[으메 ~ 보자마자 깜짝놀랐구만~ 윤승준 피지컬보소잉 ~?]</SmallTitleContent>\n                                </SmallTitle>\n                                <SmallTag>{/* 이부분에 InputSkill 추가하면됨 */}</SmallTag>\n                            </SmallTitleContainer>\n                            <ContentContainer>\n                                <ContentTitleContainer>\n                                    <ContentSmallTitleContainer>모집 일정</ContentSmallTitleContainer>\n                                </ContentTitleContainer>\n                                <ContentMainContainer>\n                                    <ContentMainTextContainer>\n                                        <ContentTitle>\n                                            <h2>웹 디자이너</h2>\n                                            <h3>(경력)</h3>\n                                        </ContentTitle>\n                                        <ContentMemory>\n                                            <h2>이런 일을 해요</h2>\n                                            <ul>\n                                                <li>11</li>\n                                                <li>22</li>\n                                                <li>33</li>\n                                            </ul>\n                                        </ContentMemory>\n                                    </ContentMainTextContainer>\n                                </ContentMainContainer>\n                            </ContentContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 4:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return <Container>{renderTabContent()}</Container>;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  flex-direction: column;\n  //background-color: blue;\n`;\nconst TopImage = styled.img`\n  height: 300px;\n  width: 500px;\n`;\nconst TopContainer = styled.div`\n  //background-color: red;\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst MiddleContainer = styled.div`\n  //background-color: orange;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst MiddleTopContainer = styled.div`\n  //background-color: blue;\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n`;\nconst ThreeImgs = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: gray;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 2rem;\n`;\nconst StyledButton = styled.button`\n  background: none;\n  border: none;\n`;\nconst StyledImage = styled.img`\n  width: 20px;\n  height: 15px;\n`;\nconst MiddleBottomContainer = styled.div`\n  //background-color: pink;\n  display: flex;\n  flex: 8;\n`;\n\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 7;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewCourseTitle = styled.div`\n  font-size: 44px;\n  color: orange;\n  font-weight: 800;\n  //background-color: green;\n`;\n\nconst BottomContainer = styled.div`\n  //background-color: yellow;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst MenuContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  //background: #61dafb;\n`;\nconst MenuTitle = styled.div`\n  display: flex;\n  flex: 0.6;\n  flex-direction: row;\n  height: 50px;\n  //background-color: red;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\nconst TabButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 24px;\n  margin: 0 10px;\n  position: relative;\n\n  // hover 효과\n  &:hover {\n    color: orange;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n\n  // 선택된 탭의 스타일\n  &.active {\n    color: orange;\n    font-size: 32px;\n    font-weight: 700;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n`;\n\nconst SmallTitleContainer = styled.div`\n  //background-color: purple;\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  margin-top: 1rem;\n`;\nconst SmallTitle = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: yellow;\n  justify-content: center;\n  align-items: center;\n`;\nconst SmallTitleContent = styled.div`\n  display: flex;\n  flex: 0.6;\n  //background-color: orange;\n  font-size: 36px;\n  font-weight: 700;\n`;\nconst SmallTag = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: green;\n`;\nconst ContentContainer = styled.div`\n  //background-color: bisque;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst ContentTitleContainer = styled.div`\n  display: flex;\n  flex: 1.5;\n  //background-color: gray;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: 700;\n  align-items: center;\n`;\nconst ContentSmallTitleContainer = styled.div`\n  display: flex;\n  flex: 0.6;\n  margin-top: 1rem;\n`;\nconst ContentMainContainer = styled.div`\n  display: flex;\n  flex: 8.5;\n  justify-content: center;\n  align-items: flex-start; /* 세로 기준으로 top에 위치하도록 설정 */\n`;\nconst ContentMainTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: brown;\n  border-radius: 5px;\n  border: dodgerblue 5px solid;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  width: 1100px;\n  height: 400px;\n`;\nconst ContentTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  align-items: flex-start;\n  //background-color: white;\n  h2 {\n    color: dodgerblue;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n  }\n\n  h3 {\n    color: dodgerblue;\n    font-weight: 600;\n    margin-left: 2rem;\n  }\n`;\nconst ContentMemory = styled.div`\n  display: flex;\n  flex: 8;\n  flex-direction: column;\n  //background-color: yellow;\n  border-left: dodgerblue 3px solid;\n  align-items: flex-start;\n  h2 {\n    color: black;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    //background-color: red;\n  }\n  ul {\n    //background-color: gray;\n    display: block;\n    flex-direction: column;\n    list-style-type: disc; /* 원형 글머리 기호 */\n    margin-top: 1rem;\n  }\n\n  li {\n    font-size: 24px;\n    display: flex;\n    color: black;\n    font-weight: 600;\n    margin-bottom: 0.5em; /* 각 항목 사이의 간격 조절 */\n  }\n`;\n\n\nexport default ThemaPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecommendPage.js",["198"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/SignupPage.js",["199","200","201","202","203","204","205"],[],"import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {useNavigate} from 'react-router-dom';\nimport company from \"../imgs/company.png\"\nimport member from \"../imgs/member.png\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\nimport kakao from \"../imgs/kakaoRegister.png\";\nimport google from \"../imgs/googleRegister.png\";\nimport email from \"../imgs/emailRegister.png\"\nimport GoogleLogin from \"react-google-login\";\nimport logo from \"../imgs/logo2.png\";\nimport {Form, InputGroup} from \"react-bootstrap\";\nconst SignupPage = (props) => {\n    const [showMemberForm, setShowMemberForm] = useState(false);\n    const [isKakaoSdkLoaded, setIsKakaoSdkLoaded] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = \"https://developers.kakao.com/sdk/js/kakao.min.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        script.onload = () => {\n            if (window.Kakao && !window.Kakao.isInitialized()) {\n                window.Kakao.init('af3894518c9ad04274d8c7c098885abd');\n            }\n            setIsKakaoSdkLoaded(true); // SDK 로드 완료 후 상태 업데이트\n        };\n\n        return () => {\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, []);\n\n    const handleCompanyImageClick = () => {\n        navigate(\"/companyRegister\")\n    };\n\n    const handleMemberImageClick = () => {\n        setShowMemberForm(true);\n    };\n\n    const handleGoogleRegisterImageClick = () => {\n        const clientId = \"234889770604-vcqi694q1kvfblt30ajhq77gsh5s8j2t.apps.googleusercontent.com\";\n        const redirectUri = \"http://localhost:3000/googleCallback\";\n        const scope = \"https://www.googleapis.com/auth/userinfo.email\";\n        const url = `https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&access_type=offline&prompt=consent`;\n\n        window.location.href = url;\n    };\n\n    const handleEmailRegisterImageClick = () => {\n        navigate(\"/memberRegister\")\n    };\n\n    const handleBack = () => {\n        setShowMemberForm(false);\n    };\n\n    const handleKakaoRegisterImageClick = () => {\n\n        if (window.Kakao && window.Kakao.isInitialized()) { // Kakao SDK 초기화 확인\n            window.Kakao.Auth.login({\n                success: function(authObj) {\n                    console.log(authObj); // 인증 객체 확인\n\n                    window.Kakao.API.request({\n                        url: '/v2/user/me',\n                        success: function(response) {\n                            console.log(response);\n                            if (response.kakao_account && response.kakao_account.email) {\n                                const email = \"(kakao)\" + response.kakao_account.email;\n                                navigate(\"/memberRegister\", { state: { email } });\n                            } else {\n                                console.log(\"이메일 정보를 가져올 수 없습니다.\");\n                            }\n                        },\n                        fail: function(error) {\n                            console.log(error);\n                        },\n                    });\n                },\n                fail: function(err) {\n                    console.log(err);\n                },\n            });\n        } else {\n            console.error(\"Kakao SDK가 아직 로드되지 않았거나 초기화되지 않았습니다.\");\n        }\n    };\n\n\n    if (!showMemberForm) {\n        return (\n            <StyledContainer>\n                <Title>회원가입</Title>\n                <ImageContainer>\n                    <UserImg onClick={handleCompanyImageClick}>\n                        <SelectImg alt=\"company\" src={company} />\n                    </UserImg>\n                    <UserImg onClick={handleMemberImageClick}>\n                        <SelectImg alt=\"member\" src={member} />\n                    </UserImg>\n                </ImageContainer>\n            </StyledContainer>\n        );\n    }else if(showMemberForm){\n        return (\n            <StyledContainer>\n                <FormBox>\n                    <BackButton onClick={handleBack}>\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                    </BackButton>\n                    <Title>일반회원가입</Title>\n                    <UserImg onClick={handleKakaoRegisterImageClick}>\n                        <RegisterSelectImg alt=\"kakao\" src={kakao} />\n                    </UserImg>\n                    <UserImg onClick={handleGoogleRegisterImageClick}>\n                        <RegisterSelectImg alt=\"google\" src={google} />\n                    </UserImg>\n                    <UserImg onClick={handleEmailRegisterImageClick}>\n                        <RegisterEmailImg alt=\"email\" src={email} />\n                    </UserImg>\n                </FormBox>\n            </StyledContainer>\n        )\n    }\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #ffffff;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 80px;\n  align-items:center;\n  justify-content: center;\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst UserImg = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n\nconst SelectImg = styled.img`\n  height: 45vh;\n  width: auto;\n  margin-right: 20px;\n`;\n\nconst RegisterSelectImg = styled.img`\n  height: 10vh;\n  width: 500px;\n  margin-bottom: 20px;\n`;\n\nconst RegisterEmailImg = styled.img`\n  height: 8.8vh;\n  width: 500px;\n  margin-bottom: 20px;\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em; \n  color: #000; \n`;\n\nconst FormBox = styled.div`\n  padding: 40px;\n  justify-content: center;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 600px;\n  margin-top: 150px;\n  position: relative;\n`;\n\nexport default SignupPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AnnouncementContentPage.js",["206","207","208","209","210","211"],[],"import React, { useEffect, useState } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {responsivePropType} from \"react-bootstrap/createUtilityClasses\";\nimport axios from \"axios\";\n\nconst AnnouncementContentPage = () => {\n    const { anno_id } = useParams();\n    const [announcement, setAnnouncement] = useState(null);\n    const writer = '관리자';\n    const navigate = useNavigate();\n    const [isEditing, setIsEditing] = useState(false);\n    const [modifiedContent, setModifiedContent] = useState('');\n    const [updateFlag, setUpdateFlag] = useState(false);\n\n    // 수정 버튼 클릭 시 수정 모드 활성화\n    const activateEditMode = () => {\n        setIsEditing(true);\n    };\n\n    // 수정 취소 시 수정 모드 비활성화 및 내용 초기화\n    const cancelEdit = () => {\n        setIsEditing(false);\n        setModifiedContent(announcement.anno_content); // 수정된 내용을 이전 내용으로 초기화\n    };\n\n    // 글 내용이 수정될 때마다 상태 업데이트\n    const handleContentChange = (e) => {\n        setModifiedContent(e.target.value);\n    };\n\n    //삭제 물어보는메서드\n    const confirmDelete = () => {\n        const isConfirmed = window.confirm('삭제하시겠습니까?');\n        if (isConfirmed) {\n            deleteAnnouncement();\n        }\n    };\n\n    //삭제 메서드\n    const deleteAnnouncement = async () => {\n        try {\n            const response = await axios.delete(`http://localhost:8050/api/announcements/${anno_id}`);\n            if (response.status === 200) {\n                alert(\"삭제 되었습니다.\");\n                navigate(\"/announcementlist\");\n            } else {\n                throw new Error('Failed to delete announcement');\n            }\n        } catch(error) {\n            console.error('error', error);\n        }\n    };\n\n    //수정 메서드\n    const saveEdit = async () => {\n        const modifiedData = {\n            anno_content: modifiedContent,\n        };\n        try {\n            const response = await axios.put(`http://localhost:8050/api/announcements/${anno_id}`,modifiedData)\n\n            if (response.status ===200) {\n                alert(\"수정 되었습니다.\");\n                setUpdateFlag((prevFlag) => !prevFlag);\n            } else {\n                throw new Error('Failed to modify announcement');\n            }\n        } catch (error) {\n            console.error('Error modifying announcement: ', error);\n        }\n    };\n\n    useEffect(() => {\n        if (updateFlag) {\n            setIsEditing(false);\n        }\n        fetchAnnouncement();\n    }, [anno_id, updateFlag]);\n\n    // 수정되었을 때 호출되는 함수\n    const handleUpdateFlag = () => {\n        setUpdateFlag((prevFlag) => !prevFlag);\n    };\n\n    const fetchAnnouncement = async () => {\n        try {\n            const response = await axios.get(`http://localhost:8050/api/announcements/${anno_id}`)\n            if (response.status !== 200 ) {\n                throw new Error('Failed to fetch announcement content');\n            }\n            const data = response.data;\n            setAnnouncement(data);\n            setModifiedContent(data.anno_content);\n            console.log('Announcement Content: ', data);\n        } catch (error) {\n            console.error('Error fetching announcement content: ', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchAnnouncement();\n    }, [anno_id]);\n\n\n    if (!announcement) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Container>\n            <NoticeTitleContainer>공지사항</NoticeTitleContainer>\n            <MiddleContainer>\n\n                <Title>\n                    <h2>글 제목 : {announcement.anno_title}</h2>\n                    <h6>조회수 : {announcement.anno_views}</h6>\n                </Title>\n                <WriterContainer>\n                    <h6>작성자 : {writer} </h6>\n                </WriterContainer>\n                <ContentContainer>\n                    {isEditing ? (\n                        // 수정 모드일 때 textarea로 변경\n                        <textarea\n                            value={modifiedContent}\n                            onChange={(e) => setModifiedContent(e.target.value)}\n                            rows={10}\n                            style={{ width: '100%' }}\n                        />\n                    ) : (\n                        // 수정 모드가 아닐 때는 <p> 태그로 표시\n                        <p>{announcement.anno_content}</p>\n                    )}\n                </ContentContainer>\n            </MiddleContainer>\n            <ButtonContainer>\n                {isEditing ? (\n                    // 수정 모드일 때 저장 및 취소 버튼 표시\n                    <>\n                        <SaveButton onClick={saveEdit}>저장</SaveButton>\n                        <CancelButton onClick={cancelEdit}>취소</CancelButton>\n                    </>\n                ) : (\n\n                    // 수정 모드가 아닐 때 수정 버튼 표시\n                    <EditButton onClick={activateEditMode}>수정</EditButton>\n                )}\n                <DeleteButton onClick={confirmDelete}>삭제</DeleteButton>\n            </ButtonContainer>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 700px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MiddleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 900px;\n  height: 500px;\n  background-color: #f8f8f8; /* Light gray background */\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow */\n  padding: 20px; /* Add some padding */\n  margin-top: 20px; /* Add space at the top */\n`;\n\nconst NoticeTitleContainer = styled.div`\n  font-size: 40px;\n  font-weight: 700;\n  width: 800px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\nconst EditButton = styled.button`\n  background-color: #007bff;\n  border: none;\n  color: white;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n  margin-right: 1rem;\n`;\nconst Title = styled.div`\n  display: flex;\n  flex: 1;\n  font-size: 20px;\n  align-items: center;\n  margin-left: 2rem;\n  margin-right: 2rem;\n  justify-content: space-between;\n`;\n\nconst WriterContainer = styled.div`\n  display: flex;\n  font-size: 20px;\n  flex: 3;\n  align-items: center;\n  margin-left: 1rem;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex: 4;\n  font-size: 20px;\n  margin-left: 1rem;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 50px;\n  width: 900px;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst SaveButton = styled.button`\n  background-color: #28a745;\n  border: none;\n  color: white;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n  margin-right: 1rem;\n`;\n\nconst CancelButton = styled.button`\n  background-color: #dc3545;\n  border: none;\n  color: white;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n  margin-right: 1rem;\n`;\n\nconst DeleteButton = styled.button`\n  background-color: #ff3b30; /* Red color */\n  border: none;\n  color: white;\n  border-radius: 10px;\n  margin-right: 1rem;\n  width: 80px;\n  height: 30px;\n`;\n\nconst ModifyButton = styled.button`\n  background-color: #007bff; /* Blue color */\n  border: none;\n  color: white;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n`;\n\nexport default AnnouncementContentPage;\n","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/Navigate.js",["212","213","214","215","216","217","218","219","220","221"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/InputSkill.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/MainPage.js",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240"],[],"import React, {useState, useCallback, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n//swiper App.css에 추가한후 import\nimport {Swiper, SwiperSlide} from 'swiper/react';     //swiper 사용할 import\nimport {Autoplay, Pagination} from 'swiper/modules';\nimport 'swiper/css';\nimport 'swiper/css/pagination';\nimport '../App.css';\nimport new1 from '../imgs/newcourse-1.png';\nimport new2 from '../imgs/newcourse-2.png';\nimport new3 from '../imgs/newcourse-3.png';\nimport new4 from '../imgs/newcourse-4.png';\nimport recommend1 from '../imgs/recommendcourse-1.png';\nimport recommend2 from '../imgs/recommendcourse-2.png';\nimport Footer from '../Components/Footer';\nimport logo from \"../imgs/logo-removebg.png\";\n//리뷰 Test 데이터\nconst dummyReviews = [\n    {\n        id: 1,\n        title: \"멋진 경험이었습니다!\",\n        content: \"가이드분이 너무 친절하셨고, 경치도 환상적이었어요. 다음에 또 방문하고 싶습니다.\",\n        author: \"홍길동\",\n        date: \"2023-01-01\"\n    },\n    {\n        id: 2,\n        title: \"가족과 함께한 최고의 여행\",\n        content: \"아이들과 함께 갔는데 모두가 즐거워했습니다. 추천해요!\",\n        author: \"김철수\",\n        date: \"2023-02-15\"\n    },\n    {\n        id: 3,\n        title: \"다시 오고 싶은 곳\",\n        content: \"서비스도 좋았고, 특히 음식이 맛있었습니다. 여행의 즐거움을 더해주는 곳이었어요.\",\n        author: \"이영희\",\n        date: \"2023-03-20\"\n    }\n];\n\n\n//===============================페이지 UI========================================\n\nconst MainPage = () => {\n\n    return (\n        <div>\n            <MainContainer>\n                <NewCourseContainer>\n                    <NewCourseTitle><h1>신규코스</h1></NewCourseTitle>\n                    <NewCourseSubTitle>이달의 추천코스</NewCourseSubTitle>\n                    <NewCourseImage>\n                        <>\n                            <Swiper\n                                slidesPerView={3}\n                                spaceBetween={30}\n                                modules={[Pagination, Autoplay]} // Autoplay 모듈 추가\n                                className=\"mySwiper\"\n                                autoplay={{\n                                    delay: 2000, // 2초마다 슬라이드\n                                    disableOnInteraction: false // 사용자가 슬라이더를 조작한 후에도 자동 재생 계속\n                                }}\n                                speed={1300} // 슬라이드 전환 속도를 1.3초로 설정\n                                // pagination 속성 제거\n                            >\n                                <SwiperSlide><img src={new1} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new2} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new3} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new4} style={{width: '340px'}}/></SwiperSlide>\n                            </Swiper>\n                        </>\n                    </NewCourseImage>\n                </NewCourseContainer>\n                <RecommendCourseContainer>\n                    <RecommendCourseTitle><h1>추천 코스</h1></RecommendCourseTitle>\n                    <RecommendCourseSubTitle>일자리 및 여행 추천</RecommendCourseSubTitle>\n                    <RecommendCourseImage>\n                        <>\n                            <Swiper\n                                slidesPerView={3}\n                                spaceBetween={30}\n                                modules={[Pagination, Autoplay]} // Autoplay 모듈 추가\n                                className=\"mySwiper\"\n                                autoplay={{\n                                    delay: 2000, // 2초마다 슬라이드\n                                    disableOnInteraction: false // 사용자가 슬라이더를 조작한 후에도 자동 재생 계속\n                                }}\n                                speed={1300} // 슬라이드 전환 속도를 1.3초로 설정\n                                // pagination 속성 제거\n                            >\n                                <SwiperSlide><img src={recommend1} style={{width: '310px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={recommend2} style={{width: '310px'}}/></SwiperSlide>\n                                <SwiperSlide>3</SwiperSlide>\n                                <SwiperSlide>4</SwiperSlide>\n                                <SwiperSlide>5</SwiperSlide>\n\n                            </Swiper>\n                        </>\n                    </RecommendCourseImage>\n                </RecommendCourseContainer>\n                <ThemaCourseContainer>\n                    <ThemaCourseTitle><h1>테마별 코스</h1></ThemaCourseTitle>\n                    <ThemaCourseSubTitle>원하는 테마별로 분류된 코스</ThemaCourseSubTitle>\n                    <ThemaCouseImage>\n\n                        <>\n                            <Swiper\n                                slidesPerView={3}\n                                spaceBetween={30}\n                                modules={[Pagination, Autoplay]} // Autoplay 모듈 추가\n                                className=\"mySwiper\"\n                                autoplay={{\n                                    delay: 2000, // 2초마다 슬라이드\n                                    disableOnInteraction: false // 사용자가 슬라이더를 조작한 후에도 자동 재생 계속\n                                }}\n                                speed={1300} // 슬라이드 전환 속도를 1.3초로 설정\n                                // pagination 속성 제거\n                            >\n                                <SwiperSlide><img src={new1} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new2} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new3} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new4} style={{width: '340px'}}/></SwiperSlide>\n                            </Swiper>\n                        </>\n\n                    </ThemaCouseImage>\n                </ThemaCourseContainer>\n\n                <RegionalCourseContainer>\n                    <RegionalCourseTitle><h1>지역별 코스</h1></RegionalCourseTitle>\n                    <RegionalCourseSubTitle>원하는 테마별로 분류된 코스</RegionalCourseSubTitle>\n                    <RegionalCouseImage>\n\n                        <>\n                            <Swiper\n                                slidesPerView={3}\n                                spaceBetween={30}\n                                modules={[Pagination, Autoplay]} // Autoplay 모듈 추가\n                                className=\"mySwiper\"\n                                autoplay={{\n                                    delay: 2000, // 2초마다 슬라이드\n                                    disableOnInteraction: false // 사용자가 슬라이더를 조작한 후에도 자동 재생 계속\n                                }}\n                                speed={1300} // 슬라이드 전환 속도를 1.3초로 설정\n                                // pagination 속성 제거\n                            >\n                                <SwiperSlide><img src={new1} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new2} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new3} style={{width: '340px'}}/></SwiperSlide>\n                                <SwiperSlide><img src={new4} style={{width: '340px'}}/></SwiperSlide>\n\n                            </Swiper>\n                        </>\n\n                    </RegionalCouseImage>\n                </RegionalCourseContainer>\n                <ReviewContainer>\n                    <ReviewTitle>체험 후기</ReviewTitle>\n                    <ReviewSubTitle>다양한 체험 후기를 들어보세요</ReviewSubTitle>\n                    <ReviewContext>\n\n                        {dummyReviews.map(review => (\n                            <Review\n                                key={review.id}\n                                title={review.title}\n                                content={review.content}\n                                author={review.author}\n                                date={review.date}\n                            />\n                        ))}\n\n                    </ReviewContext>\n                </ReviewContainer>\n                <Footer/>\n            </MainContainer>\n        </div>\n    );\n};\n\n//==============================================페이지 CSS===================================================\n//=================페이지전체 컨테이너==============\nconst MainContainer = styled.div`\n  font-family: 'Arial', sans-serif;\n`\n\n// =============================================\n//==================신규코스 css==================\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 500px;\n  border-bottom: 2px solid #dee2e6;\n  padding-left: 50px;\n`\n\nconst NewCourseTitle = styled.div`\n  display: flex;\n  flex: 2;\n  background-color: white;\n  margin-top: 30px;\n  margin-bottom: -40px;\n  color: #D1774C;\n`\nconst NewCourseSubTitle = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: white;\n  padding-top: 0;\n  font-weight: bolder;\n  \n`\n\nconst NewCourseImage = styled.div`\n  display: flex;\n  flex: 7;\n  background-color: white;\n`\n//==============================================\n//==================추천코스 css===================\nconst RecommendCourseContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 300px;\n  padding-left: 50px;\n  border-bottom: 2px solid #dee2e6;\n`\nconst RecommendCourseTitle = styled.div`\n  display: flex;\n  flex: 2;\n  background-color: white;\n  margin-top: 30px;\n  margin-bottom: -40px;\n  border-bottom: 2px solid #dee2e6;\n  color: #D1774C;\n`\nconst RecommendCourseSubTitle = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: white;\n  font-weight: bolder;\n`\nconst RecommendCourseImage = styled.div`\n  display: flex;\n  flex: 4;\n`\n//==============================================\n//==============테마별코스=========================\nconst ThemaCourseContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 500px;\n  border-bottom: 2px solid #dee2e6;\n  padding-left: 50px;\n`\nconst ThemaCourseTitle = styled.div`\n  display: flex;\n  flex: 2;\n  background-color: white;\n  margin-top: 30px;\n  margin-bottom: -40px;\n  color: #D1774C;\n`\nconst ThemaCourseSubTitle = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: white;\n  font-weight: bolder;\n`\nconst ThemaCouseImage = styled.div`\n  display: flex;\n  flex: 7;\n`\n//==============================================\n//==================지역별 코스 css=================\nconst RegionalCourseContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 500px;\n  border-bottom: 2px solid #dee2e6;\n  padding-left: 50px;\n`\nconst RegionalCourseTitle = styled.div`\n  display: flex;\n  flex: 2;\n  background-color: white;\n  margin-top: 30px;\n  margin-bottom: -40px;\n  color: #D1774C;\n`\nconst RegionalCourseSubTitle = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: white;\n  font-weight: bolder;\n`\nconst RegionalCouseImage = styled.div`\n  display: flex;\n  flex: 7;\n`\n//==============================================\n//====================체험후기====================\nconst ReviewContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 800px;\n  background-color: white;\n  border: 1px solid grey;\n  padding-left: 50px;\n`\nconst ReviewTitle = styled.div`\n  display: flex;\n  flex: 2;\n  background-color: white;\n  margin-top: 30px;\n  margin-bottom: -40px;\n  font-size: 40px;\n  color: #D1774C;\n`\nconst ReviewSubTitle = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: white;\n  font-weight: bolder;\n`\nconst ReviewContext = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n  background-color: white;\n`\nconst Review = ({ title, content, author, date }) => {\n    return (\n        <div style={{marginBottom: '20px'}}>\n            <h3>{title}</h3>\n            <p>{content}</p>\n            <p>작성자: {author} | 작성일: {date}</p>\n        </div>\n    );\n}\n\n\n//==============================================\n\nexport default MainPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RegionPage.js",["241"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sharing from '../imgs/sharing.png';\nimport bookmark from '../imgs/bookmark.png';\nimport hart from '../imgs/hart.png';\nimport ningning from '../imgs/ningning.jpeg';\n\nconst RegionPage = (props) => {\n    // 공유\n    const handleSharingClick = () => {\n        console.log('Click');\n    };\n    // 북마크\n    const handleBookmarkClick = () => {\n        console.log('Click2');\n    };\n    // 좋아요\n    const handleHartClick = () => {\n        console.log('Click3');\n    };\n    const [activeTab, setActiveTab] = useState(1);\n\n    const handleTabClick = (tabNumber) => {\n        setActiveTab(tabNumber);\n    };\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 1:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                <NewCourseContainer>\n                                    <NewCourseTitle>지역별 코스</NewCourseTitle>\n                                </NewCourseContainer>\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                            <SmallTitleContainer>\n                                <SmallTitle>\n                                    <SmallTitleContent>[와따마,, 다시봐도 으마무시하고마잉 ~?]</SmallTitleContent>\n                                </SmallTitle>\n                                <SmallTag>{/* 이부분에 InputSkill 추가하면됨 */}</SmallTag>\n                            </SmallTitleContainer>\n                            <ContentContainer>\n                                <ContentTitleContainer>\n                                    <ContentSmallTitleContainer>모집 일정</ContentSmallTitleContainer>\n                                </ContentTitleContainer>\n                                <ContentMainContainer>\n                                    <ContentMainTextContainer>\n                                        <ContentTitle>\n                                            <h2>웹 디자이너</h2>\n                                            <h3>(경력)</h3>\n                                        </ContentTitle>\n                                        <ContentMemory>\n                                            <h2>이런 일을 해요</h2>\n                                            <ul>\n                                                <li>11</li>\n                                                <li>22</li>\n                                                <li>33</li>\n                                            </ul>\n                                        </ContentMemory>\n                                    </ContentMainTextContainer>\n                                </ContentMainContainer>\n                            </ContentContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 4:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return <Container>{renderTabContent()}</Container>;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  flex-direction: column;\n  //background-color: blue;\n`;\nconst TopImage = styled.img`\n  height: 300px;\n  width: 500px;\n`;\nconst TopContainer = styled.div`\n  //background-color: red;\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst MiddleContainer = styled.div`\n  //background-color: orange;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst MiddleTopContainer = styled.div`\n  //background-color: blue;\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n`;\nconst ThreeImgs = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: gray;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 2rem;\n`;\nconst StyledButton = styled.button`\n  background: none;\n  border: none;\n`;\nconst StyledImage = styled.img`\n  width: 20px;\n  height: 15px;\n`;\nconst MiddleBottomContainer = styled.div`\n  //background-color: pink;\n  display: flex;\n  flex: 8;\n`;\n\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 7;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewCourseTitle = styled.div`\n  font-size: 44px;\n  color: orange;\n  font-weight: 800;\n  //background-color: green;\n`;\n\nconst BottomContainer = styled.div`\n  //background-color: yellow;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst MenuContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  //background: #61dafb;\n`;\nconst MenuTitle = styled.div`\n  display: flex;\n  flex: 0.6;\n  flex-direction: row;\n  height: 50px;\n  //background-color: red;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\nconst TabButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 24px;\n  margin: 0 10px;\n  position: relative;\n\n  // hover 효과\n  &:hover {\n    color: orange;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n\n  // 선택된 탭의 스타일\n  &.active {\n    color: orange;\n    font-size: 32px;\n    font-weight: 700;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n`;\n\nconst SmallTitleContainer = styled.div`\n  //background-color: purple;\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  margin-top: 1rem;\n`;\nconst SmallTitle = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: yellow;\n  justify-content: center;\n  align-items: center;\n`;\nconst SmallTitleContent = styled.div`\n  display: flex;\n  flex: 0.6;\n  //background-color: orange;\n  font-size: 36px;\n  font-weight: 700;\n`;\nconst SmallTag = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: green;\n`;\nconst ContentContainer = styled.div`\n  //background-color: bisque;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst ContentTitleContainer = styled.div`\n  display: flex;\n  flex: 1.5;\n  //background-color: gray;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: 700;\n  align-items: center;\n`;\nconst ContentSmallTitleContainer = styled.div`\n  display: flex;\n  flex: 0.6;\n  margin-top: 1rem;\n`;\nconst ContentMainContainer = styled.div`\n  display: flex;\n  flex: 8.5;\n  justify-content: center;\n  align-items: flex-start; /* 세로 기준으로 top에 위치하도록 설정 */\n`;\nconst ContentMainTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: brown;\n  border-radius: 5px;\n  border: dodgerblue 5px solid;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  width: 1100px;\n  height: 400px;\n`;\nconst ContentTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  align-items: flex-start;\n  //background-color: white;\n  h2 {\n    color: dodgerblue;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n  }\n\n  h3 {\n    color: dodgerblue;\n    font-weight: 600;\n    margin-left: 2rem;\n  }\n`;\nconst ContentMemory = styled.div`\n  display: flex;\n  flex: 8;\n  flex-direction: column;\n  //background-color: yellow;\n  border-left: dodgerblue 3px solid;\n  align-items: flex-start;\n  h2 {\n    color: black;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    //background-color: red;\n  }\n  ul {\n    //background-color: gray;\n    display: block;\n    flex-direction: column;\n    list-style-type: disc; /* 원형 글머리 기호 */\n    margin-top: 1rem;\n  }\n\n  li {\n    font-size: 24px;\n    display: flex;\n    color: black;\n    font-weight: 600;\n    margin-bottom: 0.5em; /* 각 항목 사이의 간격 조절 */\n  }\n`;\n\nexport default RegionPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingNewsPage.js",["242"],[],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport navigate from \"../Components/Navigate\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst WritingNewsPage = () => {\n    const navigate = useNavigate();\n    const [anno_title, setTitle] = useState('');\n    const [anno_content, setContent] = useState('');\n    const writer = \"관리자\";\n\n    const handleInputTitle = e => {\n        setTitle(e.target.value);\n    }\n\n    const handleInputContent = e => {\n        setContent(e.target.value);\n    }\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const newsPost = {\n            anno_title,\n            writer,\n            anno_content,\n        };\n\n        try {\n            const response = await axios.post('http://localhost:8050/api/createAnnouncement', newsPost, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            //글 작성이라 201\n            if (response.status === 201) {\n                console.log(response.data);\n                // 글 작성 성공 시, 페이지를 이동\n                navigate(\"/announcementlist\");\n            } else {\n                console.error(`HTTP 오류! 상태 코드: ${response.status}`);\n            }\n        } catch (error) {\n            console.error('API 요청 중 오류 발생:', error);\n        }\n    };\n\n\n    return (\n        <Container>\n            <NoticeTitleContainer>\n                공지사항\n            </NoticeTitleContainer>\n            <form onSubmit={handleSubmit}>\n                <MiddleContainer>\n                    <Title>\n                        <label>글 제목 : </label>\n                        <input type={\"text\"} value={anno_title} onChange={handleInputTitle}/>\n                    </Title>\n                    <WriterContainer>\n                        <label>작성자 : {writer} </label>\n                    </WriterContainer>\n                    <ContentContainer>\n                        <label>글 내용 : </label>\n                        <textarea value={anno_content} onChange={handleInputContent}/>\n                    </ContentContainer>\n                    <ButtonContainer>\n                        <SubmitButton type=\"submit\">글 작성</SubmitButton>\n                    </ButtonContainer>\n                </MiddleContainer>\n            </form>\n        </Container>\n    )\n};\n\nconst Container = styled.div`\n      display: flex;\n      flex: 1;\n      height: 700px;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    `\n\nconst MiddleContainer = styled.div`\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n      width: 800px;\n      height: 500px;\n    `\n\nconst NoticeTitleContainer = styled.div`\n      font-size: 40px;\n      font-weight: 700;\n      width: 800px;\n      display: flex;\n      margin-bottom: 1rem;\n    `\nconst Title = styled.div`\n      display: flex;\n      flex: 1;\n      font-size: 20px;\n      align-items: center;\n\n      input {\n        width: 700px;\n        margin-left: 1rem;\n      }\n    `\n\nconst WriterContainer = styled.div`\n      display: flex;\n      font-size: 20px;\n      flex: 1;\n      align-items: center;\n    `\n\nconst ContentContainer = styled.div`\n      display: flex;\n      flex: 7;\n      font-size: 20px;\n      align-items: center;\n\n      textarea {\n        width: 700px;\n        height: 350px;\n        margin-left: 1rem;\n      }\n    `\nconst ButtonContainer = styled.div`\n      display: flex;\n      justify-content: flex-end;\n      margin-right: 1rem;\n    `\nconst SubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  background-color: #007bff;\n  width: 70px;\n  height: 30px;\n  border: none;\n  border-radius: 5px;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: #0056b3; /* 마우스 호버 시 배경색 변경 */\n  }\n`\n\nexport default WritingNewsPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewPage.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/NewPage.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport winter from '../imgs/winter.jpg';\nimport axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport { useUserStore } from '../stores';\nimport { XMLParser } from 'fast-xml-parser';\nimport noImage from \"../imgs/noImage.png\"\nimport banner from \"../imgs/banner.png\"\nimport banner2 from \"../imgs/banner2.png\"\nimport banner3 from \"../imgs/banner3.png\"\nimport {useNavigate} from \"react-router-dom\";\n\nconst NewPage = (props) => {\n    const navigate = useNavigate();\n    const [activeTab, setActiveTab] = useState(1);\n    const [touristSpots, setTouristSpots] = useState([]);\n    const [keyword, setKeyword] = useState(\"\");\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\n    const [searchDetailKeyword, setSearchDetailKeyword] = useState(\"\");\n    const [pageNo, setPageNo] = useState(1);\n\n    const [pageContentNo, setContentPageNo] = useState(1);\n    const [searchContentKeyword, setSearchContentKeyword] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    const [selectedSido, setSelectedSido] = useState('');\n    const [selectedGugun, setSelectedGugun] = useState('');\n    const [gugunOptions, setGugunOptions] = useState([]);\n    const [localNum, setLocalNum] = useState(\"1\");\n    const [detailNum, setDetailNum] = useState(\"1\");\n\n    const [modalVisible, setModalVisible] = useState(false);\n    const [selectedSpot, setSelectedSpot] = useState(null);\n\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    const {user, setUser} = useUserStore();\n    const userType = cookies.userType;\n\n    // 라디오 버튼 상태\n    const [selectedContentType, setSelectedContentType] = useState(\"12\");\n\n    const sidoOptions = [\n        \"시/도 선택\", \"서울특별시\", \"인천광역시\", \"대전광역시\", \"광주광역시\",\n        \"대구광역시\", \"부산광역시\", \"경기도\", \"강원도\", \"충청북도\",\n        \"충청남도\", \"전라북도\", \"전라남도\", \"경상북도\", \"경상남도\", \"제주특별자치도\"\n    ];\n\n    useEffect(() => {\n        let option = [];\n        if (!selectedSido || selectedSido === \"시/도 선택\") {\n            setGugunOptions([]);\n            setSelectedGugun('');\n        } else {\n            if (selectedSido === \"서울특별시\") {\n                setLocalNum(\"1\")\n                option = [\n                    {name: \"강남구\", detailNum: \"1\"}, {name: \"강동구\", detailNum: \"2\"}, {name: \"강북구\", detailNum: \"3\"},\n                    {name: \"강서구\", detailNum: \"4\"}, {name: \"관악구\", detailNum: \"5\"}, {name: \"광진구\", detailNum: \"6\"},\n                    {name: \"구로구\", detailNum: \"7\"}, {name: \"금천구\", detailNum: \"8\"}, {name: \"노원구\", detailNum: \"9\"},\n                    {name: \"도봉구\", detailNum: \"10\"}, {name: \"동대문구\", detailNum: \"11\"}, {name: \"동작구\", detailNum: \"12\"},\n                    {name: \"마포구\", detailNum: \"13\"}, {name: \"서대문구\", detailNum: \"14\"}, {name: \"서초구\", detailNum: \"15\"},\n                    {name: \"성동구\", detailNum: \"16\"}, {name: \"성북구\", detailNum: \"17\"}, {name: \"송파구\", detailNum: \"18\"},\n                    {name: \"양천구\", detailNum: \"19\"}, {name: \"영등포구\", detailNum: \"20\"}, {name: \"용산구\", detailNum: \"21\"},\n                    {name: \"은평구\", detailNum: \"22\"}, {name: \"종로구\", detailNum: \"23\"}, {name: \"중구\", detailNum: \"24\"}, {name: \"중랑구\", detailNum: \"25\"}\n                ]\n            }else if(selectedSido === \"인천광역시\"){\n                setLocalNum(\"2\")\n                option = [\n                    {name: \"계양구\", detailNum: \"2\"}, {name: \"미추홀구\", detailNum: \"3\"}, {name: \"남동구\", detailNum: \"4\"},\n                    {name: \"동구\", detailNum: \"5\"}, {name: \"부평구\", detailNum: \"6\"}, {name: \"서구\", detailNum: \"7\"},\n                    {name: \"연수구\", detailNum: \"8\"}, {name: \"중구\", detailNum: \"10\"}, {name: \"강화군\", detailNum: \"1\"}, {name: \"옹진군\", detailNum: \"9\"}\n                ]\n            }else if(selectedSido === \"대전광역시\"){\n                setLocalNum(\"3\")\n                option = [\n                    {name: \"대덕구\", detailNum: \"1\"}, {name: \"동구\", detailNum: \"2\"}, {name: \"서구\", detailNum: \"3\"},\n                    {name: \"유성구\", detailNum: \"4\"}, {name: \"중구\", detailNum: \"5\"}\n                ]\n            }else if(selectedSido === \"광주광역시\"){\n                setLocalNum(\"5\")\n                option = [\n                    {name: \"광산구\", detailNum: \"1\"}, {name: \"남구\", detailNum: \"2\"}, {name: \"동구\", detailNum: \"3\"},\n                    {name: \"북구\", detailNum: \"4\"}, {name: \"서구\", detailNum: \"5\"}\n                ]\n            }else if(selectedSido === \"대구광역시\"){\n                setLocalNum(\"4\")\n                option = [\n                    {name: \"남구\", detailNum: \"1\"}, {name: \"달서구\", detailNum: \"2\"}, {name: \"동구\", detailNum: \"4\"},\n                    {name: \"북구\", detailNum: \"5\"}, {name: \"서구\", detailNum: \"6\"}, {name: \"수성구\", detailNum: \"7\"},\n                    {name: \"중구\", detailNum: \"8\"}, {name: \"달성군\", detailNum: \"3\"}, {name: \"군위군\", detailNum: \"9\"}\n                ]\n            }else if(selectedSido === \"울산광역시\"){\n                setLocalNum(\"7\")\n                option = [\n                    {name: \"남구\", detailNum: \"2\"}, {name: \"동구\", detailNum: \"3\"}, {name: \"북구\", detailNum: \"4\"},\n                    {name: \"중구\", detailNum: \"1\"}, {name: \"울주군\", detailNum: \"5\"}\n                ]\n            }else if(selectedSido === \"부산광역시\"){\n                setLocalNum(\"6\")\n                option = [\n                    {name: \"강서구\", detailNum: \"1\"}, {name: \"금정구\", detailNum: \"2\"}, {name: \"남구\", detailNum: \"4\"},\n                    {name: \"동구\", detailNum: \"5\"}, {name: \"동래구\", detailNum: \"6\"}, {name: \"부산진구\", detailNum: \"7\"},\n                    {name: \"북구\", detailNum: \"8\"}, {name: \"사상구\", detailNum: \"9\"}, {name: \"사하구\", detailNum: \"10\"},\n                    {name: \"서구\", detailNum: \"11\"}, {name: \"수영구\", detailNum: \"12\"}, {name: \"연제구\", detailNum: \"13\"},\n                    {name: \"영도구\", detailNum: \"14\"}, {name: \"중구\", detailNum: \"15\"}, {name: \"해운대구\", detailNum: \"16\"}, {name: \"기장군\", detailNum: \"3\"}\n                ]\n            }else if(selectedSido === \"경기도\"){\n                setLocalNum(\"31\")\n                option = [\n                    {name: \"고양시\", detailNum: \"2\"}, {name: \"과천시\", detailNum: \"3\"}, {name: \"광명시\", detailNum: \"4\"},\n                    {name: \"광주시\", detailNum: \"5\"}, {name: \"구리시\", detailNum: \"6\"}, {name: \"군포시\", detailNum: \"7\"},\n                    {name: \"김포시\", detailNum: \"8\"}, {name: \"남양주시\", detailNum: \"9\"}, {name: \"동두천시\", detailNum: \"10\"},\n                    {name: \"부천시\", detailNum: \"11\"}, {name: \"성남시\", detailNum: \"12\"}, {name: \"수원시\", detailNum: \"13\"},\n                    {name: \"시흥시\", detailNum: \"14\"}, {name: \"안산시\", detailNum: \"15\"}, {name: \"안성시\", detailNum: \"16\"}, {name: \"안양시\", detailNum: \"17\"},\n                    {name: \"양주시\", detailNum: \"18\"}, {name: \"오산시\", detailNum: \"22\"}, {name: \"용인시\", detailNum: \"23\"},\n                    {name: \"의왕시\", detailNum: \"24\"}, {name: \"의정부시\", detailNum: \"25\"}, {name: \"이천시\", detailNum: \"26\"},\n                    {name: \"파주시\", detailNum: \"27\"}, {name: \"평택시\", detailNum: \"28\"}, {name: \"포천시\", detailNum: \"29\"},\n                    {name: \"하남시\", detailNum: \"30\"}, {name: \"화성시\", detailNum: \"31\"}, {name: \"가평군\", detailNum: \"1\"},\n                    {name: \"양평군\", detailNum: \"19\"}, {name: \"여주시\", detailNum: \"20\"}, {name: \"연천군\", detailNum: \"21\"},\n                ]\n            }else if(selectedSido === \"강원도\"){\n                setLocalNum(\"32\")\n                option = [\n                    {name: \"강릉시\", detailNum: \"1\"}, {name: \"고성군\", detailNum: \"2\"}, {name: \"동해시\", detailNum: \"3\"},\n                    {name: \"삼척시\", detailNum: \"4\"}, {name: \"속초시\", detailNum: \"5\"}, {name: \"양구군\", detailNum: \"6\"},\n                    {name: \"양양군\", detailNum: \"7\"}, {name: \"영월군\", detailNum: \"8\"}, {name: \"원주시\", detailNum: \"9\"},\n                    {name: \"인제군\", detailNum: \"10\"}, {name: \"정선군\", detailNum: \"11\"}, {name: \"철원군\", detailNum: \"12\"},\n                    {name: \"춘천시\", detailNum: \"13\"}, {name: \"태백시\", detailNum: \"14\"}, {name: \"평창군\", detailNum: \"15\"},\n                    {name: \"홍천군\", detailNum: \"16\"}, {name: \"화천군\", detailNum: \"17\"}, {name: \"횡성군\", detailNum: \"18\"}\n                ]\n            }else if(selectedSido === \"충청북도\"){\n                setLocalNum(\"33\")\n                option = [\n                    {name: \"괴산군\", detailNum: \"1\"}, {name: \"단양군\", detailNum: \"2\"}, {name: \"보은군\", detailNum: \"3\"},\n                    {name: \"영동군\", detailNum: \"4\"}, {name: \"옥천군\", detailNum: \"5\"}, {name: \"음성군\", detailNum: \"6\"},\n                    {name: \"제천시\", detailNum: \"7\"}, {name: \"진천군\", detailNum: \"8\"}, {name: \"청원군\", detailNum: \"9\"},\n                    {name: \"청주시\", detailNum: \"10\"}, {name: \"충주시\", detailNum: \"11\"}, {name: \"증평군\", detailNum: \"12\"}\n                ]\n            }else if(selectedSido === \"충청남도\"){\n                setLocalNum(\"34\")\n                option = [\n                    {name: \"공주시\", detailNum: \"1\"}, {name: \"금산군\", detailNum: \"2\"}, {name: \"논산시\", detailNum: \"3\"},\n                    {name: \"당진시\", detailNum: \"4\"}, {name: \"보령시\", detailNum: \"5\"}, {name: \"부여군\", detailNum: \"6\"},\n                    {name: \"서산시\", detailNum: \"7\"}, {name: \"서천군\", detailNum: \"8\"}, {name: \"아산시\", detailNum: \"9\"},\n                    {name: \"예산군\", detailNum: \"10\"}, {name: \"천안시\", detailNum: \"11\"}, {name: \"청양군\", detailNum: \"12\"},\n                    {name: \"태안군\", detailNum: \"13\"}, {name: \"홍성군\", detailNum: \"14\"}, {name: \"계룡시\", detailNum: \"15\"}\n                ]\n            }else if(selectedSido === \"전라북도\"){\n                setLocalNum(\"37\")\n                option = [\n                    {name: \"고창군\", detailNum: \"1\"}, {name: \"군산시\", detailNum: \"2\"}, {name: \"김제시\", detailNum: \"3\"},\n                    {name: \"남원시\", detailNum: \"4\"}, {name: \"무주군\", detailNum: \"5\"}, {name: \"부안군\", detailNum: \"6\"},\n                    {name: \"순창군\", detailNum: \"7\"}, {name: \"완주군\", detailNum: \"8\"}, {name: \"익산시\", detailNum: \"9\"},\n                    {name: \"임실군\", detailNum: \"10\"}, {name: \"장수군\", detailNum: \"11\"}, {name: \"전주시\", detailNum: \"12\"},\n                    {name: \"정읍시\", detailNum: \"13\"}, {name: \"진안군\", detailNum: \"14\"}\n                ]\n            }else if(selectedSido === \"전라남도\"){\n                setLocalNum(\"38\")\n                option = [\n                    {name: \"강진군\", detailNum: \"1\"}, {name: \"고흥군\", detailNum: \"2\"}, {name: \"곡성군\", detailNum: \"3\"},\n                    {name: \"광양시\", detailNum: \"4\"}, {name: \"구례군\", detailNum: \"5\"}, {name: \"나주시\", detailNum: \"6\"},\n                    {name: \"담양군\", detailNum: \"7\"}, {name: \"목포시\", detailNum: \"8\"}, {name: \"무안군\", detailNum: \"9\"},\n                    {name: \"보성군\", detailNum: \"10\"}, {name: \"순천시\", detailNum: \"11\"}, {name: \"신안군\", detailNum: \"12\"},\n                    {name: \"여수시\", detailNum: \"13\"}, {name: \"영광군\", detailNum: \"16\"}, {name: \"영암군\", detailNum: \"17\"},\n                    {name: \"완도군\", detailNum: \"18\"}, {name: \"장성군\", detailNum: \"19\"}, {name: \"장흥군\", detailNum: \"20\"},\n                    {name: \"진도군\", detailNum: \"21\"}, {name: \"함평군\", detailNum: \"22\"}, {name: \"해남군\", detailNum: \"23\"}, {name: \"화순군\", detailNum: \"24\"}\n                ]\n            }else if(selectedSido === \"경상북도\"){\n                setLocalNum(\"35\")\n                option = [\n                    {name: \"경산시\", detailNum: \"1\"}, {name: \"경주시\", detailNum: \"2\"}, {name: \"고령군\", detailNum: \"3\"},\n                    {name: \"구미시\", detailNum: \"4\"}, {name: \"김천시\", detailNum: \"6\"}, {name: \"문경시\", detailNum: \"7\"},\n                    {name: \"봉화군\", detailNum: \"8\"}, {name: \"상주시\", detailNum: \"9\"}, {name: \"성주군\", detailNum: \"10\"},\n                    {name: \"안동시\", detailNum: \"11\"}, {name: \"영덕군\", detailNum: \"12\"}, {name: \"영양군\", detailNum: \"13\"},\n                    {name: \"영주시\", detailNum: \"14\"}, {name: \"영천시\", detailNum: \"15\"}, {name: \"예천군\", detailNum: \"16\"},\n                    {name: \"울릉군\", detailNum: \"17\"}, {name: \"울진군\", detailNum: \"18\"}, {name: \"의성군\", detailNum: \"19\"},\n                    {name: \"청도군\", detailNum: \"20\"}, {name: \"청송군\", detailNum: \"21\"}, {name: \"칠곡군\", detailNum: \"22\"}, {name: \"포항시\", detailNum: \"23\"}\n                ]\n            }else if(selectedSido === \"경상남도\"){\n                setLocalNum(\"36\")\n                option = [\n                    {name: \"거제시\", detailNum: \"1\"}, {name: \"거창군\", detailNum: \"2\"}, {name: \"고성군\", detailNum: \"3\"},\n                    {name: \"김해시\", detailNum: \"4\"}, {name: \"남해군\", detailNum: \"5\"}, {name: \"마산시\", detailNum: \"6\"},\n                    {name: \"밀양시\", detailNum: \"7\"}, {name: \"사천시\", detailNum: \"8\"}, {name: \"산청군\", detailNum: \"9\"},\n                    {name: \"양산시\", detailNum: \"10\"}, {name: \"의령군\", detailNum: \"12\"}, {name: \"진주시\", detailNum: \"13\"},\n                    {name: \"진해시\", detailNum: \"14\"}, {name: \"창녕군\", detailNum: \"15\"}, {name: \"창원시\", detailNum: \"16\"},\n                    {name: \"통영시\", detailNum: \"17\"}, {name: \"하동군\", detailNum: \"18\"}, {name: \"함안군\", detailNum: \"19\"},\n                    {name: \"함양군\", detailNum: \"20\"}, {name: \"합천군\", detailNum: \"21\"}\n                ]\n            }else if(selectedSido === \"제주특별자치도\"){\n                setLocalNum(\"39\")\n                option = [\n                    {name: \"남제주군\", detailNum: \"1\"}, {name: \"북제주군\", detailNum: \"2\"}, {name: \"서귀포시\", detailNum: \"3\"}, {name: \"제주시\", detailNum: \"4\"}\n                ]\n            }\n            setGugunOptions(option);\n        }\n    }, [selectedSido]);\n\n    const serviceKey = 'YRUALCBQQWvU6w/tG7ZkUtWtjAeaO9bJjyummGjvfF9SjR0QYO+CRveierZlwe97v5toXybLb6aoFCl1sZ8q4Q==';\n\n    useEffect(() => {\n        if (cookies.token) {\n            console.log(userType)\n            if(userType === \"company\"){\n                axios.get('http://localhost:8050/api/auth/currentCompany', {\n                    headers: {\n                        Authorization: `Bearer ${cookies.token}`\n                    }\n                }).then(response => {\n                    console.log(cookies.token)\n                    // 토큰이 유효한 경우\n                    const fetchedUser = response.data;\n                    console.log(fetchedUser)\n                    setUser(fetchedUser);\n                }).catch(error => {\n                    // 토큰이 유효하지 않은 경우\n                    console.error(\"Token verification failed:\", error);\n                    handleLogout();\n                });\n            }else{\n                axios.get('http://localhost:8050/api/auth/currentUser', {\n                    headers: {\n                        Authorization: `Bearer ${cookies.token}`\n                    }\n                }).then(response => {\n                    console.log(cookies.token)\n                    // 토큰이 유효한 경우\n                    const fetchedUser = response.data;\n                    console.log(fetchedUser)\n                    setUser(fetchedUser);\n                }).catch(error => {\n                    // 토큰이 유효하지 않은 경우\n                    console.error(\"Token verification failed:\", error);\n                    handleLogout();\n                });\n            }\n        }\n    }, []);\n\n    const handleLogout = () => {\n        removeCookie('token');\n        setUser(null);\n        navigate(\"/\");\n    };\n\n    useEffect(() => {\n        fetchContentData(searchContentKeyword, pageContentNo);\n        fetchLocalData(keyword, pageNo);\n    }, [pageNo]);\n\n    const fetchContentData = async (contentTypeCode, pageNo, retryCount = 0) => {\n        try {\n            const encodedServiceKey = encodeURIComponent(serviceKey);\n            const encodedKeyword = encodeURIComponent(searchKeyword || \"가\");\n            const url = `http://apis.data.go.kr/B551011/KorService1/searchKeyword1?serviceKey=${encodedServiceKey}&MobileApp=AppTest&MobileOS=ETC&pageNo=${pageContentNo}&numOfRows=12&arrange=O&listYN=Y&contentTypeId=${selectedContentType}&keyword=${encodedKeyword}`;\n            const response = await axios.get(url);\n\n            const parser = new XMLParser();\n            const jsonObj = parser.parse(response.data);\n\n            if (jsonObj && jsonObj.response && jsonObj.response.body && jsonObj.response.body.items) {\n                const spots = jsonObj.response.body.items.item;\n                setSearchResults(spots);\n            } else {\n                // 유효하지 않은 응답일 경우 재시도\n                if (retryCount < 3) { // 최대 3번 재시도\n                    fetchContentData(searchKeyword, pageNo, retryCount + 1);\n                } else {\n                    console.error(\"Invalid API response\");\n                }\n            }\n        } catch (error) {\n            console.error('Error fetching data: ', error);\n            if (retryCount < 3) {\n                fetchContentData(searchKeyword, pageNo, retryCount + 1);\n            }\n        }\n    };\n\n    const fetchLocalData = async (searchKeyword, pageNo, retryCount = 0) => {\n        try {\n            const encodedServiceKey = encodeURIComponent(serviceKey);\n            const url = `http://apis.data.go.kr/B551011/KorService1/areaBasedList1?serviceKey=${encodedServiceKey}&pageNo=${pageNo}&numOfRows=12&MobileApp=AppTest&MobileOS=ETC&arrange=O&areaCode=${localNum}&sigunguCode=${detailNum}`;\n            const response = await axios.get(url);\n\n            const parser = new XMLParser();\n            const jsonObj = parser.parse(response.data);\n\n            if (jsonObj && jsonObj.response && jsonObj.response.body && jsonObj.response.body.items) {\n                const spots = jsonObj.response.body.items.item;\n                setTouristSpots(spots);\n                setSearchKeyword(searchKeyword)\n                setSearchDetailKeyword(selectedGugun);\n            } else {\n                // 유효하지 않은 응답일 경우 재시도\n                if (retryCount < 3) { // 최대 3번 재시도\n                    fetchLocalData(searchKeyword, pageNo, retryCount + 1);\n                } else {\n                    console.error(\"Invalid API response\");\n                }\n            }\n        } catch (error) {\n            console.error('Error fetching data: ', error);\n            if (retryCount < 3) {\n                fetchLocalData(searchKeyword, pageNo, retryCount + 1);\n            }\n        }\n    };\n\n    // 구/군 선택 핸들러\n    const handleGugunChange = (e) => {\n        const selectedOption = gugunOptions.find(option => option.name === e.target.value);\n        setSelectedGugun(e.target.value);\n        if (selectedOption) {\n            setDetailNum(selectedOption.detailNum);\n        } else {\n            setDetailNum(\"\");\n        }\n    };\n\n    const handleTabClick = (tabNumber) => {\n        setActiveTab(tabNumber);\n    };\n\n    // 검색 버튼 클릭 핸들러\n    const handleSearch = () => {\n        setSearchContentKeyword()\n        fetchContentData(selectedContentType, 1); // 선택된 컨텐트 타입으로 검색\n    };\n\n    // 라디오 버튼 UI\n    const renderRadioButtons = () => {\n        const contentTypeOptions = [\n            { label: \"관광지\", value: \"12\" },\n            { label: \"문화시설\", value: \"14\" },\n            { label: \"행사/공연/축제\", value: \"15\" },\n            { label: \"레포츠\", value: \"28\" },\n            { label: \"숙박\", value: \"32\" },\n            { label: \"쇼핑\", value: \"38\" },\n            { label: \"음식점\", value: \"39\" }\n        ];\n\n        return (\n            <div>\n                {contentTypeOptions.map((option, index) => (\n                    <RadioButtonLabel key={index}>\n                        <RadioButton\n                            type=\"radio\"\n                            name=\"contentType\"\n                            value={option.value}\n                            onChange={() => setSelectedContentType(option.value)}\n                        />\n                        <RadioButtonSpan>{option.label}</RadioButtonSpan>\n                    </RadioButtonLabel>\n                ))}\n            </div>\n        );\n    };\n\n    const handleGridItemClick = (spot) => {\n        setSelectedSpot(spot);\n        setModalVisible(true);\n    };\n\n    const Modal = ({ spot, onClose }) => {\n        const [isFavorited, setIsFavorited] = useState(false);\n\n        useEffect(() => {\n            const checkFavoriteStatus = async () => {\n                try {\n                    const userId = user.userId;\n                    const response = await axios.get(`http://localhost:8050/api/cos/check/${encodeURIComponent(spot.title)}/${userId}`, {\n                        headers: {\n                            Authorization: `Bearer ${cookies.token}`\n                        }\n                    });\n                    if (response.data.isFavorited) {\n                        setIsFavorited(true);\n                    }\n                } catch (error) {\n                    console.error('Error checking favorite status:', error);\n                }\n            };\n\n            checkFavoriteStatus();\n        }, [spot.title]);\n\n\n        const uploadImage = async (image) => {\n            const formData = new FormData();\n            formData.append('image', image);\n\n            try {\n                const response = await axios.post('http://localhost:8050/api/uploadProfileImage', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n                return response.data.imageUrl;\n            } catch (error) {\n                console.error('Error uploading image:', error);\n                return null;\n            }\n        };\n\n        const deleteFavoriteSpot = async () => {\n            try {\n                await axios.post(`http://localhost:8050/api/cos/delete`,\n                    { title: encodeURIComponent(spot.title) },\n                    {\n                        headers: {\n                            Authorization: `Bearer ${cookies.token}`\n                        }\n                    }\n                );\n            } catch (error) {\n                console.error('Error deleting favorite spot:', error);\n            }\n        };\n\n\n        const saveFavoriteSpot = async (imageUrl) => {\n            const courseData = {\n                cosUserId: user.userId, // 현재 로그인한 사용자 ID\n                cosTitle: spot.title,\n                cosPicture: imageUrl,\n                cosAddress: spot.addr1 + \" \" + spot.addr2\n            };\n\n            try {\n                await axios.post('http://localhost:8050/api/cos/add', courseData, {\n                    headers: {\n                        Authorization: `Bearer ${cookies.token}`\n                    }\n                });\n            } catch (error) {\n                console.error('Error saving favorite spot:', error);\n            }\n        };\n\n        const toggleFavorite = async () => {\n            setIsFavorited(!isFavorited);\n\n            if (!isFavorited) {\n                let imageUrl = spot.firstimage;\n                if (imageUrl) {\n                    const uploadedImageUrl = await uploadImage(imageUrl);\n                    if (uploadedImageUrl) {\n                        imageUrl = uploadedImageUrl;\n                    }\n                }\n                await saveFavoriteSpot(imageUrl);\n            }else {\n                await deleteFavoriteSpot();\n            }\n        };\n\n        return (\n            <ModalContainer>\n                <ModalContent>\n                    <ModalHeader>\n                        <ModalTitle>{spot.title}</ModalTitle>\n                        <FavoriteButton onClick={toggleFavorite}>\n                            {isFavorited ? '♥' : '♡'}\n                        </FavoriteButton>\n                    </ModalHeader>\n                    <ModalImage src={spot.firstimage || noImage} alt={spot.title} />\n                    <ModalText>주소 : {spot.addr1}</ModalText>\n                    {spot.addr2 && <ModalText>{spot.addr2}</ModalText>}\n\n                    <CloseButton onClick={onClose}>닫기</CloseButton>\n                </ModalContent>\n            </ModalContainer>\n        );\n    };\n\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 1:\n                return (\n                    <>\n                        <TopContainer>\n                            <MiddleContainer>\n                                <MiddleBottomContainer>\n                                    <NewCourseContainer>\n                                        <NewCourseTitle>테마별 코스</NewCourseTitle>\n                                    </NewCourseContainer>\n                                </MiddleBottomContainer>\n                            </MiddleContainer>\n                        </TopContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);}} className={activeTab === 1 ? 'active' : ''}>테마별 코스</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);}} className={activeTab === 2 ? 'active' : ''}>지역별 코스</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);}} className={activeTab === 3 ? 'active' : ''}>나만의 코스</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                        <AreaContentContainer>\n                            <SearchBoxContainer>\n                                <SearchContainer>\n                                    {renderRadioButtons()}\n                                    <SearchButton onClick={handleSearch}>검색</SearchButton>\n                                </SearchContainer>\n                            </SearchBoxContainer>\n                            <GridContainer>\n                                {Array.isArray(searchResults) && searchResults.length > 0 ? (\n                                    searchResults.map((spot, index) => (\n                                        <GridItem key={index} onClick={() => handleGridItemClick(spot)}>\n                                            <GridTitle>{spot.title}</GridTitle>\n                                            {spot.firstimage && <StyledImage src={spot.firstimage} alt={spot.title} />}\n                                            {!spot.firstimage && <StyledImage src={noImage} alt=\"No image available\" />}\n                                        </GridItem>\n                                    ))\n                                ) : (\n                                    <p>Loading...</p>\n                                )}\n                            </GridContainer>\n\n                            {modalVisible && selectedSpot && (\n                                <Modal spot={selectedSpot} onClose={() => setModalVisible(false)} />\n                            )}\n                            <PaginationContainer>\n                                <PageButton onClick={() => setContentPageNo(prev => Math.max(prev - 1, 1))}>이전</PageButton>\n                                <PageButton onClick={() => setContentPageNo(prev => prev + 1)}>다음</PageButton>\n                            </PaginationContainer>\n                        </AreaContentContainer>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <TopContainer2>\n                            <MiddleContainer>\n                                <MiddleBottomContainer>\n                                    <NewCourseContainer>\n                                        <NewCourseTitle>지역별 코스</NewCourseTitle>\n                                    </NewCourseContainer>\n                                </MiddleBottomContainer>\n                            </MiddleContainer>\n                        </TopContainer2>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);}} className={activeTab === 1 ? 'active' : ''}>테마별 코스</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);}} className={activeTab === 2 ? 'active' : ''}>지역별 코스</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);}} className={activeTab === 3 ? 'active' : ''}>나만의 코스</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                        <AreaContentContainer>\n                            <SearchBoxContainer>\n                                <SearchContainer>\n                                    {/* 시/도 선택 드롭다운 */}\n                                    <StyledSelect value={selectedSido} onChange={(e) => setSelectedSido(e.target.value)}>\n                                        {sidoOptions.map(sido => (\n                                            <option key={sido} value={sido}>{sido}</option>\n                                        ))}\n                                    </StyledSelect>\n\n                                    {/* 구/군 선택 드롭다운 */}\n                                    <StyledSelect value={selectedGugun} onChange={handleGugunChange}>\n                                        {gugunOptions.map(({ name }) => (\n                                            <option key={name} value={name}>{name}</option>\n                                        ))}\n                                    </StyledSelect>\n\n                                    {/* 검색 버튼 */}\n                                    <SearchButton onClick={() => fetchLocalData(selectedSido, selectedGugun, 1)}>검색</SearchButton>\n                                </SearchContainer>\n                                <SearchResultText>\n                                    {searchKeyword ? `'${searchKeyword} ${searchDetailKeyword}' 검색 결과입니다.` : '전체 목록'}\n                                </SearchResultText>\n                            </SearchBoxContainer>\n                            <GridContainer>\n                                {Array.isArray(touristSpots) && touristSpots.length > 0 ? (\n                                    touristSpots.map((spot, index) => (\n                                        <GridItem key={index} onClick={() => handleGridItemClick(spot)}>\n                                            <GridTitle>{spot.title}</GridTitle>\n                                            {spot.firstimage && <StyledImage src={spot.firstimage} alt={spot.title} />}\n                                            {!spot.firstimage && <StyledImage src={noImage} alt={spot.title} />}\n                                        </GridItem>\n                                    ))\n                                ) : (\n                                    <p>Loading...</p>\n                                )}\n                            </GridContainer>\n                            {modalVisible && selectedSpot && (\n                                <Modal spot={selectedSpot} onClose={() => setModalVisible(false)} />\n                            )}\n                            <PaginationContainer>\n                                <PageButton onClick={() => setPageNo(prev => Math.max(prev - 1, 1))}>이전</PageButton>\n                                <PageButton onClick={() => setPageNo(prev => prev + 1)}>다음</PageButton>\n                            </PaginationContainer>\n                        </AreaContentContainer>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <TopContainer3>\n                            <MiddleContainer>\n                                <MiddleBottomContainer>\n                                    <NewCourseContainer>\n                                        <NewCourseTitle>나만의 코스</NewCourseTitle>\n                                    </NewCourseContainer>\n                                </MiddleBottomContainer>\n                            </MiddleContainer>\n                        </TopContainer3>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);}} className={activeTab === 1 ? 'active' : ''}>테마별 코스</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);}} className={activeTab === 2 ? 'active' : ''}>지역별 코스</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);}} className={activeTab === 3 ? 'active' : ''}>나만의 코스</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return <Container>{renderTabContent()}</Container>;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  flex-direction: column;\n  //background-color: blue;\n`;\n\nconst TopImage = styled.img`\n  height: 300px;\n  width: 500px;\n`;\n\nconst TopContainer = styled.div`\n  //background-color: red;\n  background-image: url(${banner});\n  background-size: cover; // 배경 이미지가 컨테이너를 덮도록 설정\n  background-position: center; // 배경 이미지를 중앙에 위치시킴\n  background-repeat: no-repeat; // 배경 이미지 반복 없음\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TopContainer2 = styled.div`\n  //background-color: red;\n  background-image: url(${banner2});\n  background-size: cover; // 배경 이미지가 컨테이너를 덮도록 설정\n  background-position: center; // 배경 이미지를 중앙에 위치시킴\n  background-repeat: no-repeat; // 배경 이미지 반복 없음\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TopContainer3 = styled.div`\n  //background-color: red;\n  background-image: url(${banner3});\n  background-size: cover; // 배경 이미지가 컨테이너를 덮도록 설정\n  background-position: center; // 배경 이미지를 중앙에 위치시킴\n  background-repeat: no-repeat; // 배경 이미지 반복 없음\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst MiddleContainer = styled.div`\n  //background-color: orange;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst MiddleBottomContainer = styled.div`\n  //background-color: pink;\n  display: flex;\n  flex: 8;\n  margin-top: 10px;\n`;\n\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 7;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewCourseTitle = styled.div`\n  font-size: 38px;\n  color: #663399;\n  font-weight: 800;\n  margin-top: 120px;\n  margin-bottom: 180px;\n  //background-color: green;\n`;\n\nconst BottomContainer = styled.div`\n  //background-color: yellow;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst MenuContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  //background: #61dafb;\n`;\nconst MenuTitle = styled.div`\n  display: flex;\n  flex: 0.6;\n  flex-direction: row;\n  height: 50px;\n  //background-color: red;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\nconst TabButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n  margin: 0 10px;\n  position: relative;\n\n  // hover 효과\n  &:hover {\n    color: orange;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n\n  // 선택된 탭의 스타일\n  &.active {\n    color: orange;\n    font-size: 24px;\n    font-weight: 700;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n`;\n\nconst SmallTitleContainer = styled.div`\n  //background-color: purple;\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  margin-top: 1rem;\n`;\nconst SmallTitle = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: yellow;\n  justify-content: center;\n  align-items: center;\n`;\nconst SmallTitleContent = styled.div`\n  display: flex;\n  flex: 0.6;\n  //background-color: orange;\n  font-size: 36px;\n  font-weight: 700;\n`;\nconst SmallTag = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: green;\n`;\nconst ContentContainer = styled.div`\n  //background-color: bisque;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst ContentTitleContainer = styled.div`\n  display: flex;\n  flex: 1.5;\n  //background-color: gray;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: 700;\n  align-items: center;\n`;\nconst ContentSmallTitleContainer = styled.div`\n  display: flex;\n  flex: 0.6;\n  margin-top: 1rem;\n`;\nconst ContentMainContainer = styled.div`\n  display: flex;\n  flex: 8.5;\n  justify-content: center;\n  align-items: flex-start; /* 세로 기준으로 top에 위치하도록 설정 */\n`;\nconst ContentMainTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: brown;\n  border-radius: 5px;\n  border: dodgerblue 5px solid;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  width: 1100px;\n  height: 400px;\n`;\nconst ContentTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  align-items: flex-start;\n  //background-color: white;\n  h2 {\n    color: dodgerblue;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n  }\n\n  h3 {\n    color: dodgerblue;\n    font-weight: 600;\n    margin-left: 2rem;\n  }\n`;\nconst ContentMemory = styled.div`\n  display: flex;\n  flex: 8;\n  flex-direction: column;\n  //background-color: yellow;\n  border-left: dodgerblue 3px solid;\n  align-items: flex-start;\n  h2 {\n    color: black;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    //background-color: red;\n  }\n  ul {\n    //background-color: gray;\n    display: block;\n    flex-direction: column;\n    list-style-type: disc; /* 원형 글머리 기호 */\n    margin-top: 1rem;\n  }\n\n  li {\n    font-size: 24px;\n    display: flex;\n    color: black;\n    font-weight: 600;\n    margin-bottom: 0.5em; /* 각 항목 사이의 간격 조절 */\n  }\n`;\nconst TravelContent = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: green;\n  justify-content: center;\n  align-items: center;\n  color: white; /* 텍스트의 색상을 흰색으로 설정 */\n  font-size: 24px; /* 텍스트의 크기를 24px로 설정 (원하는 크기로 조절) */\n`;\n\nconst AreaContentContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst GridTitle = styled.h2`\n    color: #333;\n    font-size: 20px;\n    margin-bottom: 10px;\n    font-weight: bold;\n`;\n\nconst GridItem = styled.div`\n  border: 1px solid #ddd;\n  padding: 15px;\n  text-align: center;\n  background-color: #f9f9f9;\n  box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);\n  border-radius: 10px;\n`;\n\nconst StyledImage = styled.img`\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  margin-bottom: 10px;\n  border-radius: 5px;\n`;\n\nconst SearchBoxContainer = styled.div`\n  margin-bottom: 20px;\n  padding: 20px;\n  border-radius: 10px;\n  background-color: #f5f5f5; // 박스의 배경색\n  box-shadow: 0px 2px 4px rgba(0,0,0,0.1); // 박스에 그림자 효과 추가\n  width: 80%;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  justify-content: center;\n`;\n\nconst SearchInput = styled.input`\n  width: 30%;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  margin-right: 10px;\n  text-align: center;\n`;\n\nconst SearchButton = styled.button`\n  padding: 10px 15px;\n  margin-left: 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: #4CAF50;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nconst PageButton = styled.button`\n  padding: 10px 15px;\n  border-radius: 5px;\n  border: none;\n  background-color: #008CBA;\n  color: white;\n  margin: 0 10px;\n  cursor: pointer;\n  &:hover {\n    background-color: #007B9E;\n  }\n`;\n\nconst SearchResultText = styled.div`\n  color: #333;\n  font-size: 17px;\n`;\n\nconst StyledSelect = styled.select`\n  padding: 10px 15px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  background-color: white;\n  box-shadow: 0px 2px 4px rgba(0,0,0,0.1);\n  margin-right: 10px;\n  cursor: pointer;\n\n  &:hover {\n    border-color: #aaa;\n  }\n`;\n\nconst RadioButtonLabel = styled.label`\n  display: inline-block;\n  background-color: #f0f0f0;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 20px;\n  border: 2px solid #ddd;\n  cursor: pointer;\n  font-weight: 500;\n\n  &:hover {\n    background-color: #e8e8e8;\n  }\n`;\n\nconst RadioButton = styled.input`\n  display: none;\n\n  &:checked + span {\n    color: #0000ff;\n    font-weight: bold;\n    border-color: #4CAF50;\n  }\n`;\n\nconst RadioButtonSpan = styled.span`\n`;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background-color: white;\n  padding: 25px;\n  border-radius: 15px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  max-width: 500px;\n  width: 90%;\n`;\n\nconst ModalImage = styled.img`\n    width: 100%;\n    height: auto;\n    border-radius: 10px;\n    margin-bottom: 20px;\n`;\n\nconst ModalTitle = styled.h2`\n    color: #333;\n    font-size: 24px;\n    margin-bottom: 10px;\n    font-weight: bold;\n`;\n\nconst ModalHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst FavoriteButton = styled.button`\n    background: none;\n    border: none;\n    cursor: pointer;\n    font-size: 24px;\n    color: red;\n    margin-bottom: 10px;\n`;\n\nconst ModalText = styled.h5`\n    color: #555;\n    font-size: 16px;\n    margin: 5px 0;\n`;\n\nconst CloseButton = styled.button`\n    padding: 10px 20px;\n    margin-top: 20px;\n    border: none;\n    border-radius: 5px;\n    background-color: #f44336;\n    color: white;\n    font-size: 16px;\n    cursor: pointer;\n    &:hover {\n        background-color: #d32f2f;\n    }\n`;\nexport default NewPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/InfoChangePage.js",["262","263","264","265","266","267"],[],"import React, {useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport defaultProfilePic from '../imgs/default_profile.png';\nimport {useNavigate} from \"react-router-dom\";\nimport {useCookies} from \"react-cookie\";\nimport {useUserStore} from \"../stores\";\nimport axios from \"axios\";\nimport {Badge} from \"react-bootstrap\";\nimport logo from \"../imgs/gwanghui.jpg\";\nimport iu from \"../imgs/iu3.png\"\nimport logoSmall from \"../imgs/logo2.png\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faCamera} from '@fortawesome/free-solid-svg-icons';\n\nconst InfoChangePage = (props) => {\n    const navigate = useNavigate();\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    const { user, setUser } = useUserStore();\n    const userType = cookies.userType;\n    const [step, setStep] = useState(1);\n\n    const [userPassword, setUserPassword] = useState('');\n    const [passwordConfirmed, setPasswordConfirmed] = useState(false);\n\n    const [profileImage, setProfileImage] = useState(null);\n    const [previewImage, setPreviewImage] = useState(null);\n\n    const fileInputRef = useRef(null);\n\n    const [addressFields, setAddressFields] = useState({\n        postalCode: '',\n        address: '',\n        detailAddress: ''\n    });\n\n    const [userInfo, setUserInfo] = useState(user.userInfo || '');\n    const [userAddress, setUserAddress] = useState(user.userAddress || '');\n    const [userPrefer, setUserPrefer] = useState(user.userPrefer || '');\n    const [userGender, setUserGender] = useState(user.userGender || '');\n    const [userPhone, setUserPhone] = useState(user.userPhone || '');\n\n    useEffect(() => {\n        if (cookies.token) {\n            axios.get('http://localhost:8050/api/auth/currentUser', {\n                headers: {\n                    Authorization: `Bearer ${cookies.token}`\n                }\n            }).then(response => {\n                console.log(cookies.token)\n                // 토큰이 유효한 경우\n                const fetchedUser = response.data;\n                console.log(fetchedUser)\n                setUser(fetchedUser);\n            }).catch(error => {\n                // 토큰이 유효하지 않은 경우\n                console.error(\"Token verification failed:\", error);\n                handleLogout();\n            });\n        }\n\n        const script = document.createElement('script');\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n    const handlePasswordConfirm = async () => {\n        try {\n            const token = cookies.token;\n            if (!token) {\n                alert('로그인을 다시 해주세요.');\n                handleLogout();\n                return;\n            }\n            const response = await axios.post('http://localhost:8050/api/auth/verifyPassword', { userPassword, token });\n            if (response.data.isValid) {\n                setPasswordConfirmed(true);\n                setStep(1);\n            } else {\n                alert('비밀번호가 일치하지 않습니다.');\n            }\n        } catch (error) {\n            alert('잠시후 다시 시도해주세요');\n        }\n    };\n\n    const searchAddress = () => {\n        new window.daum.Postcode({\n            oncomplete: function(data) {\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\n                setAddressFields({\n                    postalCode: data.zonecode,\n                    address: addr,\n                    detailAddress: ''\n                });\n                setUserAddress(addr);\n            }\n        }).open();\n    };\n\n\n    const handleLogout = () => {\n        removeCookie('token');\n        setUser(null);\n        navigate(\"/\");\n    };\n\n    const triggerFileInput = () => {\n        fileInputRef.current.click();\n    };\n\n    const handleImageChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            setProfileImage(file);\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setPreviewImage(reader.result);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const validateForm = () => {\n        let errors = {};\n\n        if (!userInfo) {\n            errors.userInfo = \"1\";\n        }\n\n        if (!userPrefer) {\n            errors.userPrefer = \"2\";\n        }\n\n        if (!userPhone) {\n            errors.userPhone = \"3\";\n        }\n\n        return Object.keys(errors).length === 0;\n    };\n\n    const uploadProfileImage = async () => {\n        if (!profileImage) return null;\n\n        const formData = new FormData();\n        formData.append('profileImage', profileImage);\n\n        try {\n            const response = await axios.post('http://localhost:8050/api/uploadProfileImage', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            return response.data.imageUrl;\n        } catch (error) {\n            console.error('Error uploading profile image:', error);\n            return null;\n        }\n    };\n\n\n    const handleSaveChanges = async () => {\n        const imageUrl = await uploadProfileImage();\n\n        const updatedInfo = {\n            userInfo: userInfo,\n            userAddress: userAddress,\n            userPrefer: userPrefer,\n            userGender: userGender,\n            userPhone: userPhone,\n            userProfile: imageUrl\n        };\n\n        try {\n            const response = await axios.post('http://localhost:8050/api/auth/updateUserInfo', updatedInfo, {\n                headers: {\n                    Authorization: `Bearer ${cookies.token}`\n                }\n            });\n\n            if (response.status === 200) {\n                alert('정보가 성공적으로 업데이트되었습니다.');\n                window.location.href = \"/\";\n            } else {\n                alert('정보 업데이트에 실패했습니다.');\n            }\n        } catch (error) {\n            console.error('Error updating user information:', error);\n            alert('업데이트 중 오류가 발생했습니다.');\n        }\n    };\n\n\n    const goToNextStep = () => {\n        setStep(2);\n    };\n\n    const goToPreviousStep = () => {\n        setStep(1);\n    };\n\n    const handleBack = () => {\n        navigate(\"/MyInfo\");\n    };\n\n    const handleUserInfoChange = (e) => {\n        setUserInfo(e.target.value);\n    };\n\n    const handleAddressChange = (e) => {\n        setUserAddress(e.target.value);\n    };\n\n    const handlePreferredAreaChange = (e) => {\n        setUserPrefer(e.target.value);\n    };\n\n    const handleGenderChange = (e) => {\n        setUserGender(e.target.value);\n    };\n\n    const handlePhoneNumberChange = (e) => {\n        setUserPhone(e.target.value);\n    };\n\n    const getProfilePic = () => {\n        if(userType === \"company\"){\n            if (user.providerProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.providerProfile) {\n                return defaultProfilePic;\n            }\n            return user.providerProfile;\n        }else{\n            if (user.userProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.userProfile) {\n                return defaultProfilePic;\n            }\n            return user.userProfile;\n        }\n    };\n\n    return (\n        <StyledContainer>\n            <BoxContainer>\n                <ImageBox>\n                    <LargeImage src={logo} alt=\"logo\" />\n                </ImageBox>\n                {passwordConfirmed === false && (\n                    <InfoBox>\n                        <BackButton onClick={handleBack}>\n                            <FontAwesomeIcon icon={faArrowLeft} />\n                        </BackButton>\n                        <EditInfoTitle>정보 수정</EditInfoTitle>\n                        <ProfileEditSection>\n                            <ImageEditContainer>\n                                <ProfileImagePreview src={getProfilePic()} alt=\"Profile Preview\" />\n                            </ImageEditContainer>\n                            <Name>{user.userName + \"님\" || 'No Name'}</Name>\n                            <Email>{user.userEmail || 'No Email'}</Email>\n                            <Divider3>비밀번호 확인</Divider3>\n                            <InfoSection>\n                                <PasswordInput\n                                    type=\"password\"\n                                    value={userPassword}\n                                    onChange={(e) => setUserPassword(e.target.value)}\n                                    placeholder=\"비밀번호를 입력하세요\"\n                                />\n                            </InfoSection>\n                            <SaveChangesButton onClick={handlePasswordConfirm}>확인</SaveChangesButton>\n                        </ProfileEditSection>\n                    </InfoBox>\n                )}\n                {passwordConfirmed && step === 1 && (\n                    <InfoBox>\n                        <BackButton onClick={handleBack}>\n                            <FontAwesomeIcon icon={faArrowLeft} />\n                        </BackButton>\n                        <EditInfoTitle>정보 수정</EditInfoTitle>\n                        <ProfileEditSection>\n                            <ImageEditContainer>\n                                <ProfileImagePreview src={previewImage || getProfilePic()} alt=\"Profile Preview\" />\n                                <CameraIconLabel onClick={triggerFileInput}>\n                                    <FontAwesomeIcon icon={faCamera} />\n                                </CameraIconLabel>\n                                <HiddenFileInput\n                                    type=\"file\"\n                                    ref={fileInputRef}\n                                    onChange={handleImageChange}\n                                />\n                            </ImageEditContainer>\n                            <Name>{user.userName + \"님\" || 'No Name'}</Name>\n                            <Email>{user.userEmail || 'No Email'}</Email>\n                            <Divider>자기소개</Divider>\n                            <SelfIntroductionTextarea\n                                value={userInfo}\n                                onChange={handleUserInfoChange}\n                                placeholder=\"자기소개\"\n                            />\n                        </ProfileEditSection>\n                        <SaveChangesButton onClick={goToNextStep}>다음</SaveChangesButton>\n                    </InfoBox>\n                )}\n                {passwordConfirmed && step === 2 && (\n                    <InfoBox>\n                        <BackButton onClick={goToPreviousStep}>\n                            <FontAwesomeIcon icon={faArrowLeft} />\n                        </BackButton>\n                        <LogoImg src={logoSmall} alt=\"Logo\" />\n                        <InfoSection>\n                            <Divider2>주소</Divider2>\n                            <AddressContainer>\n                                <AddressInput\n                                    type=\"text\"\n                                    value={userAddress}\n                                    onChange={handleAddressChange}\n                                    placeholder=\"주소\"\n                                />\n                                <SearchButton onClick={searchAddress}>\n                                    검색\n                                </SearchButton>\n                            </AddressContainer>\n                            <Divider2>선호 지역</Divider2>\n                            <PreferredAreaInput\n                                type=\"text\"\n                                value={userPrefer}\n                                onChange={handlePreferredAreaChange}\n                                placeholder=\"선호 지역\"\n                            />\n                            <Divider2>성별</Divider2>\n                            <GenderSelect\n                                value={userGender}\n                                onChange={handleGenderChange}\n                            >\n                                <option value=\"\">성별 선택</option>\n                                <option value=\"male\">남성</option>\n                                <option value=\"female\">여성</option>\n                            </GenderSelect>\n                            <Divider2>전화번호</Divider2>\n                            <PhoneNumberInput\n                                type=\"text\"\n                                value={userPhone}\n                                onChange={handlePhoneNumberChange}\n                                placeholder=\"전화번호\"\n                            />\n                        </InfoSection>\n                        <SaveChangesButton onClick={handleSaveChanges}>저장</SaveChangesButton>\n                    </InfoBox>\n                )}\n            </BoxContainer>\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst BoxContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nconst InfoBox = styled.div`\n  width: 90%;\n  max-width: 500px;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\n  position: relative;\n`;\n\nconst EditInfoTitle = styled.h2`\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: #381E1F;\n  font-size: 25px;\n  font-weight: bold;\n`;\n\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em;\n  color: #000;\n`;\n\nconst LogoImg = styled.img`\n  height: 20vh;\n  width: auto;\n  margin-bottom: 5px;\n`;\n\nconst ImageBox = styled.div`\n  width: 100%;\n  max-width: 600px;\n  height: 90%;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LargeImage = styled.img`\n  max-width: 100%;\n  max-height: 90%;\n  border-radius: 10px;\n  object-fit: cover;\n`;\n\nconst Name = styled.h2`\n  margin: 0;\n  margin-top: 20px;\n  color: #381E1F;\n`;\n\nconst Email = styled.p`\n  color: gray;\n`;\n\nconst InfoSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Divider = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    margin-left: 10px;\n    border-bottom: 1px solid #ccc;\n  }\n\n  &::before {\n    margin-right: 10px;\n  }\n\n`;\n\nconst Divider2 = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-bottom: 10px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    margin-left: 10px;\n    border-bottom: 1px solid #ccc;\n  }\n\n`;\n\nconst Divider3 = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-top: 40px;\n  margin-bottom: 10px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    margin-left: 10px;\n    border-bottom: 1px solid #ccc;\n  }\n\n`;\n\nconst PasswordInput = styled.input`\n  display: block;\n  width: 80%;\n  text-align: center;\n  margin-top: 35px;\n  margin-bottom: 35px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #ccc;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nconst SelfIntroductionTextarea = styled.textarea`\n  width: 100%;\n  height: 120px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #ccc;\n  resize: none;\n  font-size: 15px;\n  color: #333;\n  background-color: #f7f7f7;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\nconst ProfileEditSection = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nconst ProfileImagePreview = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  margin-bottom: 10px;\n`;\n\nconst SaveChangesButton = styled.button`\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: #F7E600;\n  color: #381E1F;\n  border: none;\n  cursor: pointer;\n  font-size: 15px;\n  margin-top: 10px;\n  &:hover {\n    background-color: #e6d700;\n  }\n`;\n\nconst ImageEditContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\n\nconst CameraIconLabel = styled.label`\n  position: absolute;\n  bottom: 0;\n  transform: translate(50%, 50%);\n  cursor: pointer;\n  background-color: white;\n  border-radius: 50%;\n  padding: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n\nconst AddressContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n  width: 80%;\n`;\n\nconst SearchButton = styled.button`\n  margin-left: 10px;\n  padding: 8px 12px;\n  border: 1px solid #ccc;\n  background-color: white;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f7f7f7;\n  }\n`;\n\nconst AddressInput = styled.input`\n  display: block;\n  width: 60%;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nconst PreferredAreaInput = styled.input`\n  display: block;\n  width: 60%;\n  margin-bottom: 10px;\n  text-align: center;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nconst GenderSelect = styled.select`\n  display: block;\n  width: 60%;\n  margin-bottom: 10px;\n  text-align: center;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nconst PhoneNumberInput = styled.input`\n  display: block;\n  width: 60%;\n  margin-bottom: 10px;\n  text-align: center;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nexport default InfoChangePage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/MyInfoPage.js",["268","269","270","271","272","273"],[],"import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport defaultProfilePic from '../imgs/default_profile.png';\nimport {useNavigate} from \"react-router-dom\";\nimport {useCookies} from \"react-cookie\";\nimport {useUserStore} from \"../stores\";\nimport axios from \"axios\";\nimport {Badge} from \"react-bootstrap\";\nimport logo from \"../imgs/seungjun.jpg\";\nimport iu from \"../imgs/iu2.jpeg\"\n\nconst MyInfoPage = (props) => {\n    const navigate = useNavigate();\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    const { user, setUser } = useUserStore();\n    const userType = cookies.userType;\n\n    useEffect(() => {\n        if (cookies.token) {\n            if(userType === \"company\"){\n                axios.get('http://localhost:8050/api/auth/currentCompany', {\n                    headers: {\n                        Authorization: `Bearer ${cookies.token}`\n                    }\n                }).then(response => {\n                    console.log(cookies.token)\n                    // 토큰이 유효한 경우\n                    const fetchedUser = response.data;\n                    console.log(fetchedUser)\n                    setUser(fetchedUser);\n                }).catch(error => {\n                    // 토큰이 유효하지 않은 경우\n                    console.error(\"Token verification failed:\", error);\n                    handleLogout();\n                });\n            }else{\n                axios.get('http://localhost:8050/api/auth/currentUser', {\n                    headers: {\n                        Authorization: `Bearer ${cookies.token}`\n                    }\n                }).then(response => {\n                    console.log(cookies.token)\n                    // 토큰이 유효한 경우\n                    const fetchedUser = response.data;\n                    console.log(fetchedUser)\n                    setUser(fetchedUser);\n                }).catch(error => {\n                    // 토큰이 유효하지 않은 경우\n                    console.error(\"Token verification failed:\", error);\n                    handleLogout();\n                });\n            }\n        }\n    }, []);\n\n    const getProfilePicSrc = () => {\n        if(userType === \"company\"){\n            if (user.providerProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.providerProfile) {\n                return defaultProfilePic;\n            }\n            return user.providerProfile;\n        }else{\n            if (user.userProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.userProfile) {\n                return defaultProfilePic;\n            }\n            return user.userProfile;\n        }\n    };\n\n    const handleLogout = () => {\n        removeCookie('token');\n        setUser(null);\n        navigate(\"/\");\n    };\n\n    const handleEditProfile = () => {\n        if(userType === \"company\"){\n            navigate(\"/companyInfoChange\");\n        }else{\n            navigate(\"/infoChange\");\n        }\n    };\n\n    const companyInfo = () => {\n        return \"회사명 : \" + user.companyName + \"\\n주소 : \" + user.companyAddress + \"\\n전화 : \" + user.companyTel;\n    }\n\n    return (\n        <StyledContainer>\n            <BoxContainer>\n                <InfoBox>\n                    <ProfileSection>\n                        <ProfileImage src={getProfilePicSrc()} alt=\"프로필 사진\" />\n                        <NameSection>\n                            {userType === 'company' ?\n                                <Name>{user.providerName + \"님\" || 'No Name'}</Name>\n                                :\n                                <Name>{user.userName + \"님\" || 'No Name'}</Name>\n                            }\n                            {userType === 'company' ?\n                                <Badge bg=\"primary\" style={{ fontSize: \"16px\", marginLeft: \"10px\" }}>기업 회원</Badge>\n                                :\n                                <Badge bg=\"success\" style={{ fontSize: \"16px\", marginLeft: \"10px\" }}>일반 회원</Badge>\n                            }\n                        </NameSection>\n                        {userType === 'company' ?\n                            <Email>{user.providerEmail || 'No Email'}</Email>\n                            :\n                            <Email>{user.userEmail || 'No Email'}</Email>\n                        }\n                        <EditProfileButton onClick={handleEditProfile}>프로필 수정</EditProfileButton>\n                    </ProfileSection>\n                    <InfoSection>\n                        {userType === 'company' ?\n                            <Divider>회사소개</Divider>\n                            :\n                            <Divider>자기소개</Divider>\n                        }\n                        {userType === 'company' ?\n                            <SelfIntroductionTextarea\n                                readOnly\n                                value={companyInfo() || '회사소개가 없습니다.'}\n                            />\n                            :\n                            <SelfIntroductionTextarea\n                                readOnly\n                                value={user.userInfo || '자기소개가 없습니다.'}\n                            />\n                        }\n                    </InfoSection>\n                </InfoBox>\n                <ImageBox>\n                    <LargeImage src={logo} alt=\"logo\" />\n                </ImageBox>\n            </BoxContainer>\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst BoxContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nconst InfoBox = styled.div`\n  width: 90%;\n  max-width: 500px;\n  background: white;\n  padding: 20px;\n  margin-right: 5px;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst ImageBox = styled.div`\n  width: 90%;\n  max-width: 500px;\n  height: 90%;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LargeImage = styled.img`\n  max-width: 100%;\n  max-height: 90%;\n  border-radius: 10px;\n  object-fit: cover;\n`;\n\nconst ProfileSection = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nconst ProfileImage = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  margin-bottom: 10px;\n`;\n\nconst Name = styled.h2`\n  margin: 0;\n  color: #381E1F;\n`;\n\nconst Email = styled.p`\n  color: gray;\n`;\n\nconst InfoSection = styled.div`\n  // 스타일링 추가\n`;\n\nconst DetailRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 0;\n`;\n\nconst Label = styled.span`\n  font-weight: bold;\n`;\n\nconst Value = styled.span`\n  color: gray;\n`;\n\nconst EditProfileButton = styled.button`\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: #F7E600;\n  color: #381E1F;\n  border: none;\n  cursor: pointer;\n  font-size: 15px;\n  margin-top: 5px;\n  &:hover {\n    background-color: #e6d700;\n  }\n`;\n\nconst NameSection = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;\n\nconst Divider = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    margin-left: 10px;\n    border-bottom: 1px solid #ccc;\n  }\n\n  &::before {\n    margin-right: 10px;\n  }\n\n`;\n\nconst SelfIntroductionTextarea = styled.textarea`\n  width: 100%;\n  height: 140px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #ccc;\n  resize: none;\n  font-size: 15px;\n  color: #333;\n  background-color: #f7f7f7;\n  margin-bottom: 10px;\n  margin-top: 10px;\n\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\n\nexport default MyInfoPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/CompanySignupPage.js",["274","275"],[],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\"\nimport { Form, Button, InputGroup, Row, Col } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport logo from \"../imgs/logo2.png\";\n\nconst CompanySignUpPage = () => {\n    const navigate = useNavigate();\n\n    const [showSecondPart, setShowSecondPart] = useState(false);\n    const [formData, setFormData] = useState({\n        providerId: '',\n        providerName: '',\n        providerEmail: '',\n        providerPassword: '',\n        providerPasswordCheck: '',\n        companyName: '',\n        companyAddress: '',\n        companyTel: '',\n        providerProfile: ''\n    });\n    const [addressFields, setAddressFields] = useState({\n        postalCode: '',\n        address: '',\n        detailAddress: ''\n    });\n\n    const [validationErrors, setValidationErrors] = useState({});\n\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    const searchAddress = () => {\n        new window.daum.Postcode({\n            oncomplete: function(data) {\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\n                const fullAddress = {\n                    postalCode: data.zonecode,\n                    address: addr,\n                    detailAddress: ''\n                };\n                setAddressFields(fullAddress);\n            }\n        }).open();\n    };\n    const validateForm = () => {\n        let errors = {};\n\n        // 아이디 유효성 검사\n        if (formData.providerId.length < 4 || formData.providerId.length > 12) {\n            errors.providerId = \"아이디는 4자 이상 12자 이하로 입력해주세요.\";\n        }\n\n        // 이름 유효성 검사\n        if (!formData.providerName) {\n            errors.providerName = \"이름을 입력해주세요.\";\n        }\n\n        // 이메일 유효성 검사\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailPattern.test(formData.providerEmail)) {\n            errors.providerEmail = \"올바른 이메일 주소를 입력해주세요.\";\n        }\n\n        // 비밀번호 유효성 검사\n        const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9]).{4,12}$/;\n        if (!passwordPattern.test(formData.providerPassword)) {\n            errors.providerPassword = \"비밀번호는 4~12자의 영문 대소문자, 숫자로만 입력해야 합니다.\";\n        }\n\n        // 비밀번호 확인 검사\n        if (formData.providerPassword !== formData.providerPasswordCheck) {\n            errors.providerPasswordCheck = \"비밀번호가 일치하지 않습니다.\";\n        }\n\n        // 휴대폰 번호 유효성 검사\n        const telPattern = /^[0-9]{8,11}$/;\n        if (!telPattern.test(formData.companyTel)) {\n            errors.companyTel = \"올바른 회사 전화번호를 입력해주세요.\";\n        }\n\n        // 회사명\n        if (!formData.companyName) {\n            errors.companyName = \"선호 지역을 입력해주세요.\";\n        }\n\n        setValidationErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressFields({ ...addressFields, [e.target.name]: e.target.value });\n    };\n\n    const handleNext = () => {\n        setShowSecondPart(true);\n    };\n\n    const handleBack = () => {\n        if (showSecondPart) {\n            setShowSecondPart(false);\n        } else {\n            navigate(-1);\n        }\n    };\n\n    const handleSignUp = (event) => {\n        event.preventDefault();\n        if (validateForm()) {\n            const combinedAddress = `${addressFields.postalCode} ${addressFields.address} ${addressFields.detailAddress}`.trim();\n            const signUpData = {\n                ...formData,\n                companyAddress: combinedAddress\n            };\n\n            axios.post('http://localhost:8050/api/auth/signUp/company', signUpData)\n                .then(response => {\n                    console.log(\"회원가입 성공: \", response.data);\n                    navigate(\"/login\");\n                })\n                .catch(error => {\n                    console.error(\"회원가입 실패: \", error);\n                });\n        }\n    };\n\n    return (\n        <StyledContainer>\n            <FormBox>\n                <BackButton onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} />\n                </BackButton>\n                <LogoImg src={logo} alt=\"Logo\" />\n                <Form onSubmit={handleSignUp}>\n                    {!showSecondPart ? (\n                        <>\n                            <StyledFormGroup controlId=\"formBasicProviderId\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"아이디\"\n                                    name=\"providerId\"\n                                    value={formData.providerId}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.providerId && <ErrorText>{validationErrors.providerId}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicProviderName\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"이름\"\n                                    name=\"providerName\"\n                                    value={formData.providerName}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.providerName && <ErrorText>{validationErrors.providerName}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicProviderEmail\">\n                                <StyledFormControl\n                                    type=\"email\"\n                                    placeholder=\"회사 이메일\"\n                                    name=\"providerEmail\"\n                                    value={formData.providerEmail}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.providerEmail && <ErrorText>{validationErrors.providerEmail}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicProviderPassword\">\n                                <StyledFormControl\n                                    type=\"password\"\n                                    placeholder=\"비밀번호\"\n                                    name=\"providerPassword\"\n                                    value={formData.providerPassword}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.providerPassword && <ErrorText>{validationErrors.providerPassword}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPasswordCheck\">\n                                <StyledFormControl\n                                    type=\"password\"\n                                    placeholder=\"비밀번호 확인\"\n                                    name=\"providerPasswordCheck\"\n                                    value={formData.providerPasswordCheck}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.providerPasswordCheck && <ErrorText>{validationErrors.providerPasswordCheck}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledButton variant=\"secondary\" onClick={handleNext}>\n                                다음\n                            </StyledButton>\n                        </>\n                    ) : (\n                        <>\n                            <StyledFormGroup>\n                                <Row>\n                                    <Col>\n                                        <StyledFormControl\n                                            type=\"text\"\n                                            placeholder=\"회사 우편번호\"\n                                            name=\"postalCode\"\n                                            value={addressFields.postalCode}\n                                            onChange={handleAddressChange}\n                                            disabled\n                                        />\n                                    </Col>\n                                    <Col md=\"auto\">\n                                        <Button variant=\"outline-secondary\" onClick={searchAddress}>\n                                            검색\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </StyledFormGroup>\n                            <StyledFormGroup>\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"회사 주소\"\n                                    name=\"address\"\n                                    value={addressFields.address}\n                                    onChange={handleAddressChange}\n                                    disabled\n                                />\n                            </StyledFormGroup>\n                            <StyledFormGroup>\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"회사 상세주소\"\n                                    name=\"detailAddress\"\n                                    value={addressFields.detailAddress}\n                                    onChange={handleAddressChange}\n                                />\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicCompanyName\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"회사명\"\n                                    name=\"companyName\"\n                                    value={formData.companyName}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.companyName && <ErrorText>{validationErrors.companyName}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicTel\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"회사 전화번호(-빼고 입력)\"\n                                    name=\"companyTel\"\n                                    value={formData.companyTel}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.companyTel && <ErrorText>{validationErrors.companyTel}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledButton variant=\"primary\" type=\"submit\">\n                                회원가입\n                            </StyledButton>\n                        </>\n                    )}\n                </Form>\n            </FormBox>\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #ffffff;\n`;\n\nconst FormBox = styled.div`\n  padding: 40px;\n  justify-content: center;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 450px;\n  margin-top: 150px;\n  position: relative;\n`;\n\nconst StyledFormGroup = styled(Form.Group)`\n  margin-bottom: 20px;\n`;\n\nconst StyledFormControl = styled(Form.Control)`\n  font-size: 16px;\n  padding: 10px;\n\n  ::placeholder {\n    color: #666;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst LogoImg = styled.img`\n  height: 18vh;\n  width: auto;\n  margin-bottom: 10px;\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em;\n  color: #000;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 40px;\n  align-items:center;\n  justify-content: center;\n  font-size: 15px;\n  font-weight: 500;\n  font-family: \"Berlin Sans FB\",fantasy;\n  color: #996666;\n`;\n\nconst ErrorText = styled.div`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nexport default CompanySignUpPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/GoogleLoginPage.js",["276"],[],"import { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport MemberSignUpPage from \"./MemberSignupPage\";\n\nconst GoogleLoginPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(location.search);\n        const code = urlParams.get('code');\n        console.log(code)\n\n        if (code) {\n            axios.post('http://localhost:8050/api/auth/google', { code })\n                .then(response => {\n                    navigate('/memberRegister', { state: { email: response.data.email } });\n                })\n                .catch(error => console.error(error));\n        }\n    }, [location, navigate]);\n\n    return <div>Google 인증 중...</div>;\n};\n\nexport default GoogleLoginPage;\n","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/MemberSignupPage.js",["277","278"],[],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\"\nimport { useLocation } from 'react-router-dom';\nimport { Form, Button, InputGroup, Row, Col } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport logo from \"../imgs/logo2.png\";\n\nconst MemberSignUpPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [isKakaoOrGoogleEmail, setIsKakaoOrGoogleEmail] = useState(false);\n\n    useEffect(() => {\n        if (location.state && location.state.email) {\n            setFormData(prevFormData => ({\n                ...prevFormData,\n                userEmail: location.state.email\n            }));\n            setIsKakaoOrGoogleEmail(true);\n        }\n    }, [location]);\n\n    const [showSecondPart, setShowSecondPart] = useState(false);\n    const [formData, setFormData] = useState({\n        userId: '',\n        userName: '',\n        userEmail: '',\n        userPassword: '',\n        userPasswordCheck: '',\n        userGender: '',\n        userInfo: '',\n        userPrefer: '',\n        userPhone: '',\n        userAddress: '',\n        userProfile: ''\n    });\n    const [addressFields, setAddressFields] = useState({\n        postalCode: '',\n        address: '',\n        detailAddress: ''\n    });\n\n    const [validationErrors, setValidationErrors] = useState({});\n\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    const searchAddress = () => {\n        new window.daum.Postcode({\n            oncomplete: function(data) {\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\n                const fullAddress = {\n                    postalCode: data.zonecode,\n                    address: addr,\n                    detailAddress: ''\n                };\n                setAddressFields(fullAddress);\n            }\n        }).open();\n    };\n    const validateForm = () => {\n        let errors = {};\n\n        // 아이디 유효성 검사\n        if (formData.userId.length < 4 || formData.userId.length > 12) {\n            errors.userId = \"아이디는 4자 이상 12자 이하로 입력해주세요.\";\n        }\n\n        // 이름 유효성 검사\n        if (!formData.userName) {\n            errors.userName = \"이름을 입력해주세요.\";\n        }\n\n        // 이메일 유효성 검사\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailPattern.test(formData.userEmail)) {\n            errors.userEmail = \"올바른 이메일 주소를 입력해주세요.\";\n        }\n\n        // 비밀번호 유효성 검사\n        const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9]).{4,12}$/;\n        if (!passwordPattern.test(formData.userPassword)) {\n            errors.userPassword = \"비밀번호는 4~12자의 영문 대소문자, 숫자로만 입력해야 합니다.\";\n        }\n\n        // 비밀번호 확인 검사\n        if (formData.userPassword !== formData.userPasswordCheck) {\n            errors.userPasswordCheck = \"비밀번호가 일치하지 않습니다.\";\n        }\n\n        // 휴대폰 번호 유효성 검사\n        const phonePattern = /^[0-9]{10,11}$/;\n        if (!phonePattern.test(formData.userPhone)) {\n            errors.userPhone = \"올바른 휴대폰 번호를 입력해주세요.\";\n        }\n\n        // 선호 지역 유효성 검사\n        if (!formData.userPrefer) {\n            errors.userPrefer = \"선호 지역을 입력해주세요.\";\n        }\n\n        if (!formData.userGender) {\n            errors.userGender = \"성별을 선택해주세요.\";\n        }\n\n        // 자기소개 유효성 검사\n        if (!formData.userInfo) {\n            errors.userInfo = \"자기소개를 입력해주세요.\";\n        }\n\n        console.log(errors); // 오류 객체 출력\n\n        console.log(Object.keys(errors).length);\n\n        setValidationErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressFields({ ...addressFields, [e.target.name]: e.target.value });\n    };\n\n    const handleNext = () => {\n        setShowSecondPart(true);\n    };\n\n    const handleBack = () => {\n        if (showSecondPart) {\n            setShowSecondPart(false);\n        } else {\n            navigate(-1);\n        }\n    };\n\n    const handleSignUp = (event) => {\n        event.preventDefault();\n        if (validateForm()) {\n            const combinedAddress = `${addressFields.postalCode} ${addressFields.address} ${addressFields.detailAddress}`.trim();\n            const signUpData = {\n                ...formData,\n                userAddress: combinedAddress\n            };\n\n            axios.post('http://localhost:8050/api/auth/signUp', signUpData)\n                .then(response => {\n                    console.log(\"회원가입 성공: \", response.data);\n                    navigate(\"/login\");\n                })\n                .catch(error => {\n                    // 에러 처리\n                    console.error(\"회원가입 실패: \", error);\n                });\n        }\n    };\n\n    return (\n        <StyledContainer>\n            <FormBox>\n                <BackButton onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} />\n                </BackButton>\n                <LogoImg src={logo} alt=\"Logo\" />\n                <Form onSubmit={handleSignUp}>\n                    {!showSecondPart ? (\n                        <>\n                            <StyledFormGroup controlId=\"formBasicUsername\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"아이디\"\n                                    name=\"userId\"\n                                    value={formData.userId}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userId && <ErrorText>{validationErrors.userId}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicName\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"이름\"\n                                    name=\"userName\"\n                                    value={formData.userName}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userName && <ErrorText>{validationErrors.userName}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicEmail\">\n                                <StyledFormControl\n                                    type=\"email\"\n                                    placeholder=\"이메일\"\n                                    name=\"userEmail\"\n                                    value={formData.userEmail}\n                                    onChange={handleChange}\n                                    disabled={isKakaoOrGoogleEmail}\n                                />\n                                {validationErrors.userEmail && <ErrorText>{validationErrors.userEmail}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPassword\">\n                                <StyledFormControl\n                                    type=\"password\"\n                                    placeholder=\"비밀번호\"\n                                    name=\"userPassword\"\n                                    value={formData.userPassword}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userPassword && <ErrorText>{validationErrors.userPassword}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPasswordCheck\">\n                                <StyledFormControl\n                                    type=\"password\"\n                                    placeholder=\"비밀번호 확인\"\n                                    name=\"userPasswordCheck\"\n                                    value={formData.userPasswordCheck}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userPasswordCheck && <ErrorText>{validationErrors.userPasswordCheck}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPhone\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"전화번호(-빼고 입력)\"\n                                    name=\"userPhone\"\n                                    value={formData.userPhone}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userPhone && <ErrorText>{validationErrors.userPhone}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledButton variant=\"secondary\" onClick={handleNext}>\n                                다음\n                            </StyledButton>\n                        </>\n                    ) : (\n                        <>\n                            <StyledFormGroup>\n                                <Row>\n                                    <Col>\n                                        <StyledFormControl\n                                            type=\"text\"\n                                            placeholder=\"우편번호\"\n                                            name=\"postalCode\"\n                                            value={addressFields.postalCode}\n                                            onChange={handleAddressChange}\n                                            disabled\n                                        />\n                                    </Col>\n                                    <Col md=\"auto\">\n                                        <Button variant=\"outline-secondary\" onClick={searchAddress}>\n                                            검색\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </StyledFormGroup>\n                            <StyledFormGroup>\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"주소\"\n                                    name=\"address\"\n                                    value={addressFields.address}\n                                    onChange={handleAddressChange}\n                                    disabled\n                                />\n                            </StyledFormGroup>\n                            <StyledFormGroup>\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"상세주소\"\n                                    name=\"detailAddress\"\n                                    value={addressFields.detailAddress}\n                                    onChange={handleAddressChange}\n                                />\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPrefer\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"선호 지역\"\n                                    name=\"userPrefer\"\n                                    value={formData.userPrefer}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userPrefer && <ErrorText>{validationErrors.userPrefer}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicGender\">\n                                <Form.Control as=\"select\" name=\"userGender\" value={formData.userGender} onChange={handleChange}>\n                                    <option value=\"\">성별 선택</option>\n                                    <option value=\"male\">남성</option>\n                                    <option value=\"female\">여성</option>\n                                </Form.Control>\n                                {validationErrors.userGender && <ErrorText>{validationErrors.userGender}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicIntroduction\">\n                                <StyledFormControl\n                                    as=\"textarea\"\n                                    placeholder=\"자기소개\"\n                                    name=\"userInfo\"\n                                    value={formData.userInfo}\n                                    onChange={handleChange}\n                                    rows={3}\n                                />\n                                {validationErrors.userInfo && <ErrorText>{validationErrors.userInfo}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledButton variant=\"primary\" type=\"submit\">\n                                회원가입\n                            </StyledButton>\n                        </>\n                    )}\n                </Form>\n            </FormBox>\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #ffffff;\n`;\n\nconst FormBox = styled.div`\n  padding: 40px;\n  justify-content: center;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 450px;\n  margin-top: 150px;\n  position: relative;\n`;\n\nconst StyledFormGroup = styled(Form.Group)`\n  margin-bottom: 20px;\n`;\n\nconst StyledFormControl = styled(Form.Control)`\n  font-size: 16px;\n  padding: 10px;\n\n  ::placeholder {\n    color: #666;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst LogoImg = styled.img`\n  height: 18vh;\n  width: auto;\n  margin-bottom: 10px;\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em;\n  color: #000;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 40px;\n  align-items:center;\n  justify-content: center;\n  font-size: 15px;\n  font-weight: 500;\n  font-family: \"Berlin Sans FB\",fantasy;\n  color: #996666;\n`;\n\nconst ErrorText = styled.div`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nexport default MemberSignUpPage;\n","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/Footer.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/stores/index.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/stores/user.store.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AboutPage.js",["279","280","281","282","283","284","285","286","287","288","289","290","291"],[],"import React from \"react\";\nimport styled from \"styled-components\";\nimport {useNavigate} from \"react-router-dom\";\nimport aboutLogo from \"../imgs/aboutLogo.jpg\";\nimport about1 from \"../imgs/about1.png\";\nimport about2 from \"../imgs/about2.png\";\nimport about3 from \"../imgs/about3.png\";\nimport about4 from \"../imgs/about4.jpg\";\nimport about5 from \"../imgs/about5.jpg\";\nimport about6 from \"../imgs/about6.jpg\";\n\nimport Flow1 from \"../imgs/Flow1.png\";\nimport Flow2 from \"../imgs/Flow2.png\";\nimport Flow3 from \"../imgs/Flow3.png\";\nimport Flow4 from \"../imgs/Flow4.png\";\nimport Footer from \"../Components/Footer\";\n\n\nconst AboutPage = () => {\n    const navigate = useNavigate();\n\n    const Detailbutton = () => {\n        navigate(\"/aboutPolicy\");\n    }\n\n    const Flowbutton = () => {\n        navigate(\"/recommendcourse\")\n    }\n    return (\n        <Container>\n            <CCContainer>\n        <BigAboutContainer>\n            <AboutContainer>\n                <TopAboutContainer>\n                    <ImageContainer>\n                        <img src={aboutLogo} alt=\"About Image\" />\n                        <OverlayTextContainer>\n                            <OverlayTextTop>\n                                <h2>한소연이란 무엇입니까?</h2>\n                            </OverlayTextTop>\n                            <OverlayTextBottom>\n                                <h2>About</h2>\n                            </OverlayTextBottom>\n                        </OverlayTextContainer>\n                    </ImageContainer>\n                </TopAboutContainer>\n                <BottomAboutContainer>\n                    <BottomCenterContainer>\n                        <h2>우리의 생각</h2>\n                        <h3>한국에는 아직 놀라울 정도로 넘치는 지역으로 가득합니다.</h3>\n                        <h3>더 많은 사람들이 한국 각지에 부담없이 나가서 지역 각지에서 즐기는 세상을 만들고 싶습니다!</h3>\n                        <h3>\"한소연\"은 그런 생각에서 태어난 서비스 입니다.</h3>\n                        <DeatailButton onClick={Detailbutton}>자세히 보기</DeatailButton>\n                    </BottomCenterContainer>\n                </BottomAboutContainer>\n            </AboutContainer>\n        </BigAboutContainer>\n            </CCContainer>\n            <FeatureContainer>\n                    <h2 style={{color:\"#EF6C00\"}}>매일의 특징</h2>\n                <BigFeatureContainer>\n                    <FirstFeatureContainer>\n                        <img src={about1} alt=\"about1 Image\" />\n                        <h2>도움(일)을 하고 <br/>돈을 벌 수 있습니다.</h2>\n                        <h3>※최저임금 이상의 보상을 얻을 수 있습니다.</h3>\n                    </FirstFeatureContainer>\n                    <FirstFeatureContainer>\n                        <img src={about2} alt=\"about2 Image\" />\n                        <h2>지역 여행</h2>\n                        <h3>※교통비 지급은 없습니다.</h3>\n                    </FirstFeatureContainer>\n                    <FirstFeatureContainer>\n                        <img src={about3} alt=\"about3 Image\" />\n                        <h2>무료로 숙박을 제공해주는 <br/> 지역도 매칭해 드립니다.</h2>\n                        <h3>※일부 예외도 있습니다.</h3>\n                    </FirstFeatureContainer>\n                </BigFeatureContainer>\n            </FeatureContainer>\n            <BottomFeatureContainer>\n                <h2 style={{color:\"#EF6C00\", fontSize:\"28px\", fontWeight:\"700\"}}>조건 포인트</h2>\n                <BottomBigFeatureContainer>\n                    <FirstFeatureContainer>\n                        <img src={about5} alt=\"about4 Image\" />\n                        <h2>도움을 통해 <br/>지역사람과 관계성이 있다!</h2>\n                        <h3>지역에는 다양한 곤란이 넘치고 있습니다.</h3>\n                        <h3>지역에서는 인력 부족으로 곤란을 <br/>겪고 있기 때문에 <br/>항상 진심으로 도움이 되어 관계치를 <br/>유지할 수 있습니다.</h3>\n                    </FirstFeatureContainer>\n                    <FirstFeatureContainer>\n                        <img src={about6} alt=\"about5 Image\" />\n                        <h2>지역 여행</h2>\n                        <h3>※교통비 지급은 없습니다.</h3>\n                    </FirstFeatureContainer>\n                    <FirstFeatureContainer>\n                        <img src={about6} alt=\"about6 Image\" />\n                        <h2>무료로 숙박을 제공해주는 <br/> 지역도 매칭해 드립니다.</h2>\n                        <h3>※일부 예외도 있습니다.</h3>\n                    </FirstFeatureContainer>\n                </BottomBigFeatureContainer>\n            </BottomFeatureContainer>\n            <SocialContainer>\n                <SocialBigContainer>\n                    <h2>안녕하세요!</h2>\n                    <h4>동해물과 백두산이 마르고닳도록 하느님이 보우하사 우리나라만세 무궁화 삼천리 화려강산 대한사람 대한으로 길이 보전하세</h4>\n                    <h4>남산 위에 저 소나무 철갑을 두른듯 바람서리 분별함은 우리 기상일세 무궁화 삼천리 화려강산 대한사람 대한으로 길이 보전하세</h4>\n                    <h4>가을 하늘 공활한데 높고 구름 없이 밝은 달은 우리 가삼 일편 단심일세 무궁화 삼천리 화려강산 대한사람 대한으로 길이 보전하세</h4>\n                    <h4>이 기상과 이 맘으로 충성을 다하여 괴로우나 즐거우나 나라 사랑하세 무궁화 삼천리 화려강산 대한사람 대한으로 길이 보전하세</h4>\n                </SocialBigContainer>\n            </SocialContainer>\n            <FlowContainer>\n                <FlowBigContainer>\n                    <FlowCenterContainer>\n                        <TopText>\n                            <h2>매번 참가까지의 흐름</h2>\n                        </TopText>\n                        <BBContainer>\n                        <div className={\"Image1\"} style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",width: \"300px\", height: \"300px\"}}>\n                            <img src={Flow1} alt=\"Flow1 Image\" style={{borderBottom:\"2px dashed red\",width: \"200px\", height: \"150px\"}}/>\n                            <h2 style={{fontSize:\"20px\", fontWeight:\"700\", marginTop:\"1rem\"}}>마이 페이지 정보를 등록!</h2>\n                            <h4 style={{fontSize:\"18px\", fontWeight:\"600\"}}>간단한 자기소개나 스킬을 등록하자!</h4>\n                        </div>\n                        <div className={\"Image2\"} style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",width: \"300px\", height: \"300px\"}}>\n                            <img src={Flow2} alt=\"Flow2 Image\" style={{borderBottom:\"2px dashed red\",width: \"200px\", height: \"150px\"}}/>\n                            <h2 style={{fontSize:\"20px\", fontWeight:\"700\", marginTop:\"1rem\"}}>가고 싶은 날을 지역에서 선택해 응모!</h2>\n                            <h4 style={{fontSize:\"18px\", fontWeight:\"600\"}}>모집 일람에서 가고 싶은 <br/>대접을 찾아 응모하자!</h4>\n                        </div>\n                        <div className={\"Image3\"} style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",width: \"300px\", height: \"300px\"}}>\n                            <img src={Flow3} alt=\"Flow3 Image\" style={{borderBottom:\"2px dashed red\",width: \"200px\", height: \"150px\"}}/>\n                            <div>\n                            <h2 style={{fontSize:\"20px\", fontWeight:\"700\", marginTop:\"1rem\"}}>매칭 성립!</h2>\n                            <h4 style={{fontSize:\"18px\", fontWeight:\"600\"}}>매칭이 성립되면, <br/> 매번 갈 준비를 시작합시다!</h4>\n                            </div>\n                        </div>\n                        <div className={\"Image4\"} style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",width: \"300px\", height: \"300px\"}}>\n                            <img src={Flow4} alt=\"Flow4 Image\" style={{borderBottom:\"2px dashed red\",width: \"200px\", height: \"150px\"}}/>\n                            <h2 style={{fontSize:\"20px\", fontWeight:\"700\", marginTop:\"1rem\"}}>매번마다 출발!</h2>\n                            <h4 style={{fontSize:\"18px\", fontWeight:\"600\"}}>출발일이 오면, 매칭한 굉장히 먼저 출발!</h4>\n                        </div>\n                        </BBContainer>\n                        <FlowButtonContainer>\n                            <FlowButton onClick={Flowbutton}>매번 시작하기</FlowButton>\n                        </FlowButtonContainer>\n                    </FlowCenterContainer>\n                </FlowBigContainer>\n            </FlowContainer>\n        </Container>\n    )\n}\nconst Container = styled.div`\n  position: absolute;\n  width: 100%;\n  justify-content: center;\n  height: 100vh;\n  margin: auto;\n  display: grid;\n  grid-template-columns: 1fr; /* Single column for the entire container */\n  grid-template-rows: auto 1fr auto auto; /* Four rows for BigAboutContainer, FeatureContainer, FlowContainer, and SocialContainer */\n  grid-template-areas:\n    \"BigAboutContainer\"\n    \"FeatureContainer\"\n    \"FlowContainer\"\n    \"SocialContainer\";\n`;\n\nconst BigAboutContainer = styled.div`\n  display: flex;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr; /* Adjust rows as needed */\n  height: 70vh; /* Change height to auto for responsiveness */\n  justify-content: center;\n  align-items: center;\n  margin-top: 4rem;\n  width: 90%;\n  border-radius: 10% 10% 0 0 / 10% 10% 0 0; /* 부드러운 흐물한 효과를 위한 border-radius 설정 */\n`;\n\nconst AboutContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%; /* Change width to 100% for responsiveness */\n  max-width: 1200px; /* Add max-width for responsiveness */\n`;\nconst CCContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst TopAboutContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 5.5;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 50%;\n  img {\n    width: 100%;\n    height: 300px;\n    max-width: 100%; /* Ensure the image does not exceed its natural size */\n    border-radius: 10% 10% 0 0 / 10% 10% 0 0; /* 부드러운 흐물한 효과를 위한 border-radius 설정 */\n  }\n`;\nconst OverlayTextContainer = styled.div`\n  position: absolute;\n  justify-content: center;\n  width: 100%;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  top: 50%; /* 부모 요소의 50% 높이에서 정렬 시작 */\n  transform: translateY(-50%); /* 부모 요소의 50% 높이만큼 위로 이동 */\n`;\n\nconst OverlayTextTop = styled.div`\n  border-radius: 5px;\n  text-align: center;\n  \n  h2 {\n    font-size: 32px;\n    font-weight: 700;\n    color: white;\n  }\n`;\n\nconst OverlayTextBottom = styled.div`\n  border-radius: 5px;\n  text-align: center;\n  \n  h2 {\n    font-size: 28px;\n    font-weight: 600;\n    color: white;\n  }\n`;\n\nconst BottomAboutContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  \n`;\n\nconst BottomCenterContainer = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: #FDF9EA;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  border-radius: 5px;\n  border: 2px solid #FBCEB1;\n\n  h2 {\n    font-size: 36px;\n    color: orange;\n    font-weight: 700;\n  }\n  h3 {\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n\nconst DeatailButton = styled.button`\n  background-color: #EF6C00;\n  color: white;\n  margin-bottom: 1rem;\n  font-weight: 500;\n  border: none;\n  border-radius: 3px;\n  width: 250px;\n  height: 35px;\n`\nconst FeatureContainer = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto; /* Change height to auto for responsiveness */\n  align-items: center;\n  justify-content: center; /* 가로 방향 중앙 정렬 */\n\n  h2 {\n    font-size: 28px;\n    font-weight: 700;\n  }\n`;\n\nconst BigFeatureContainer = styled.div`\n  width: 100%; /* Change width to 100% for responsiveness */\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive grid */\n  gap: 1rem;\n  justify-content: space-around;\n  height: auto; /* Change height to auto for responsiveness */\n`;\n\nconst FirstFeatureContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 8px;\n  text-align: center;\n  margin: 1rem;\n  img {\n    width: 20rem;\n    height: 15rem;\n    border-radius: 10rem;\n    margin: 0 auto;\n  }\n  h2 {\n    margin-top: 5px;\n    font-size: 24px;\n    font-weight: 700;\n  }\n  h3 {\n    font-size: 18px;\n    font-weight: 600;\n  }\n`;\n\nconst BottomFeatureContainer = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto; /* Change height to auto for responsiveness */\n  align-items: center;\n  justify-content: center; /* 가로 방향 중앙 정렬 */\n`;\n\nconst BottomBigFeatureContainer = styled.div`\n  width: 100%; /* Change width to 100% for responsiveness */\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive grid */\n  gap: 1rem;\n  justify-content: space-between;\n  height: auto; /* Change height to auto for responsiveness */\n`;\n\nconst FlowContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr; /* Single column for the entire container */\n  gap: 20px;\n  width: 100%;\n  height: 400px;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst FlowBigContainer = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr auto; /* Three rows for TopText, FlowCenterContainer, and FlowButtonContainer */\n  width: 100%;\n  height: auto;\n  \n`;\n\nconst TopText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  h2 {\n    font-size: 28px;\n    font-weight: 700;\n    color: orange;\n  }\n`;\n\nconst FlowCenterContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto; /* 자동으로 행의 크기를 조정 */\n  gap: 20px;\n  justify-content: space-between;\n  padding: 30px; /* 필요에 따라 패딩 조정 */\n  background-color: #FDF9EA;\n  margin-top: 2rem;\n  margin-bottom: 3rem;\n  /* 각 요소에 일정한 간격을 위해 마진 추가 */\n  .Image1, .Image2, .Image3, .Image4 {\n    margin: 10px;\n  }\n`;\nconst BBContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* 반응형 그리드 */\n  gap: 20px;\n  justify-content: space-around;\n  background-color: #FDF9EA;\n`;\n\nconst FlowButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst FlowButton = styled.button`\n  height: 50px;\n  width: 500px;\n  background-color: #FDF9EA;\n  border-radius: 5px;\n  border-color: orange;\n  color: orange;\n  font-weight: 700;\n  font-size: 24px;\n  \n  &:hover {\n    background-color: #FBCEB1;\n    color: #f7e8cb;\n  }\n`;\nconst SocialContainer = styled.div`\n  display: flex;\n  margin-top: 3rem;\n  height: auto; /* Change height to auto for responsiveness */\n  flex-direction: column;\n  justify-content: center;\n  grid-area: SocialContainer; /* Specify the grid area */\n`;\n\nconst SocialBigContainer = styled.div`\n  display: flex;\n  height: auto; /* Change height to auto for responsiveness */\n  background-color: white;\n  flex-direction: column;\n\n  h2 {\n    font-size: 32px;\n    font-weight: 700;\n  }\n\n  h4 {\n    font-size: 20px;\n  }\n`;\n\nexport default AboutPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecruitPage.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/CompanyInfoChangePage.js",["292","293","294","295","296","297","298","299","300","301","302","303"],[],"import React, {useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport defaultProfilePic from '../imgs/default_profile.png';\nimport {useNavigate} from \"react-router-dom\";\nimport {useCookies} from \"react-cookie\";\nimport {useUserStore} from \"../stores\";\nimport axios from \"axios\";\nimport {Badge} from \"react-bootstrap\";\nimport logo from \"../imgs/gwanghui.jpg\";\nimport iu from \"../imgs/iu3.png\"\nimport logoSmall from \"../imgs/logo2.png\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faCamera} from '@fortawesome/free-solid-svg-icons';\n\nconst CompanyInfoChangePage = (props) => {\n    const navigate = useNavigate();\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\n    const { user, setUser } = useUserStore();\n    const userType = cookies.userType;\n    const [step, setStep] = useState(1);\n\n    const [providerPassword, setProviderPassword] = useState('');\n    const [passwordConfirmed, setPasswordConfirmed] = useState(false);\n\n    const [profileImage, setProfileImage] = useState(null);\n    const [previewImage, setPreviewImage] = useState(null);\n\n    const fileInputRef = useRef(null);\n\n    const [addressFields, setAddressFields] = useState({\n        postalCode: '',\n        address: '',\n        detailAddress: ''\n    });\n\n    const [companyName, setCompanyName] = useState(user.companyName || '');\n    const [companyAddress, setCompanyAddress] = useState(user.companyAddress || '');\n    const [companyTel, setCompanyTel] = useState(user.companyTel || '');\n\n    useEffect(() => {\n        if (cookies.token) {\n            axios.get('http://localhost:8050/api/auth/currentCompany', {\n                headers: {\n                    Authorization: `Bearer ${cookies.token}`\n                }\n            }).then(response => {\n                console.log(cookies.token)\n                // 토큰이 유효한 경우\n                const fetchedUser = response.data;\n                console.log(fetchedUser)\n                setUser(fetchedUser);\n            }).catch(error => {\n                // 토큰이 유효하지 않은 경우\n                console.error(\"Token verification failed:\", error);\n                handleLogout();\n            });\n        }\n\n        const script = document.createElement('script');\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    const getProfilePicSrc = () => {\n        if (user.providerProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.providerProfile) {\n            return defaultProfilePic;\n        }\n        return user.providerProfile;\n    };\n\n    const handlePasswordConfirm = async () => {\n        try {\n            const token = cookies.token;\n            if (!token) {\n                alert('로그인을 다시 해주세요.');\n                handleLogout();\n                return;\n            }\n            const response = await axios.post('http://localhost:8050/api/auth/verifyPasswordCompany', { providerPassword, token });\n            if (response.data.isValid) {\n                setPasswordConfirmed(true);\n                setStep(1);\n            } else {\n                alert('비밀번호가 일치하지 않습니다.');\n            }\n        } catch (error) {\n            alert('잠시후 다시 시도해주세요');\n        }\n    };\n\n    const searchAddress = () => {\n        new window.daum.Postcode({\n            oncomplete: function(data) {\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\n                setAddressFields({\n                    postalCode: data.zonecode,\n                    address: addr,\n                    detailAddress: ''\n                });\n                setCompanyAddress(addr);\n            }\n        }).open();\n    };\n\n\n    const handleLogout = () => {\n        removeCookie('token');\n        setUser(null);\n        navigate(\"/\");\n    };\n\n    const triggerFileInput = () => {\n        fileInputRef.current.click();\n    };\n\n    const handleImageChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            setProfileImage(file);\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setPreviewImage(reader.result);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const validateForm = () => {\n        let errors = {};\n\n        if (!companyAddress) {\n            errors.userInfo = \"1\";\n        }\n\n        if (!companyName) {\n            errors.userPrefer = \"2\";\n        }\n\n        if (!companyTel) {\n            errors.userPhone = \"3\";\n        }\n\n        return Object.keys(errors).length === 0;\n    };\n\n    const uploadProfileImage = async () => {\n        if (!profileImage) return null;\n\n        const formData = new FormData();\n        formData.append('profileImage', profileImage);\n\n        try {\n            const response = await axios.post('http://localhost:8050/api/uploadProfileImage', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            return response.data.imageUrl;\n        } catch (error) {\n            console.error('Error uploading profile image:', error);\n            return null;\n        }\n    };\n\n    const handleSaveChanges = async () => {\n        const imageUrl = await uploadProfileImage(); // 프로필 이미지 업로드 및 URL 가져오기\n\n        const updatedInfo = {\n            companyName: companyName,\n            companyAddress: companyAddress,\n            companyTel: companyTel,\n            providerProfile: imageUrl\n        };\n\n        try {\n            const response = await axios.post('http://localhost:8050/api/auth/updateCompanyInfo', updatedInfo, {\n                headers: {\n                    Authorization: `Bearer ${cookies.token}` // 인증 토큰 사용\n                }\n            });\n\n            if (response.status === 200) {\n                alert('회사 정보가 성공적으로 업데이트되었습니다.');\n                window.location.href = \"/\";\n            } else {\n                alert('회사 정보 업데이트에 실패했습니다.');\n            }\n        } catch (error) {\n            console.error('Error updating company information:', error);\n            alert('업데이트 중 오류가 발생했습니다.');\n        }\n    };\n\n    const getProfilePic = () => {\n        if(userType === \"company\"){\n            if (user.providerProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.providerProfile) {\n                return defaultProfilePic;\n            }\n            return user.providerProfile;\n        }else{\n            if (user.userProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.userProfile) {\n                return defaultProfilePic;\n            }\n            return user.userProfile;\n        }\n    };\n\n\n    const goToNextStep = () => {\n        setStep(2);\n    };\n\n    const goToPreviousStep = () => {\n        setStep(1);\n    };\n\n    const handleBack = () => {\n        navigate(\"/MyInfo\");\n    };\n\n    const handleCompanyNameChange = (e) => {\n        setCompanyName(e.target.value);\n    };\n\n    const handleCompanyAddressChange = (e) => {\n        setCompanyAddress(e.target.value);\n    };\n\n    const handleCompanyTelChange = (e) => {\n        setCompanyTel(e.target.value);\n    };\n\n    return (\n        <StyledContainer>\n            <BoxContainer>\n                <ImageBox>\n                    <LargeImage src={logo} alt=\"logo\" />\n                </ImageBox>\n                {passwordConfirmed === false && (\n                    <InfoBox>\n                        <BackButton onClick={handleBack}>\n                            <FontAwesomeIcon icon={faArrowLeft} />\n                        </BackButton>\n                        <EditInfoTitle>정보 수정</EditInfoTitle>\n                        <ProfileEditSection>\n                            <ImageEditContainer>\n                                <ProfileImagePreview src={getProfilePic()} alt=\"Profile Preview\" />\n                            </ImageEditContainer>\n                            <Name>{user.providerName + \"님\" || 'No Name'}</Name>\n                            <Email>{user.providerEmail || 'No Email'}</Email>\n                            <Divider3>비밀번호 확인</Divider3>\n                            <InfoSection>\n                                <PasswordInput\n                                    type=\"password\"\n                                    value={providerPassword}\n                                    onChange={(e) => setProviderPassword(e.target.value)}\n                                    placeholder=\"비밀번호를 입력하세요\"\n                                />\n                            </InfoSection>\n                            <SaveChangesButton onClick={handlePasswordConfirm}>확인</SaveChangesButton>\n                        </ProfileEditSection>\n                    </InfoBox>\n                )}\n                {passwordConfirmed && step === 1 && (\n                    <InfoBox>\n                        <BackButton onClick={handleBack}>\n                            <FontAwesomeIcon icon={faArrowLeft} />\n                        </BackButton>\n                        <EditInfoTitle>정보 수정</EditInfoTitle>\n                        <ProfileEditSection>\n                            <ImageEditContainer>\n                                <ProfileImagePreview src={previewImage || getProfilePic()} alt=\"Profile Preview\" />\n                                <CameraIconLabel onClick={triggerFileInput}>\n                                    <FontAwesomeIcon icon={faCamera} />\n                                </CameraIconLabel>\n                                <HiddenFileInput\n                                    type=\"file\"\n                                    ref={fileInputRef}\n                                    onChange={handleImageChange}\n                                />\n                            </ImageEditContainer>\n                            <Name>{user.providerName + \"님\" || 'No Name'}</Name>\n                            <Email>{user.providerEmail || 'No Email'}</Email>\n                            <InfoSection>\n                                <Divider2>회사명</Divider2>\n                                <PreferredAreaInput\n                                    type=\"text\"\n                                    value={companyName}\n                                    onChange={handleCompanyNameChange}\n                                    placeholder=\"선호 지역\"\n                                />\n                                <Divider2>회사 주소</Divider2>\n                                <AddressContainer>\n                                    <AddressInput\n                                        type=\"text\"\n                                        value={companyAddress}\n                                        onChange={handleCompanyAddressChange}\n                                        placeholder=\"회사 주소\"\n                                    />\n                                    <SearchButton onClick={searchAddress}>\n                                        검색\n                                    </SearchButton>\n                                </AddressContainer>\n                                <Divider2>회사 전화번호</Divider2>\n                                <PhoneNumberInput\n                                    type=\"text\"\n                                    value={companyTel}\n                                    onChange={handleCompanyTelChange}\n                                    placeholder=\"전화번호\"\n                                />\n                            </InfoSection>\n                        </ProfileEditSection>\n                        <SaveChangesButton onClick={handleSaveChanges}>저장</SaveChangesButton>\n                    </InfoBox>\n                )}\n            </BoxContainer>\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst BoxContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  max-width: 1000px; \n  margin: 0 auto;\n`;\n\nconst InfoBox = styled.div`\n  width: 90%;\n  max-width: 500px;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\n  position: relative;\n`;\n\nconst EditInfoTitle = styled.h2`\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 15px; \n  color: #381E1F; \n  font-size: 20px;\n  font-weight: bold;\n`;\n\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em;\n  color: #000;\n`;\n\nconst LogoImg = styled.img`\n  height: 20vh;\n  width: auto;\n  margin-bottom: 5px;\n`;\n\nconst ImageBox = styled.div`\n  width: 100%;\n  max-width: 600px;\n  height: 90%;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LargeImage = styled.img`\n  max-width: 100%;\n  max-height: 90%;\n  border-radius: 10px;\n  object-fit: cover; \n`;\n\nconst Name = styled.h4`\n  margin: 0;\n  margin-top: 20px;\n  color: #381E1F;\n`;\n\nconst Email = styled.p`\n  color: gray;\n`;\n\nconst InfoSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Divider = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    margin-left: 10px;\n    border-bottom: 1px solid #ccc;\n  }\n\n  &::before {\n    margin-right: 10px;\n  }\n\n`;\n\nconst Divider2 = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-bottom: 10px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    margin-left: 10px;\n    border-bottom: 1px solid #ccc;\n  }\n\n`;\n\nconst Divider3 = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-top: 50px;\n  margin-bottom: 10px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    margin-left: 10px;\n    border-bottom: 1px solid #ccc;\n  }\n\n`;\n\nconst PasswordInput = styled.input`\n  display: block;\n  width: 80%;\n  text-align: center;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid #ccc;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nconst ProfileEditSection = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nconst ProfileImagePreview = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n`;\n\nconst SaveChangesButton = styled.button`\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: #F7E600;\n  color: #381E1F;\n  border: none;\n  cursor: pointer;\n  font-size: 15px;\n  margin-top: 20px;\n  &:hover {\n    background-color: #e6d700;\n  }\n`;\n\nconst ImageEditContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\n\nconst CameraIconLabel = styled.label`\n  position: absolute;\n  bottom: 0;\n  transform: translate(50%, 50%);\n  cursor: pointer;\n  background-color: white; \n  border-radius: 50%;\n  padding: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); \n`;\n\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n\nconst AddressContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n  width: 80%; \n`;\n\nconst SearchButton = styled.button`\n  margin-left: 10px; \n  padding: 8px 12px; \n  border: 1px solid #ccc; \n  background-color: white;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f7f7f7; \n  }\n`;\n\nconst AddressInput = styled.input`\n  display: block;\n  width: 60%;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nconst PreferredAreaInput = styled.input`\n  display: block;\n  width: 60%;\n  margin-bottom: 10px;\n  text-align: center;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nconst PhoneNumberInput = styled.input`\n  display: block;\n  width: 60%;\n  text-align: center;\n  &:focus {\n    outline: none;\n    border-color: #F7E600;\n  }\n`;\n\nexport default CompanyInfoChangePage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingReviewPage.js",["304","305"],[],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useUserStore } from '../stores'; // useUserStore 훅의 실제 경로\n\nconst WritingReviewPage = () => {\n    const navigate = useNavigate();\n    const { user } = useUserStore(); // 현재 로그인한 사용자 정보 가져오기\n    const [reviewTitle, setReviewTitle] = useState('');\n    const [reviewContent, setReviewContent] = useState('');\n    const writer = user ? user.userName : \"익명\"; // 현재 로그인한 사용자의 이름이나 \"익명\" 사용\n    const [showPopup, setShowPopup] = useState(false); // 팝업 상태 관리\n\n    const handleInputTitle = e => {\n        setReviewTitle(e.target.value);\n    };\n\n    const handleInputContent = e => {\n        setReviewContent(e.target.value);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const reviewData = {\n\n            jobId: 1, // 임시로 설정된 값, 실제 애플리케이션에서는 사용자가 선택하거나 다른 방법으로 결정해야 합니다.\n            userId: user ? user.userId : 999, // 만약 사용자 정보가 없으면 임시 ID를 사용\n            reviewTitle: reviewTitle, // 사용자가 입력한 리뷰 제목\n            reviewContent: reviewContent, // 사용자가 입력한 리뷰 내용\n            reviewDate: new Date(), // 현재 날짜와 시간\n            reviewRecommend: 0, // 초기 추천 수, 0으로 설정\n            writer: writer // 현재 로그인한 사용자의 이름이나 \"익명\"\n        };\n\n        try {\n            const response = await axios.post('http://localhost:8050/api/reviews', reviewData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (response.status === 200) {\n                setShowPopup(true); // 팝업 표시\n                setTimeout(() => setShowPopup(false), 3000); // 3초 후에 팝업 숨김\n                navigate(\"/review\");\n            } else {\n                console.error(`HTTP error! Status: ${response.status}`);\n            }\n        } catch (error) {\n            console.error('Error posting review:', error);\n        }\n    };\n\n    return (\n        <Container>\n            <TitleContainer>\n                리뷰 작성\n            </TitleContainer>\n            <Form onSubmit={handleSubmit}>\n                <MiddleContainer>\n                    <Title>\n                        <Label>리뷰 제목:</Label>\n                        <Input type=\"text\" value={reviewTitle} onChange={handleInputTitle} />\n                    </Title>\n                    <WriterContainer>\n                        <Label>작성자:</Label>\n                        <span>{writer}</span>\n                    </WriterContainer>\n                    <ContentContainer>\n                        <Label>리뷰 내용:</Label>\n                        <Textarea value={reviewContent} onChange={handleInputContent} />\n                    </ContentContainer>\n                    <ButtonContainer>\n                        <SubmitButton type=\"submit\">리뷰 작성</SubmitButton>\n                    </ButtonContainer>\n                </MiddleContainer>\n            </Form>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  height: 100vh;\n`;\n\nconst TitleContainer = styled.div`\n  font-size: 30px;\n  font-weight: bold;\n  margin-bottom: 20px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst MiddleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.div`\n  margin-bottom: 15px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nconst WriterContainer = styled.div`\n  margin-bottom: 15px;\n`;\n\nconst ContentContainer = styled.div`\n  margin-bottom: 15px;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`\nconst Popup = styled.div`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n`;\n\n\nexport default WritingReviewPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewContentPage.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AboutPolicyPage.js",["306"],[],"import React from \"react\";\nimport styled from \"styled-components\";\nimport aboutPolicy from \"../imgs/aboutPolicy.jpg\";\n\nconst AboutPolicyPage = () => {\n    return (\n        <Container>\n            <CenterContainer>\n                <TopContainer>\n                    <TopImgContainer>\n                        <img src={aboutPolicy} alt=\"About Image\" />\n                        <OverlayTextContainer>\n                            <OverlayTextTop>\n                                <h2>우리의 생각</h2>\n                                <h2>Policy</h2>\n                            </OverlayTextTop>\n                        </OverlayTextContainer>\n                    </TopImgContainer>\n                </TopContainer>\n                <BottomContainer>\n                    <BottomContentContainer>\n                        <br/>\n                        <h2>매번<br/></h2>\n                        <h2>마음과 조건이 듬뿍 담긴 서비스입니다.<br/><br/></h2>\n                        <h4>한국에는 아직 놀라울 정도로 매력 넘치는 지역들로 가득합니다.</h4>\n                        <h4>더 많은 사람들이 한국 각지에 부담없이 나가서 지역에 들어가,</h4>\n                        <h4>한국의 사랑스럽고 풍부한 매력에 빠지게 만들고 싶습니다.<br/><br/></h4>\n                        <h4>\"한소연\"은 그런 생각에서 태어난 서비스입니다.<br/><br/></h4>\n                        <h4>아무것도 없어 보이고, 모르는 사람들을 만나서 재밌습니다.</h4>\n                        <h4>매번 가서 준 분들이 도움을 통해 지역에 빠져들고,</h4>\n                        <h4>뭔가 멋진 발견이나 경험을 많이하고, 눈치채면 자신에게 있어서와 특별한 지역이 되어 돌아오는,</h4>\n                        <h4>그런 새로운 여행의 형태를 제안할 수 있으면 하는 마음입니다.</h4>\n                        <TextContainer>\n                            <h3>대표 한소연 일동</h3>\n                        </TextContainer>\n                    </BottomContentContainer>\n                </BottomContainer>\n            </CenterContainer>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n`\nconst CenterContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 100vh;\n  margin-top: 8rem;\n`\nconst TopContainer = styled.div`\n  display: flex;\n  flex: 4;\n  justify-content: center;\n`\nconst TopImgContainer = styled.div`\n  display: flex;\n  position: relative;\n  width: 90%;\n  min-height: 80%;\n  justify-content: center;\n  align-items: center;\n  img {\n    width: 75%; /* 이미지 크기를 부모 컨테이너에 맞게 설정 */\n    height: auto; /* 가로 비율에 맞추어 세로 비율을 자동으로 조정 */\n    max-height: 100%;\n    max-width: 100%;\n    min-height: 100%;\n    border-radius: 10px;\n  }\n`\nconst OverlayTextContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  width: 100%;\n`;\n\nconst OverlayTextTop = styled.div`\n  h2 {\n    font-size: 32px;\n    font-weight: 700;\n    color: white;\n  }\n`;\nconst BottomContainer = styled.div`\n    display: flex;\n  flex: 6;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\nconst BottomContentContainer = styled.div`\n  background-color: #FDF9EA;\n  margin-bottom: 3rem;\n  width: 90%;\n  height: auto;\n  margin-top: 1rem;\n  border-radius: 3rem;\n  h2 {\n    color: orange;\n    font-weight: 700;\n  }\n  h4 {\n    font-size: 20px;\n  }\n`\n\nconst TextContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  \n  h3 {\n    font-size: 36px;\n    font-weight: 700;\n    margin-right: 7rem;\n  }\n`\nexport default AboutPolicyPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingRecruitPage.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecruitViewPage.js",["307","308","309","310"],[],"import React, { useEffect, useState } from \"react\";\nimport {useNavigate, useParams} from 'react-router-dom'; // useNavigate 훅 추가\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nconst RecruitViewPage = () => {\n    const { id} = useParams();\n    console.log('idididid',id)\n\n    //Todo id로 SELECT WHERE 조건 주기\n\n\n    return (\n        <Container>\n            <Row className=\"justify-content-start mt-3\">\n                <Col md={2}>\n                    <h2 style={{ fontWeight: 'bold' }}>모집 일정</h2>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-start\">\n                <Col md={2}>\n                    <p style={{ fontSize: 'small' }}>앞으로의 일정</p>\n                </Col>\n            </Row>\n\n            <Row className=\"justify-content-start\">\n                <Col>\n                    가운데\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default RecruitViewPage;",{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","severity":1,"message":"324","line":24,"column":8,"nodeType":"325","messageId":"326","endLine":24,"endColumn":18},{"ruleId":"323","severity":1,"message":"327","line":28,"column":12,"nodeType":"325","messageId":"326","endLine":28,"endColumn":19},{"ruleId":"323","severity":1,"message":"328","line":29,"column":12,"nodeType":"325","messageId":"326","endLine":29,"endColumn":16},{"ruleId":"323","severity":1,"message":"329","line":31,"column":12,"nodeType":"325","messageId":"326","endLine":31,"endColumn":28},{"ruleId":"323","severity":1,"message":"330","line":32,"column":12,"nodeType":"325","messageId":"326","endLine":32,"endColumn":21},{"ruleId":"323","severity":1,"message":"331","line":3,"column":8,"nodeType":"325","messageId":"326","endLine":3,"endColumn":16},{"ruleId":"323","severity":1,"message":"332","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":12},{"ruleId":"323","severity":1,"message":"333","line":27,"column":19,"nodeType":"325","messageId":"326","endLine":27,"endColumn":23},{"ruleId":"323","severity":1,"message":"334","line":1,"column":27,"nodeType":"325","messageId":"326","endLine":1,"endColumn":36},{"ruleId":"335","severity":1,"message":"336","line":16,"column":8,"nodeType":"337","endLine":16,"endColumn":16,"suggestions":"338"},{"ruleId":"323","severity":1,"message":"339","line":7,"column":22,"nodeType":"325","messageId":"326","endLine":7,"endColumn":27},{"ruleId":"323","severity":1,"message":"340","line":7,"column":29,"nodeType":"325","messageId":"326","endLine":7,"endColumn":39},{"ruleId":"323","severity":1,"message":"341","line":11,"column":8,"nodeType":"325","messageId":"326","endLine":11,"endColumn":19},{"ruleId":"323","severity":1,"message":"342","line":12,"column":8,"nodeType":"325","messageId":"326","endLine":12,"endColumn":12},{"ruleId":"323","severity":1,"message":"343","line":13,"column":9,"nodeType":"325","messageId":"326","endLine":13,"endColumn":13},{"ruleId":"323","severity":1,"message":"344","line":13,"column":15,"nodeType":"325","messageId":"326","endLine":13,"endColumn":25},{"ruleId":"323","severity":1,"message":"329","line":16,"column":12,"nodeType":"325","messageId":"326","endLine":16,"endColumn":28},{"ruleId":"323","severity":1,"message":"345","line":4,"column":9,"nodeType":"325","messageId":"326","endLine":4,"endColumn":27},{"ruleId":"323","severity":1,"message":"346","line":28,"column":11,"nodeType":"325","messageId":"326","endLine":28,"endColumn":30},{"ruleId":"335","severity":1,"message":"347","line":79,"column":8,"nodeType":"337","endLine":79,"endColumn":29,"suggestions":"348"},{"ruleId":"323","severity":1,"message":"349","line":82,"column":11,"nodeType":"325","messageId":"326","endLine":82,"endColumn":27},{"ruleId":"335","severity":1,"message":"347","line":103,"column":8,"nodeType":"337","endLine":103,"endColumn":17,"suggestions":"350"},{"ruleId":"323","severity":1,"message":"351","line":258,"column":7,"nodeType":"325","messageId":"326","endLine":258,"endColumn":19},{"ruleId":"323","severity":1,"message":"352","line":2,"column":17,"nodeType":"325","messageId":"326","endLine":2,"endColumn":20},{"ruleId":"323","severity":1,"message":"353","line":2,"column":22,"nodeType":"325","messageId":"326","endLine":2,"endColumn":31},{"ruleId":"323","severity":1,"message":"354","line":14,"column":21,"nodeType":"325","messageId":"326","endLine":14,"endColumn":30},{"ruleId":"323","severity":1,"message":"355","line":20,"column":18,"nodeType":"325","messageId":"326","endLine":20,"endColumn":25},{"ruleId":"335","severity":1,"message":"356","line":59,"column":8,"nodeType":"337","endLine":59,"endColumn":10,"suggestions":"357"},{"ruleId":"358","severity":1,"message":"359","line":121,"column":21,"nodeType":"360","messageId":"361","endLine":121,"endColumn":30},{"ruleId":"323","severity":1,"message":"362","line":191,"column":7,"nodeType":"325","messageId":"326","endLine":191,"endColumn":19},{"ruleId":"323","severity":1,"message":"363","line":200,"column":7,"nodeType":"325","messageId":"326","endLine":200,"endColumn":14},{"ruleId":"364","severity":1,"message":"365","line":250,"column":5,"nodeType":"360","endLine":258,"endColumn":6},{"ruleId":"323","severity":1,"message":"366","line":276,"column":7,"nodeType":"325","messageId":"326","endLine":276,"endColumn":22},{"ruleId":"323","severity":1,"message":"367","line":1,"column":16,"nodeType":"325","messageId":"326","endLine":1,"endColumn":24},{"ruleId":"323","severity":1,"message":"368","line":1,"column":26,"nodeType":"325","messageId":"326","endLine":1,"endColumn":37},{"ruleId":"323","severity":1,"message":"334","line":1,"column":39,"nodeType":"325","messageId":"326","endLine":1,"endColumn":48},{"ruleId":"323","severity":1,"message":"369","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":14},{"ruleId":"323","severity":1,"message":"342","line":18,"column":8,"nodeType":"325","messageId":"326","endLine":18,"endColumn":12},{"ruleId":"370","severity":1,"message":"371","line":69,"column":46,"nodeType":"360","endLine":69,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":70,"column":46,"nodeType":"360","endLine":70,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":71,"column":46,"nodeType":"360","endLine":71,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":72,"column":46,"nodeType":"360","endLine":72,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":94,"column":46,"nodeType":"360","endLine":94,"endColumn":94},{"ruleId":"370","severity":1,"message":"371","line":95,"column":46,"nodeType":"360","endLine":95,"endColumn":94},{"ruleId":"370","severity":1,"message":"371","line":122,"column":46,"nodeType":"360","endLine":122,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":123,"column":46,"nodeType":"360","endLine":123,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":124,"column":46,"nodeType":"360","endLine":124,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":125,"column":46,"nodeType":"360","endLine":125,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":150,"column":46,"nodeType":"360","endLine":150,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":151,"column":46,"nodeType":"360","endLine":151,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":152,"column":46,"nodeType":"360","endLine":152,"endColumn":88},{"ruleId":"370","severity":1,"message":"371","line":153,"column":46,"nodeType":"360","endLine":153,"endColumn":88},{"ruleId":"323","severity":1,"message":"334","line":1,"column":27,"nodeType":"325","messageId":"326","endLine":1,"endColumn":36},{"ruleId":"323","severity":1,"message":"331","line":3,"column":8,"nodeType":"325","messageId":"326","endLine":3,"endColumn":16},{"ruleId":"323","severity":1,"message":"372","line":3,"column":8,"nodeType":"325","messageId":"326","endLine":3,"endColumn":14},{"ruleId":"323","severity":1,"message":"373","line":18,"column":21,"nodeType":"325","messageId":"326","endLine":18,"endColumn":31},{"ruleId":"323","severity":1,"message":"354","line":36,"column":21,"nodeType":"325","messageId":"326","endLine":36,"endColumn":30},{"ruleId":"335","severity":1,"message":"356","line":240,"column":8,"nodeType":"337","endLine":240,"endColumn":10,"suggestions":"374"},{"ruleId":"335","severity":1,"message":"375","line":251,"column":8,"nodeType":"337","endLine":251,"endColumn":16,"suggestions":"376"},{"ruleId":"323","severity":1,"message":"377","line":641,"column":7,"nodeType":"325","messageId":"326","endLine":641,"endColumn":15},{"ruleId":"323","severity":1,"message":"378","line":778,"column":7,"nodeType":"325","messageId":"326","endLine":778,"endColumn":26},{"ruleId":"323","severity":1,"message":"379","line":785,"column":7,"nodeType":"325","messageId":"326","endLine":785,"endColumn":17},{"ruleId":"323","severity":1,"message":"380","line":792,"column":7,"nodeType":"325","messageId":"326","endLine":792,"endColumn":24},{"ruleId":"323","severity":1,"message":"381","line":799,"column":7,"nodeType":"325","messageId":"326","endLine":799,"endColumn":15},{"ruleId":"323","severity":1,"message":"382","line":804,"column":7,"nodeType":"325","messageId":"326","endLine":804,"endColumn":23},{"ruleId":"323","severity":1,"message":"383","line":810,"column":7,"nodeType":"325","messageId":"326","endLine":810,"endColumn":28},{"ruleId":"323","severity":1,"message":"384","line":819,"column":7,"nodeType":"325","messageId":"326","endLine":819,"endColumn":33},{"ruleId":"323","severity":1,"message":"385","line":824,"column":7,"nodeType":"325","messageId":"326","endLine":824,"endColumn":27},{"ruleId":"323","severity":1,"message":"386","line":830,"column":7,"nodeType":"325","messageId":"326","endLine":830,"endColumn":31},{"ruleId":"323","severity":1,"message":"387","line":841,"column":7,"nodeType":"325","messageId":"326","endLine":841,"endColumn":19},{"ruleId":"323","severity":1,"message":"388","line":860,"column":7,"nodeType":"325","messageId":"326","endLine":860,"endColumn":20},{"ruleId":"323","severity":1,"message":"389","line":890,"column":7,"nodeType":"325","messageId":"326","endLine":890,"endColumn":20},{"ruleId":"323","severity":1,"message":"390","line":957,"column":7,"nodeType":"325","messageId":"326","endLine":957,"endColumn":18},{"ruleId":"323","severity":1,"message":"391","line":8,"column":9,"nodeType":"325","messageId":"326","endLine":8,"endColumn":14},{"ruleId":"323","severity":1,"message":"392","line":10,"column":8,"nodeType":"325","messageId":"326","endLine":10,"endColumn":10},{"ruleId":"323","severity":1,"message":"354","line":17,"column":21,"nodeType":"325","messageId":"326","endLine":17,"endColumn":30},{"ruleId":"323","severity":1,"message":"393","line":30,"column":12,"nodeType":"325","messageId":"326","endLine":30,"endColumn":25},{"ruleId":"335","severity":1,"message":"394","line":69,"column":8,"nodeType":"337","endLine":69,"endColumn":10,"suggestions":"395"},{"ruleId":"323","severity":1,"message":"396","line":127,"column":11,"nodeType":"325","messageId":"326","endLine":127,"endColumn":23},{"ruleId":"323","severity":1,"message":"392","line":10,"column":8,"nodeType":"325","messageId":"326","endLine":10,"endColumn":10},{"ruleId":"323","severity":1,"message":"354","line":14,"column":21,"nodeType":"325","messageId":"326","endLine":14,"endColumn":30},{"ruleId":"335","severity":1,"message":"356","line":54,"column":8,"nodeType":"337","endLine":54,"endColumn":10,"suggestions":"397"},{"ruleId":"323","severity":1,"message":"398","line":210,"column":7,"nodeType":"325","messageId":"326","endLine":210,"endColumn":16},{"ruleId":"323","severity":1,"message":"399","line":216,"column":7,"nodeType":"325","messageId":"326","endLine":216,"endColumn":12},{"ruleId":"323","severity":1,"message":"400","line":220,"column":7,"nodeType":"325","messageId":"326","endLine":220,"endColumn":12},{"ruleId":"323","severity":1,"message":"344","line":3,"column":24,"nodeType":"325","messageId":"326","endLine":3,"endColumn":34},{"ruleId":"323","severity":1,"message":"401","line":342,"column":7,"nodeType":"325","messageId":"326","endLine":342,"endColumn":12},{"ruleId":"323","severity":1,"message":"402","line":4,"column":8,"nodeType":"325","messageId":"326","endLine":4,"endColumn":24},{"ruleId":"323","severity":1,"message":"344","line":4,"column":24,"nodeType":"325","messageId":"326","endLine":4,"endColumn":34},{"ruleId":"323","severity":1,"message":"401","line":393,"column":7,"nodeType":"325","messageId":"326","endLine":393,"endColumn":12},{"ruleId":"323","severity":1,"message":"403","line":8,"column":8,"nodeType":"325","messageId":"326","endLine":8,"endColumn":14},{"ruleId":"323","severity":1,"message":"404","line":16,"column":8,"nodeType":"325","messageId":"326","endLine":16,"endColumn":14},{"ruleId":"405","severity":1,"message":"406","line":36,"column":25,"nodeType":"360","endLine":36,"endColumn":66},{"ruleId":"405","severity":1,"message":"406","line":63,"column":25,"nodeType":"360","endLine":63,"endColumn":64},{"ruleId":"405","severity":1,"message":"406","line":68,"column":25,"nodeType":"360","endLine":68,"endColumn":64},{"ruleId":"405","severity":1,"message":"406","line":73,"column":25,"nodeType":"360","endLine":73,"endColumn":64},{"ruleId":"405","severity":1,"message":"406","line":83,"column":25,"nodeType":"360","endLine":83,"endColumn":64},{"ruleId":"405","severity":1,"message":"406","line":89,"column":25,"nodeType":"360","endLine":89,"endColumn":64},{"ruleId":"405","severity":1,"message":"406","line":94,"column":25,"nodeType":"360","endLine":94,"endColumn":64},{"ruleId":"405","severity":1,"message":"406","line":117,"column":29,"nodeType":"360","endLine":117,"endColumn":137},{"ruleId":"405","severity":1,"message":"406","line":122,"column":29,"nodeType":"360","endLine":122,"endColumn":137},{"ruleId":"405","severity":1,"message":"406","line":127,"column":29,"nodeType":"360","endLine":127,"endColumn":137},{"ruleId":"405","severity":1,"message":"406","line":134,"column":29,"nodeType":"360","endLine":134,"endColumn":137},{"ruleId":"323","severity":1,"message":"391","line":8,"column":9,"nodeType":"325","messageId":"326","endLine":8,"endColumn":14},{"ruleId":"323","severity":1,"message":"392","line":10,"column":8,"nodeType":"325","messageId":"326","endLine":10,"endColumn":10},{"ruleId":"323","severity":1,"message":"407","line":11,"column":8,"nodeType":"325","messageId":"326","endLine":11,"endColumn":17},{"ruleId":"323","severity":1,"message":"354","line":17,"column":21,"nodeType":"325","messageId":"326","endLine":17,"endColumn":30},{"ruleId":"323","severity":1,"message":"393","line":30,"column":12,"nodeType":"325","messageId":"326","endLine":30,"endColumn":25},{"ruleId":"335","severity":1,"message":"394","line":67,"column":8,"nodeType":"337","endLine":67,"endColumn":10,"suggestions":"408"},{"ruleId":"323","severity":1,"message":"409","line":69,"column":11,"nodeType":"325","messageId":"326","endLine":69,"endColumn":27},{"ruleId":"323","severity":1,"message":"396","line":133,"column":11,"nodeType":"325","messageId":"326","endLine":133,"endColumn":23},{"ruleId":"323","severity":1,"message":"410","line":214,"column":11,"nodeType":"325","messageId":"326","endLine":214,"endColumn":23},{"ruleId":"323","severity":1,"message":"411","line":218,"column":11,"nodeType":"325","messageId":"326","endLine":218,"endColumn":27},{"ruleId":"323","severity":1,"message":"363","line":373,"column":7,"nodeType":"325","messageId":"326","endLine":373,"endColumn":14},{"ruleId":"323","severity":1,"message":"412","line":415,"column":7,"nodeType":"325","messageId":"326","endLine":415,"endColumn":14},{"ruleId":"323","severity":1,"message":"413","line":13,"column":12,"nodeType":"325","messageId":"326","endLine":13,"endColumn":21},{"ruleId":"323","severity":1,"message":"414","line":157,"column":7,"nodeType":"325","messageId":"326","endLine":157,"endColumn":12},{"ruleId":"405","severity":1,"message":"406","line":11,"column":25,"nodeType":"360","endLine":11,"endColumn":68},{"ruleId":"323","severity":1,"message":"334","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":26},{"ruleId":"323","severity":1,"message":"367","line":1,"column":28,"nodeType":"325","messageId":"326","endLine":1,"endColumn":36},{"ruleId":"323","severity":1,"message":"415","line":2,"column":9,"nodeType":"325","messageId":"326","endLine":2,"endColumn":20},{"ruleId":"323","severity":1,"message":"416","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":12},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["417"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'InputSkill' is defined but never used.","Identifier","unusedVar","'cookies' is assigned a value but never used.","'user' is assigned a value but never used.","'isKakaoSdkLoaded' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'navigate' is defined but never used.","'data' is defined but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData' and 'keyword'. Either include them or remove the dependency array.","ArrayExpression",["418"],"'faEye' is defined but never used.","'faEyeSlash' is defined but never used.","'GoogleLogin' is defined but never used.","'logo' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'responsivePropType' is defined but never used.","'handleContentChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAnnouncement'. Either include it or remove the dependency array.",["419"],"'handleUpdateFlag' is assigned a value but never used.",["420"],"'ModifyButton' is assigned a value but never used.","'Nav' is defined but never used.","'Container' is defined but never used.","'setCookie' is assigned a value but never used.","'setSize' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cookies.token', 'handleLogout', 'setUser', and 'userType'. Either include them or remove the dependency array.",["421"],"react/jsx-pascal-case","Imported JSX component Nav_Str must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'NavContainer' is assigned a value but never used.","'LogoImg' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'MypageConatiner' is assigned a value but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'winter' is defined but never used.","'setKeyword' is assigned a value but never used.",["422"],"React Hook useEffect has missing dependencies: 'fetchContentData', 'fetchLocalData', 'keyword', 'pageContentNo', and 'searchContentKeyword'. Either include them or remove the dependency array.",["423"],"'TopImage' is assigned a value but never used.","'SmallTitleContainer' is assigned a value but never used.","'SmallTitle' is assigned a value but never used.","'SmallTitleContent' is assigned a value but never used.","'SmallTag' is assigned a value but never used.","'ContentContainer' is assigned a value but never used.","'ContentTitleContainer' is assigned a value but never used.","'ContentSmallTitleContainer' is assigned a value but never used.","'ContentMainContainer' is assigned a value but never used.","'ContentMainTextContainer' is assigned a value but never used.","'ContentTitle' is assigned a value but never used.","'ContentMemory' is assigned a value but never used.","'TravelContent' is assigned a value but never used.","'SearchInput' is assigned a value but never used.","'Badge' is defined but never used.","'iu' is defined but never used.","'addressFields' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cookies.token', 'handleLogout', and 'setUser'. Either include them or remove the dependency array.",["424"],"'validateForm' is assigned a value but never used.",["425"],"'DetailRow' is assigned a value but never used.","'Label' is assigned a value but never used.","'Value' is assigned a value but never used.","'Title' is assigned a value but never used.","'MemberSignUpPage' is defined but never used.","'about4' is defined but never used.","'Footer' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'logoSmall' is defined but never used.",["426"],"'getProfilePicSrc' is assigned a value but never used.","'goToNextStep' is assigned a value but never used.","'goToPreviousStep' is assigned a value but never used.","'Divider' is assigned a value but never used.","'showPopup' is assigned a value but never used.","'Popup' is assigned a value but never used.","'useNavigate' is defined but never used.","'Card' is defined but never used.","no-object-constructor",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"433","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"433","fix":"440"},{"desc":"438","fix":"441"},"Update the dependencies array to be: [fetchData, keyword, pageNo]",{"range":"442","text":"443"},"Update the dependencies array to be: [anno_id, fetchAnnouncement, updateFlag]",{"range":"444","text":"445"},"Update the dependencies array to be: [anno_id, fetchAnnouncement]",{"range":"446","text":"447"},"Update the dependencies array to be: [cookies.token, handleLogout, setUser, userType]",{"range":"448","text":"449"},{"range":"450","text":"449"},"Update the dependencies array to be: [fetchContentData, fetchLocalData, keyword, pageContentNo, pageNo, searchContentKeyword]",{"range":"451","text":"452"},"Update the dependencies array to be: [cookies.token, handleLogout, setUser]",{"range":"453","text":"454"},{"range":"455","text":"449"},{"range":"456","text":"454"},[570,578],"[fetchData, keyword, pageNo]",[2439,2460],"[anno_id, fetchAnnouncement, updateFlag]",[3228,3237],"[anno_id, fetchAnnouncement]",[2273,2275],"[cookies.token, handleLogout, setUser, userType]",[14674,14676],[14931,14939],"[fetchContentData, fetchLocalData, keyword, pageContentNo, pageNo, searchContentKeyword]",[2627,2629],"[cookies.token, handleLogout, setUser]",[2088,2090],[2520,2522]]