[{"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/index.js":"1","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/App.js":"2","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/reportWebVitals.js":"3","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/SigninPage.js":"4","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AnnouncementListPage.js":"5","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ThemaPage.js":"6","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecommendPage.js":"7","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/SignupPage.js":"8","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AnnouncementContentPage.js":"9","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/Navigate.js":"10","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/InputSkill.js":"11","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/MainPage.js":"12","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RegionPage.js":"13","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingNewsPage.js":"14","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewPage.js":"15","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/NewPage.js":"16","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/InfoChangePage.js":"17","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/MyInfoPage.js":"18","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/CompanySignupPage.js":"19","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/GoogleLoginPage.js":"20","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/MemberSignupPage.js":"21","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/Footer.js":"22","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/stores/index.js":"23","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/stores/user.store.js":"24","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AboutPage.js":"25","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecruitPage.js":"26","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/CompanyInfoChangePage.js":"27","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingReviewPage.js":"28","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewContentPage.js":"29","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AboutPolicyPage.js":"30"},{"size":535,"mtime":1699365264611,"results":"31","hashOfConfig":"32"},{"size":3245,"mtime":1700657288937,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1699365264611,"results":"34","hashOfConfig":"32"},{"size":14435,"mtime":1700463867044,"results":"35","hashOfConfig":"32"},{"size":7434,"mtime":1700484629788,"results":"36","hashOfConfig":"32"},{"size":17361,"mtime":1700308894573,"results":"37","hashOfConfig":"32"},{"size":17335,"mtime":1700494199302,"results":"38","hashOfConfig":"32"},{"size":6443,"mtime":1700463867045,"results":"39","hashOfConfig":"32"},{"size":7536,"mtime":1700463867043,"results":"40","hashOfConfig":"32"},{"size":10199,"mtime":1700548832628,"results":"41","hashOfConfig":"32"},{"size":1558,"mtime":1700056735572,"results":"42","hashOfConfig":"32"},{"size":12806,"mtime":1700492388344,"results":"43","hashOfConfig":"32"},{"size":17353,"mtime":1700456521661,"results":"44","hashOfConfig":"32"},{"size":4001,"mtime":1700476501558,"results":"45","hashOfConfig":"32"},{"size":3750,"mtime":1700654872984,"results":"46","hashOfConfig":"32"},{"size":17637,"mtime":1700307327616,"results":"47","hashOfConfig":"32"},{"size":18134,"mtime":1700548775455,"results":"48","hashOfConfig":"32"},{"size":7983,"mtime":1700548800504,"results":"49","hashOfConfig":"32"},{"size":13509,"mtime":1700548119621,"results":"50","hashOfConfig":"32"},{"size":854,"mtime":1700463867040,"results":"51","hashOfConfig":"32"},{"size":15566,"mtime":1700463867040,"results":"52","hashOfConfig":"32"},{"size":996,"mtime":1700463867040,"results":"53","hashOfConfig":"32"},{"size":64,"mtime":1700463867066,"results":"54","hashOfConfig":"32"},{"size":417,"mtime":1700463867066,"results":"55","hashOfConfig":"32"},{"size":15977,"mtime":1700664368375,"results":"56","hashOfConfig":"32"},{"size":127,"mtime":1700487313496,"results":"57","hashOfConfig":"32"},{"size":16510,"mtime":1700548764970,"results":"58","hashOfConfig":"32"},{"size":4819,"mtime":1700636861909,"results":"59","hashOfConfig":"32"},{"size":1653,"mtime":1700654806609,"results":"60","hashOfConfig":"32"},{"size":3850,"mtime":1700663438715,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1z06aj9",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/index.js",[],[],["162","163","164","165","166","167"],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/App.js",["168"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/reportWebVitals.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/SigninPage.js",["169","170","171","172"],[],"import React, {useEffect, useState} from 'react';\nimport {Form, Button, InputGroup} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styled from 'styled-components';\nimport {useNavigate} from 'react-router-dom';\nimport logo from \"../imgs/logo2.png\";\nimport kakao from \"../imgs/kakao.png\"\nimport google from \"../imgs/google.png\"\nimport company from \"../imgs/company.png\"\nimport member from \"../imgs/member.png\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport {useCookies} from \"react-cookie\";\nimport {useUserStore} from \"../stores\";\n\nconst SigninPage = (props) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [showMemberForm, setShowMemberForm] = useState(false);\n    const [showCompanyForm, setShowCompanyForm] = useState(false);\n    const navigate = useNavigate();\n\n    const [userId, setUserId] = useState('');\n    const [userPassword, setUserPassword] = useState('');\n    const [providerId, setProviderId] = useState('');\n    const [providerPassword, setProviderPassword] = useState('');\n\n    const [cookies, setCookies] = useCookies();\n    const {user, setUser} = useUserStore();\n\n    const [isKakaoSdkLoaded, setIsKakaoSdkLoaded] = useState(false);\n    const [userEmail, setUserEmail] = useState('');\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = \"https://developers.kakao.com/sdk/js/kakao.min.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        script.onload = () => {\n            if (window.Kakao && !window.Kakao.isInitialized()) {\n                window.Kakao.init('af3894518c9ad04274d8c7c098885abd');\n            }\n            setIsKakaoSdkLoaded(true); // SDK 로드 완료 후 상태 업데이트\n        };\n\n        return () => {\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, []);\n\n    const handleKakaoLoginImageClick = () => {\n\n        if (window.Kakao && window.Kakao.isInitialized()) { // Kakao SDK 초기화 확인\n            window.Kakao.Auth.login({\n                success: function(authObj) {\n                    window.Kakao.API.request({\n                        url: '/v2/user/me',\n                        success: function(response) {\n                            const userEmail = response.kakao_account?.email;\n                            if (userEmail) {\n                                setUserEmail(\"(kakao)\" + userEmail);\n                                handleKakaoLogin(\"(kakao)\" + userEmail);\n                            } else {\n                                console.log(\"이메일 정보를 가져올 수 없습니다.\");\n                            }\n                        },\n                        fail: function(error) {\n                            console.log(error);\n                        },\n                    });\n                },\n                fail: function(err) {\n                    console.log(err);\n                },\n            });\n        } else {\n            console.error(\"Kakao SDK가 아직 로드되지 않았거나 초기화되지 않았습니다.\");\n        }\n    };\n\n    const handleLogin = () => {\n        if(userId.length === 0 || userPassword.length === 0){\n            alert('아이디와 비밀번호를 입력하세요');\n            return;\n        }\n\n        const data = {\n            userId,\n            userPassword\n        }\n        axios.post(\"http://localhost:8050/api/auth/signIn\", data).then((response) => {\n            const responseData = response.data;\n            console.log(responseData);\n            if(!responseData.result){\n                alert('아이디 또는 비밀번호가 일치하지 않습니다. ');\n                return;\n            }\n            const { token, exprTime, user, userType } = responseData.data;\n            const expires = new Date();\n            expires.setMilliseconds(expires.getMilliseconds() + exprTime);\n\n            setCookies('token', token, {expires});\n            setCookies('userType', userType, {expires});\n            setUser(user);\n            navigate(\"/\");\n        }).catch((error) => {\n            alert('로그인에 실패했습니다. ')\n        })\n    };\n\n    const handleCompanyLogin = () => {\n        if(providerId.length === 0 || providerPassword.length === 0){\n            alert('아이디와 비밀번호를 입력하세요');\n            return;\n        }\n\n        const data = {\n            providerId,\n            providerPassword\n        }\n        axios.post(\"http://localhost:8050/api/auth/signIn/company\", data).then((response) => {\n            const responseData = response.data;\n            console.log(responseData);\n            if(!responseData.result){\n                alert('아이디 또는 비밀번호가 일치하지 않습니다. ');\n                return;\n            }\n            const { token, exprTime, user, userType } = responseData.data;\n            const expires = new Date();\n            expires.setMilliseconds(expires.getMilliseconds() + exprTime);\n\n            setCookies('token', token, {expires});\n            setCookies('userType', userType, {expires});\n            setUser(user);\n            navigate(\"/\")\n        }).catch((error) => {\n            alert('로그인에 실패했습니다. ')\n        })\n    };\n\n    const handleKakaoLogin = (userEmail) => {\n        axios.post(\"http://localhost:8050/api/auth/signIn/kakao\", { userEmail })\n            .then(response => {\n                const responseData = response.data;\n                if (!responseData.result) {\n                    alert('일치하는 사용자를 찾을 수 없습니다.');\n                    return;\n                }\n                const { token, exprTime, user, userType } = responseData.data;\n                const expires = new Date();\n                expires.setMilliseconds(expires.getMilliseconds() + exprTime);\n\n                setCookies('token', token, { expires });\n                setCookies('userType', userType, { expires });\n                setUser(user);\n                navigate(\"/\");\n            })\n            .catch(error => {\n                alert('로그인에 실패했습니다.');\n            });\n    };\n\n\n    const handleSignUp = () => {\n        navigate(\"/register\")\n    };\n\n    const togglePasswordVisibility = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleCompanyImageClick = () => {\n        setShowCompanyForm(true);\n    };\n\n    const handleMemberImageClick = () => {\n        setShowMemberForm(true);\n    };\n\n    const handleBack = () => {\n        setShowCompanyForm(false);\n        setShowMemberForm(false);\n    };\n\n\n    if (!showMemberForm && !showCompanyForm) {\n        return (\n            <StyledContainer>\n                <Title>로그인</Title>\n                <ImageContainer>\n                    <UserImg onClick={handleCompanyImageClick}>\n                        <SelectImg alt=\"company\" src={company} />\n                    </UserImg>\n                    <UserImg onClick={handleMemberImageClick}>\n                        <SelectImg alt=\"member\" src={member} />\n                    </UserImg>\n                </ImageContainer>\n            </StyledContainer>\n        );\n    }else if(showMemberForm && !showCompanyForm){\n        return (\n            <StyledContainer>\n                <FormBox>\n                    <BackButton onClick={handleBack}>\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                    </BackButton>\n                    <LogoImg src={logo} alt=\"Logo\" />\n                    <Form>\n                        <StyledFormGroup controlId=\"formBasicId\">\n                            <StyledFormControl\n                                type=\"text\"\n                                placeholder=\"아이디 입력\"\n                                onChange={(e) => setUserId(e.target.value)}\n                            />\n                        </StyledFormGroup>\n\n                        <StyledFormGroup controlId=\"formBasicPassword\">\n                            <InputGroup>\n                                <StyledFormControl\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    placeholder=\"비밀번호 입력\"\n                                    onChange={(e) => setUserPassword(e.target.value)}\n                                />\n                                <InputGroup.Text onClick={togglePasswordVisibility} style={{ borderLeft: 'none', cursor: 'pointer' }}>\n                                    <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\n                                </InputGroup.Text>\n                            </InputGroup>\n                        </StyledFormGroup>\n\n                        <StyledButton variant=\"primary\" type=\"button\" onClick={handleLogin}>\n                            로그인\n                        </StyledButton>\n\n                        <Divider>또는</Divider>\n                        <UserImg type=\"button\" onClick={handleKakaoLoginImageClick}>\n                            <KakaoImg alt=\"kakao\" src={kakao} />\n                        </UserImg>\n                        <UserImg >\n                            <GoogleImg alt=\"google\" src={google} />\n                        </UserImg>\n                    </Form>\n                    <NavigationLinks>\n                        <NavLink>아이디 찾기</NavLink>\n                        <NavLinkDivider>•</NavLinkDivider>\n                        <NavLink href=\"#find-password\">비밀번호 찾기</NavLink>\n                        <NavLinkDivider>•</NavLinkDivider>\n                        <NavLink onClick={handleSignUp}>회원가입</NavLink>\n                    </NavigationLinks>\n                </FormBox>\n            </StyledContainer>\n        )\n    }else if(!showMemberForm && showCompanyForm){\n        return (\n            <StyledContainer>\n                <FormBox>\n                    <BackButton onClick={handleBack}>\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                    </BackButton>\n                    <LogoImg src={logo} alt=\"Logo\" />\n                    <Form>\n                        <StyledFormGroup controlId=\"formBasicId\">\n                            <StyledFormControl\n                                type=\"text\"\n                                placeholder=\"기업 아이디 입력\"\n                                onChange={(e) => setProviderId(e.target.value)}\n                            />\n                        </StyledFormGroup>\n\n                        <StyledFormGroup controlId=\"formBasicPassword\">\n                            <InputGroup>\n                                <StyledFormControl\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    placeholder=\"비밀번호 입력\"\n                                    onChange={(e) => setProviderPassword(e.target.value)}\n                                />\n                                <InputGroup.Text onClick={togglePasswordVisibility} style={{ borderLeft: 'none', cursor: 'pointer' }}>\n                                    <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\n                                </InputGroup.Text>\n                            </InputGroup>\n                        </StyledFormGroup>\n\n                        <StyledButton variant=\"primary\" type=\"button\" onClick={handleCompanyLogin}>\n                            로그인\n                        </StyledButton>\n                    </Form>\n                    <NavigationLinks>\n                        <NavLink href=\"#find-id\">아이디 찾기</NavLink>\n                        <NavLinkDivider>•</NavLinkDivider>\n                        <NavLink href=\"#find-password\">비밀번호 찾기</NavLink>\n                        <NavLinkDivider>•</NavLinkDivider>\n                        <NavLink onClick={handleSignUp}>회원가입</NavLink>\n                    </NavigationLinks>\n                </FormBox>\n            </StyledContainer>\n\n        )\n\n    }\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #ffffff;\n`;\n\nconst FormBox = styled.div`\n  padding: 40px;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 450px; \n  margin-top: 20px;\n  position: relative;\n`;\n\nconst StyledFormGroup = styled(Form.Group)`\n  margin-bottom: 20px; \n`;\n\nconst StyledFormControl = styled(Form.Control)`\n  font-size: 16px; \n  padding: 10px; \n  \n  ::placeholder {\n    color: #666; \n  }\n`;\n\nconst StyledButton = styled(Button)`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst LogoImg = styled.img`\n  height: 20vh;\n  width: auto;\n  margin-bottom: 20px;\n`;\n\nconst Divider = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 13px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px solid #ccc;\n  }\n\n  &::before {\n    margin-right: 10px;\n  }\n\n  &::after {\n    margin-left: 10px;\n  }\n`;\n\nconst UserImg = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n\nconst SelectImg = styled.img`\n  height: 45vh;\n  width: auto;\n  margin-right: 20px;\n`;\n\nconst KakaoImg = styled.img`\n  height: 5.5vh;\n  width: auto;\n`;\n\nconst GoogleImg = styled.img`\n  height: 7vh;\n  width: auto;\n`;\n\nconst NavigationLinks = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 13px;\n  font-weight: bolder;\n  margin-top: 25px;\n`;\n\nconst NavLink = styled.a`\n  text-decoration: none;\n  color: #000; \n  margin: 0 10px;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst NavLinkDivider = styled.span`\n  color: #000; \n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em; \n  color: #000; \n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 80px;\n  align-items:center;\n  font-size: 40px;\n  font-weight: 700;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n\n\nexport default SigninPage;\n","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AnnouncementListPage.js",["173","174","175"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ThemaPage.js",["176"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sharing from '../imgs/sharing.png';\nimport bookmark from '../imgs/bookmark.png';\nimport hart from '../imgs/hart.png';\nimport jijele from '../imgs/jijele.jpeg';\n\nconst ThemaPage = (props) => {\n    // 공유\n    const handleSharingClick = () => {\n        console.log('Click');\n    };\n    // 북마크\n    const handleBookmarkClick = () => {\n        console.log('Click2');\n    };\n    // 좋아요\n    const handleHartClick = () => {\n        console.log('Click3');\n    };\n    const [activeTab, setActiveTab] = useState(1);\n\n    const handleTabClick = (tabNumber) => {\n        setActiveTab(tabNumber);\n    };\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 1:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                <NewCourseContainer>\n                                    <NewCourseTitle>테마별 코스</NewCourseTitle>\n                                </NewCourseContainer>\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                            <SmallTitleContainer>\n                                <SmallTitle>\n                                    <SmallTitleContent>[으메 ~ 보자마자 깜짝놀랐구만~ 윤승준 피지컬보소잉 ~?]</SmallTitleContent>\n                                </SmallTitle>\n                                <SmallTag>{/* 이부분에 InputSkill 추가하면됨 */}</SmallTag>\n                            </SmallTitleContainer>\n                            <ContentContainer>\n                                <ContentTitleContainer>\n                                    <ContentSmallTitleContainer>모집 일정</ContentSmallTitleContainer>\n                                </ContentTitleContainer>\n                                <ContentMainContainer>\n                                    <ContentMainTextContainer>\n                                        <ContentTitle>\n                                            <h2>웹 디자이너</h2>\n                                            <h3>(경력)</h3>\n                                        </ContentTitle>\n                                        <ContentMemory>\n                                            <h2>이런 일을 해요</h2>\n                                            <ul>\n                                                <li>11</li>\n                                                <li>22</li>\n                                                <li>33</li>\n                                            </ul>\n                                        </ContentMemory>\n                                    </ContentMainTextContainer>\n                                </ContentMainContainer>\n                            </ContentContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 4:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return <Container>{renderTabContent()}</Container>;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  flex-direction: column;\n  //background-color: blue;\n`;\nconst TopImage = styled.img`\n  height: 300px;\n  width: 500px;\n`;\nconst TopContainer = styled.div`\n  //background-color: red;\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst MiddleContainer = styled.div`\n  //background-color: orange;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst MiddleTopContainer = styled.div`\n  //background-color: blue;\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n`;\nconst ThreeImgs = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: gray;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 2rem;\n`;\nconst StyledButton = styled.button`\n  background: none;\n  border: none;\n`;\nconst StyledImage = styled.img`\n  width: 20px;\n  height: 15px;\n`;\nconst MiddleBottomContainer = styled.div`\n  //background-color: pink;\n  display: flex;\n  flex: 8;\n`;\n\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 7;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewCourseTitle = styled.div`\n  font-size: 44px;\n  color: orange;\n  font-weight: 800;\n  //background-color: green;\n`;\n\nconst BottomContainer = styled.div`\n  //background-color: yellow;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst MenuContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  //background: #61dafb;\n`;\nconst MenuTitle = styled.div`\n  display: flex;\n  flex: 0.6;\n  flex-direction: row;\n  height: 50px;\n  //background-color: red;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\nconst TabButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 24px;\n  margin: 0 10px;\n  position: relative;\n\n  // hover 효과\n  &:hover {\n    color: orange;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n\n  // 선택된 탭의 스타일\n  &.active {\n    color: orange;\n    font-size: 32px;\n    font-weight: 700;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n`;\n\nconst SmallTitleContainer = styled.div`\n  //background-color: purple;\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  margin-top: 1rem;\n`;\nconst SmallTitle = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: yellow;\n  justify-content: center;\n  align-items: center;\n`;\nconst SmallTitleContent = styled.div`\n  display: flex;\n  flex: 0.6;\n  //background-color: orange;\n  font-size: 36px;\n  font-weight: 700;\n`;\nconst SmallTag = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: green;\n`;\nconst ContentContainer = styled.div`\n  //background-color: bisque;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst ContentTitleContainer = styled.div`\n  display: flex;\n  flex: 1.5;\n  //background-color: gray;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: 700;\n  align-items: center;\n`;\nconst ContentSmallTitleContainer = styled.div`\n  display: flex;\n  flex: 0.6;\n  margin-top: 1rem;\n`;\nconst ContentMainContainer = styled.div`\n  display: flex;\n  flex: 8.5;\n  justify-content: center;\n  align-items: flex-start; /* 세로 기준으로 top에 위치하도록 설정 */\n`;\nconst ContentMainTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: brown;\n  border-radius: 5px;\n  border: dodgerblue 5px solid;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  width: 1100px;\n  height: 400px;\n`;\nconst ContentTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  align-items: flex-start;\n  //background-color: white;\n  h2 {\n    color: dodgerblue;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n  }\n\n  h3 {\n    color: dodgerblue;\n    font-weight: 600;\n    margin-left: 2rem;\n  }\n`;\nconst ContentMemory = styled.div`\n  display: flex;\n  flex: 8;\n  flex-direction: column;\n  //background-color: yellow;\n  border-left: dodgerblue 3px solid;\n  align-items: flex-start;\n  h2 {\n    color: black;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    //background-color: red;\n  }\n  ul {\n    //background-color: gray;\n    display: block;\n    flex-direction: column;\n    list-style-type: disc; /* 원형 글머리 기호 */\n    margin-top: 1rem;\n  }\n\n  li {\n    font-size: 24px;\n    display: flex;\n    color: black;\n    font-weight: 600;\n    margin-bottom: 0.5em; /* 각 항목 사이의 간격 조절 */\n  }\n`;\n\n\nexport default ThemaPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecommendPage.js",["177"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/SignupPage.js",["178","179","180","181","182","183","184"],[],"import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {useNavigate} from 'react-router-dom';\nimport company from \"../imgs/company.png\"\nimport member from \"../imgs/member.png\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faArrowLeft, faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\nimport kakao from \"../imgs/kakaoRegister.png\";\nimport google from \"../imgs/googleRegister.png\";\nimport email from \"../imgs/emailRegister.png\"\nimport GoogleLogin from \"react-google-login\";\nimport logo from \"../imgs/logo2.png\";\nimport {Form, InputGroup} from \"react-bootstrap\";\nconst SignupPage = (props) => {\n    const [showMemberForm, setShowMemberForm] = useState(false);\n    const [isKakaoSdkLoaded, setIsKakaoSdkLoaded] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = \"https://developers.kakao.com/sdk/js/kakao.min.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        script.onload = () => {\n            if (window.Kakao && !window.Kakao.isInitialized()) {\n                window.Kakao.init('af3894518c9ad04274d8c7c098885abd');\n            }\n            setIsKakaoSdkLoaded(true); // SDK 로드 완료 후 상태 업데이트\n        };\n\n        return () => {\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, []);\n\n    const handleCompanyImageClick = () => {\n        navigate(\"/companyRegister\")\n    };\n\n    const handleMemberImageClick = () => {\n        setShowMemberForm(true);\n    };\n\n    const handleGoogleRegisterImageClick = () => {\n        const clientId = \"234889770604-vcqi694q1kvfblt30ajhq77gsh5s8j2t.apps.googleusercontent.com\";\n        const redirectUri = \"http://localhost:3000/googleCallback\";\n        const scope = \"https://www.googleapis.com/auth/userinfo.email\";\n        const url = `https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&access_type=offline&prompt=consent`;\n\n        window.location.href = url;\n    };\n\n    const handleEmailRegisterImageClick = () => {\n        navigate(\"/memberRegister\")\n    };\n\n    const handleBack = () => {\n        setShowMemberForm(false);\n    };\n\n    const handleKakaoRegisterImageClick = () => {\n\n        if (window.Kakao && window.Kakao.isInitialized()) { // Kakao SDK 초기화 확인\n            window.Kakao.Auth.login({\n                success: function(authObj) {\n                    console.log(authObj); // 인증 객체 확인\n\n                    window.Kakao.API.request({\n                        url: '/v2/user/me',\n                        success: function(response) {\n                            console.log(response);\n                            if (response.kakao_account && response.kakao_account.email) {\n                                const email = \"(kakao)\" + response.kakao_account.email;\n                                navigate(\"/memberRegister\", { state: { email } });\n                            } else {\n                                console.log(\"이메일 정보를 가져올 수 없습니다.\");\n                            }\n                        },\n                        fail: function(error) {\n                            console.log(error);\n                        },\n                    });\n                },\n                fail: function(err) {\n                    console.log(err);\n                },\n            });\n        } else {\n            console.error(\"Kakao SDK가 아직 로드되지 않았거나 초기화되지 않았습니다.\");\n        }\n    };\n\n\n    if (!showMemberForm) {\n        return (\n            <StyledContainer>\n                <Title>회원가입</Title>\n                <ImageContainer>\n                    <UserImg onClick={handleCompanyImageClick}>\n                        <SelectImg alt=\"company\" src={company} />\n                    </UserImg>\n                    <UserImg onClick={handleMemberImageClick}>\n                        <SelectImg alt=\"member\" src={member} />\n                    </UserImg>\n                </ImageContainer>\n            </StyledContainer>\n        );\n    }else if(showMemberForm){\n        return (\n            <StyledContainer>\n                <FormBox>\n                    <BackButton onClick={handleBack}>\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                    </BackButton>\n                    <Title>일반회원가입</Title>\n                    <UserImg onClick={handleKakaoRegisterImageClick}>\n                        <RegisterSelectImg alt=\"kakao\" src={kakao} />\n                    </UserImg>\n                    <UserImg onClick={handleGoogleRegisterImageClick}>\n                        <RegisterSelectImg alt=\"google\" src={google} />\n                    </UserImg>\n                    <UserImg onClick={handleEmailRegisterImageClick}>\n                        <RegisterEmailImg alt=\"email\" src={email} />\n                    </UserImg>\n                </FormBox>\n            </StyledContainer>\n        )\n    }\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #ffffff;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 80px;\n  align-items:center;\n  justify-content: center;\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst UserImg = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n\nconst SelectImg = styled.img`\n  height: 45vh;\n  width: auto;\n  margin-right: 20px;\n`;\n\nconst RegisterSelectImg = styled.img`\n  height: 10vh;\n  width: 500px;\n  margin-bottom: 20px;\n`;\n\nconst RegisterEmailImg = styled.img`\n  height: 8.8vh;\n  width: 500px;\n  margin-bottom: 20px;\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em; \n  color: #000; \n`;\n\nconst FormBox = styled.div`\n  padding: 40px;\n  justify-content: center;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 600px;\n  margin-top: 150px;\n  position: relative;\n`;\n\nexport default SignupPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AnnouncementContentPage.js",["185","186","187","188","189","190"],[],"import React, { useEffect, useState } from 'react';\nimport {useNavigate, useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {responsivePropType} from \"react-bootstrap/createUtilityClasses\";\nimport axios from \"axios\";\n\nconst AnnouncementContentPage = () => {\n    const { anno_id } = useParams();\n    const [announcement, setAnnouncement] = useState(null);\n    const writer = '관리자';\n    const navigate = useNavigate();\n    const [isEditing, setIsEditing] = useState(false);\n    const [modifiedContent, setModifiedContent] = useState('');\n    const [updateFlag, setUpdateFlag] = useState(false);\n\n    // 수정 버튼 클릭 시 수정 모드 활성화\n    const activateEditMode = () => {\n        setIsEditing(true);\n    };\n\n    // 수정 취소 시 수정 모드 비활성화 및 내용 초기화\n    const cancelEdit = () => {\n        setIsEditing(false);\n        setModifiedContent(announcement.anno_content); // 수정된 내용을 이전 내용으로 초기화\n    };\n\n    // 글 내용이 수정될 때마다 상태 업데이트\n    const handleContentChange = (e) => {\n        setModifiedContent(e.target.value);\n    };\n\n    //삭제 물어보는메서드\n    const confirmDelete = () => {\n        const isConfirmed = window.confirm('삭제하시겠습니까?');\n        if (isConfirmed) {\n            deleteAnnouncement();\n        }\n    };\n\n    //삭제 메서드\n    const deleteAnnouncement = async () => {\n        try {\n            const response = await axios.delete(`http://localhost:8050/api/announcements/${anno_id}`);\n            if (response.status === 200) {\n                alert(\"삭제 되었습니다.\");\n                navigate(\"/announcementlist\");\n            } else {\n                throw new Error('Failed to delete announcement');\n            }\n        } catch(error) {\n            console.error('error', error);\n        }\n    };\n\n    //수정 메서드\n    const saveEdit = async () => {\n        const modifiedData = {\n            anno_content: modifiedContent,\n        };\n        try {\n            const response = await axios.put(`http://localhost:8050/api/announcements/${anno_id}`,modifiedData)\n\n            if (response.status ===200) {\n                alert(\"수정 되었습니다.\");\n                setUpdateFlag((prevFlag) => !prevFlag);\n            } else {\n                throw new Error('Failed to modify announcement');\n            }\n        } catch (error) {\n            console.error('Error modifying announcement: ', error);\n        }\n    };\n\n    useEffect(() => {\n        if (updateFlag) {\n            setIsEditing(false);\n        }\n        fetchAnnouncement();\n    }, [anno_id, updateFlag]);\n\n    // 수정되었을 때 호출되는 함수\n    const handleUpdateFlag = () => {\n        setUpdateFlag((prevFlag) => !prevFlag);\n    };\n\n    const fetchAnnouncement = async () => {\n        try {\n            const response = await axios.get(`http://localhost:8050/api/announcements/${anno_id}`)\n            if (response.status !== 200 ) {\n                throw new Error('Failed to fetch announcement content');\n            }\n            const data = response.data;\n            setAnnouncement(data);\n            setModifiedContent(data.anno_content);\n            console.log('Announcement Content: ', data);\n        } catch (error) {\n            console.error('Error fetching announcement content: ', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchAnnouncement();\n    }, [anno_id]);\n\n\n    if (!announcement) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Container>\n            <NoticeTitleContainer>공지사항</NoticeTitleContainer>\n            <MiddleContainer>\n\n                <Title>\n                    <h2>글 제목 : {announcement.anno_title}</h2>\n                    <h6>조회수 : {announcement.anno_views}</h6>\n                </Title>\n                <WriterContainer>\n                    <h6>작성자 : {writer} </h6>\n                </WriterContainer>\n                <ContentContainer>\n                    {isEditing ? (\n                        // 수정 모드일 때 textarea로 변경\n                        <textarea\n                            value={modifiedContent}\n                            onChange={(e) => setModifiedContent(e.target.value)}\n                            rows={10}\n                            style={{ width: '100%' }}\n                        />\n                    ) : (\n                        // 수정 모드가 아닐 때는 <p> 태그로 표시\n                        <p>{announcement.anno_content}</p>\n                    )}\n                </ContentContainer>\n            </MiddleContainer>\n            <ButtonContainer>\n                {isEditing ? (\n                    // 수정 모드일 때 저장 및 취소 버튼 표시\n                    <>\n                        <SaveButton onClick={saveEdit}>저장</SaveButton>\n                        <CancelButton onClick={cancelEdit}>취소</CancelButton>\n                    </>\n                ) : (\n\n                    // 수정 모드가 아닐 때 수정 버튼 표시\n                    <EditButton onClick={activateEditMode}>수정</EditButton>\n                )}\n                <DeleteButton onClick={confirmDelete}>삭제</DeleteButton>\n            </ButtonContainer>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 700px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MiddleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 900px;\n  height: 500px;\n  background-color: #f8f8f8; /* Light gray background */\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow */\n  padding: 20px; /* Add some padding */\n  margin-top: 20px; /* Add space at the top */\n`;\n\nconst NoticeTitleContainer = styled.div`\n  font-size: 40px;\n  font-weight: 700;\n  width: 800px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\nconst EditButton = styled.button`\n  background-color: #007bff;\n  border: none;\n  color: white;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n  margin-right: 1rem;\n`;\nconst Title = styled.div`\n  display: flex;\n  flex: 1;\n  font-size: 20px;\n  align-items: center;\n  margin-left: 2rem;\n  margin-right: 2rem;\n  justify-content: space-between;\n`;\n\nconst WriterContainer = styled.div`\n  display: flex;\n  font-size: 20px;\n  flex: 3;\n  align-items: center;\n  margin-left: 1rem;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex: 4;\n  font-size: 20px;\n  margin-left: 1rem;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 50px;\n  width: 900px;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst SaveButton = styled.button`\n  background-color: #28a745;\n  border: none;\n  color: white;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n  margin-right: 1rem;\n`;\n\nconst CancelButton = styled.button`\n  background-color: #dc3545;\n  border: none;\n  color: white;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n  margin-right: 1rem;\n`;\n\nconst DeleteButton = styled.button`\n  background-color: #ff3b30; /* Red color */\n  border: none;\n  color: white;\n  border-radius: 10px;\n  margin-right: 1rem;\n  width: 80px;\n  height: 30px;\n`;\n\nconst ModifyButton = styled.button`\n  background-color: #007bff; /* Blue color */\n  border: none;\n  color: white;\n  border-radius: 10px;\n  width: 80px;\n  height: 30px;\n`;\n\nexport default AnnouncementContentPage;\n","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/Navigate.js",["191","192","193","194","195","196","197","198","199","200"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/InputSkill.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/MainPage.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RegionPage.js",["220"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sharing from '../imgs/sharing.png';\nimport bookmark from '../imgs/bookmark.png';\nimport hart from '../imgs/hart.png';\nimport ningning from '../imgs/ningning.jpeg';\n\nconst RegionPage = (props) => {\n    // 공유\n    const handleSharingClick = () => {\n        console.log('Click');\n    };\n    // 북마크\n    const handleBookmarkClick = () => {\n        console.log('Click2');\n    };\n    // 좋아요\n    const handleHartClick = () => {\n        console.log('Click3');\n    };\n    const [activeTab, setActiveTab] = useState(1);\n\n    const handleTabClick = (tabNumber) => {\n        setActiveTab(tabNumber);\n    };\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 1:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                <NewCourseContainer>\n                                    <NewCourseTitle>지역별 코스</NewCourseTitle>\n                                </NewCourseContainer>\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                            <SmallTitleContainer>\n                                <SmallTitle>\n                                    <SmallTitleContent>[와따마,, 다시봐도 으마무시하고마잉 ~?]</SmallTitleContent>\n                                </SmallTitle>\n                                <SmallTag>{/* 이부분에 InputSkill 추가하면됨 */}</SmallTag>\n                            </SmallTitleContainer>\n                            <ContentContainer>\n                                <ContentTitleContainer>\n                                    <ContentSmallTitleContainer>모집 일정</ContentSmallTitleContainer>\n                                </ContentTitleContainer>\n                                <ContentMainContainer>\n                                    <ContentMainTextContainer>\n                                        <ContentTitle>\n                                            <h2>웹 디자이너</h2>\n                                            <h3>(경력)</h3>\n                                        </ContentTitle>\n                                        <ContentMemory>\n                                            <h2>이런 일을 해요</h2>\n                                            <ul>\n                                                <li>11</li>\n                                                <li>22</li>\n                                                <li>33</li>\n                                            </ul>\n                                        </ContentMemory>\n                                    </ContentMainTextContainer>\n                                </ContentMainContainer>\n                            </ContentContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 4:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return <Container>{renderTabContent()}</Container>;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  flex-direction: column;\n  //background-color: blue;\n`;\nconst TopImage = styled.img`\n  height: 300px;\n  width: 500px;\n`;\nconst TopContainer = styled.div`\n  //background-color: red;\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst MiddleContainer = styled.div`\n  //background-color: orange;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst MiddleTopContainer = styled.div`\n  //background-color: blue;\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n`;\nconst ThreeImgs = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: gray;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 2rem;\n`;\nconst StyledButton = styled.button`\n  background: none;\n  border: none;\n`;\nconst StyledImage = styled.img`\n  width: 20px;\n  height: 15px;\n`;\nconst MiddleBottomContainer = styled.div`\n  //background-color: pink;\n  display: flex;\n  flex: 8;\n`;\n\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 7;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewCourseTitle = styled.div`\n  font-size: 44px;\n  color: orange;\n  font-weight: 800;\n  //background-color: green;\n`;\n\nconst BottomContainer = styled.div`\n  //background-color: yellow;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst MenuContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  //background: #61dafb;\n`;\nconst MenuTitle = styled.div`\n  display: flex;\n  flex: 0.6;\n  flex-direction: row;\n  height: 50px;\n  //background-color: red;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\nconst TabButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 24px;\n  margin: 0 10px;\n  position: relative;\n\n  // hover 효과\n  &:hover {\n    color: orange;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n\n  // 선택된 탭의 스타일\n  &.active {\n    color: orange;\n    font-size: 32px;\n    font-weight: 700;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n`;\n\nconst SmallTitleContainer = styled.div`\n  //background-color: purple;\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  margin-top: 1rem;\n`;\nconst SmallTitle = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: yellow;\n  justify-content: center;\n  align-items: center;\n`;\nconst SmallTitleContent = styled.div`\n  display: flex;\n  flex: 0.6;\n  //background-color: orange;\n  font-size: 36px;\n  font-weight: 700;\n`;\nconst SmallTag = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: green;\n`;\nconst ContentContainer = styled.div`\n  //background-color: bisque;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst ContentTitleContainer = styled.div`\n  display: flex;\n  flex: 1.5;\n  //background-color: gray;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: 700;\n  align-items: center;\n`;\nconst ContentSmallTitleContainer = styled.div`\n  display: flex;\n  flex: 0.6;\n  margin-top: 1rem;\n`;\nconst ContentMainContainer = styled.div`\n  display: flex;\n  flex: 8.5;\n  justify-content: center;\n  align-items: flex-start; /* 세로 기준으로 top에 위치하도록 설정 */\n`;\nconst ContentMainTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: brown;\n  border-radius: 5px;\n  border: dodgerblue 5px solid;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  width: 1100px;\n  height: 400px;\n`;\nconst ContentTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  align-items: flex-start;\n  //background-color: white;\n  h2 {\n    color: dodgerblue;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n  }\n\n  h3 {\n    color: dodgerblue;\n    font-weight: 600;\n    margin-left: 2rem;\n  }\n`;\nconst ContentMemory = styled.div`\n  display: flex;\n  flex: 8;\n  flex-direction: column;\n  //background-color: yellow;\n  border-left: dodgerblue 3px solid;\n  align-items: flex-start;\n  h2 {\n    color: black;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    //background-color: red;\n  }\n  ul {\n    //background-color: gray;\n    display: block;\n    flex-direction: column;\n    list-style-type: disc; /* 원형 글머리 기호 */\n    margin-top: 1rem;\n  }\n\n  li {\n    font-size: 24px;\n    display: flex;\n    color: black;\n    font-weight: 600;\n    margin-bottom: 0.5em; /* 각 항목 사이의 간격 조절 */\n  }\n`;\n\nexport default RegionPage;",["221","222","223","224","225","226"],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingNewsPage.js",["227"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewPage.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/NewPage.js",["228","229"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sharing from '../imgs/sharing.png';\nimport bookmark from '../imgs/bookmark.png';\nimport hart from '../imgs/hart.png';\nimport winter from '../imgs/winter.jpg';\n\nconst NewPage = (props) => {\n    // 공유\n    const handleSharingClick = () => {\n        console.log('Click');\n    };\n    // 북마크\n    const handleBookmarkClick = () => {\n        console.log('Click2');\n    };\n    // 좋아요\n    const handleHartClick = () => {\n        console.log('Click3');\n    };\n    const [activeTab, setActiveTab] = useState(1);\n\n    const handleTabClick = (tabNumber) => {\n        setActiveTab(tabNumber);\n    };\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 1:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={winter} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                <NewCourseContainer>\n                                    <NewCourseTitle>신규 코스</NewCourseTitle>\n                                </NewCourseContainer>\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                            <SmallTitleContainer>\n                                <SmallTitle>\n                                    <SmallTitleContent>[차 한잔으로 완성되는 휴식, 김포다도박물관]</SmallTitleContent>\n                                </SmallTitle>\n                                <SmallTag>{/* 이부분에 InputSkill 추가하면됨 */}</SmallTag>\n                            </SmallTitleContainer>\n                            <ContentContainer>\n                                <ContentTitleContainer>\n                                    <ContentSmallTitleContainer>모집 일정</ContentSmallTitleContainer>\n                                </ContentTitleContainer>\n                                <ContentMainContainer>\n                                    <ContentMainTextContainer>\n                                        <ContentTitle>\n                                            <h2>웹 디자이너</h2>\n                                            <h3>(경력)</h3>\n                                        </ContentTitle>\n                                        <ContentMemory>\n                                            <h2>이런 일을 해요</h2>\n                                            <ul>\n                                                <li>11</li>\n                                                <li>22</li>\n                                                <li>33</li>\n                                            </ul>\n                                        </ContentMemory>\n                                    </ContentMainTextContainer>\n                                </ContentMainContainer>\n                            </ContentContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={winter} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={winter} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 4:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={winter} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return <Container>{renderTabContent()}</Container>;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  flex-direction: column;\n  //background-color: blue;\n`;\nconst TopImage = styled.img`\n  height: 300px;\n  width: 500px;\n`;\nconst TopContainer = styled.div`\n  //background-color: red;\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst MiddleContainer = styled.div`\n  //background-color: orange;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst MiddleTopContainer = styled.div`\n  //background-color: blue;\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n`;\nconst ThreeImgs = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: gray;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 2rem;\n`;\nconst StyledButton = styled.button`\n  background: none;\n  border: none;\n`;\nconst StyledImage = styled.img`\n  width: 20px;\n  height: 15px;\n`;\nconst MiddleBottomContainer = styled.div`\n  //background-color: pink;\n  display: flex;\n  flex: 8;\n`;\n\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 7;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewCourseTitle = styled.div`\n  font-size: 44px;\n  color: orange;\n  font-weight: 800;\n  //background-color: green;\n`;\n\nconst BottomContainer = styled.div`\n  //background-color: yellow;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst MenuContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  //background: #61dafb;\n`;\nconst MenuTitle = styled.div`\n  display: flex;\n  flex: 0.6;\n  flex-direction: row;\n  height: 50px;\n  //background-color: red;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\nconst TabButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 24px;\n  margin: 0 10px;\n  position: relative;\n\n  // hover 효과\n  &:hover {\n    color: orange;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n\n  // 선택된 탭의 스타일\n  &.active {\n    color: orange;\n    font-size: 32px;\n    font-weight: 700;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n`;\n\nconst SmallTitleContainer = styled.div`\n  //background-color: purple;\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  margin-top: 1rem;\n`;\nconst SmallTitle = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: yellow;\n  justify-content: center;\n  align-items: center;\n`;\nconst SmallTitleContent = styled.div`\n  display: flex;\n  flex: 0.6;\n  //background-color: orange;\n  font-size: 36px;\n  font-weight: 700;\n`;\nconst SmallTag = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: green;\n`;\nconst ContentContainer = styled.div`\n  //background-color: bisque;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst ContentTitleContainer = styled.div`\n  display: flex;\n  flex: 1.5;\n  //background-color: gray;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: 700;\n  align-items: center;\n`;\nconst ContentSmallTitleContainer = styled.div`\n  display: flex;\n  flex: 0.6;\n  margin-top: 1rem;\n`;\nconst ContentMainContainer = styled.div`\n  display: flex;\n  flex: 8.5;\n  justify-content: center;\n  align-items: flex-start; /* 세로 기준으로 top에 위치하도록 설정 */\n`;\nconst ContentMainTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: brown;\n  border-radius: 5px;\n  border: dodgerblue 5px solid;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  width: 1100px;\n  height: 400px;\n`;\nconst ContentTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  align-items: flex-start;\n  //background-color: white;\n  h2 {\n    color: dodgerblue;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n  }\n\n  h3 {\n    color: dodgerblue;\n    font-weight: 600;\n    margin-left: 2rem;\n  }\n`;\nconst ContentMemory = styled.div`\n  display: flex;\n  flex: 8;\n  flex-direction: column;\n  //background-color: yellow;\n  border-left: dodgerblue 3px solid;\n  align-items: flex-start;\n  h2 {\n    color: black;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    //background-color: red;\n  }\n  ul {\n    //background-color: gray;\n    display: block;\n    flex-direction: column;\n    list-style-type: disc; /* 원형 글머리 기호 */\n    margin-top: 1rem;\n  }\n\n  li {\n    font-size: 24px;\n    display: flex;\n    color: black;\n    font-weight: 600;\n    margin-bottom: 0.5em; /* 각 항목 사이의 간격 조절 */\n  }\n`;\nconst TravelContent = styled.div`\n  display: flex;\n  flex: 1;\n  background-color: green;\n  justify-content: center;\n  align-items: center;\n  color: white; /* 텍스트의 색상을 흰색으로 설정 */\n  font-size: 24px; /* 텍스트의 크기를 24px로 설정 (원하는 크기로 조절) */\n`;\n\nexport default NewPage;","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/InfoChangePage.js",["230","231","232","233","234","235"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/MyInfoPage.js",["236","237","238","239","240","241"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/CompanySignupPage.js",["242","243"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/GoogleLoginPage.js",["244"],[],"import { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport MemberSignUpPage from \"./MemberSignupPage\";\n\nconst GoogleLoginPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(location.search);\n        const code = urlParams.get('code');\n        console.log(code)\n\n        if (code) {\n            axios.post('http://localhost:8050/api/auth/google', { code })\n                .then(response => {\n                    navigate('/memberRegister', { state: { email: response.data.email } });\n                })\n                .catch(error => console.error(error));\n        }\n    }, [location, navigate]);\n\n    return <div>Google 인증 중...</div>;\n};\n\nexport default GoogleLoginPage;\n","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/AuthPage/MemberSignupPage.js",["245","246"],[],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\"\nimport { useLocation } from 'react-router-dom';\nimport { Form, Button, InputGroup, Row, Col } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport logo from \"../imgs/logo2.png\";\n\nconst MemberSignUpPage = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [isKakaoOrGoogleEmail, setIsKakaoOrGoogleEmail] = useState(false);\n\n    useEffect(() => {\n        if (location.state && location.state.email) {\n            setFormData(prevFormData => ({\n                ...prevFormData,\n                userEmail: location.state.email\n            }));\n            setIsKakaoOrGoogleEmail(true);\n        }\n    }, [location]);\n\n    const [showSecondPart, setShowSecondPart] = useState(false);\n    const [formData, setFormData] = useState({\n        userId: '',\n        userName: '',\n        userEmail: '',\n        userPassword: '',\n        userPasswordCheck: '',\n        userGender: '',\n        userInfo: '',\n        userPrefer: '',\n        userPhone: '',\n        userAddress: '',\n        userProfile: ''\n    });\n    const [addressFields, setAddressFields] = useState({\n        postalCode: '',\n        address: '',\n        detailAddress: ''\n    });\n\n    const [validationErrors, setValidationErrors] = useState({});\n\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\n        script.async = true;\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    const searchAddress = () => {\n        new window.daum.Postcode({\n            oncomplete: function(data) {\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\n                const fullAddress = {\n                    postalCode: data.zonecode,\n                    address: addr,\n                    detailAddress: ''\n                };\n                setAddressFields(fullAddress);\n            }\n        }).open();\n    };\n    const validateForm = () => {\n        let errors = {};\n\n        // 아이디 유효성 검사\n        if (formData.userId.length < 4 || formData.userId.length > 12) {\n            errors.userId = \"아이디는 4자 이상 12자 이하로 입력해주세요.\";\n        }\n\n        // 이름 유효성 검사\n        if (!formData.userName) {\n            errors.userName = \"이름을 입력해주세요.\";\n        }\n\n        // 이메일 유효성 검사\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailPattern.test(formData.userEmail)) {\n            errors.userEmail = \"올바른 이메일 주소를 입력해주세요.\";\n        }\n\n        // 비밀번호 유효성 검사\n        const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9]).{4,12}$/;\n        if (!passwordPattern.test(formData.userPassword)) {\n            errors.userPassword = \"비밀번호는 4~12자의 영문 대소문자, 숫자로만 입력해야 합니다.\";\n        }\n\n        // 비밀번호 확인 검사\n        if (formData.userPassword !== formData.userPasswordCheck) {\n            errors.userPasswordCheck = \"비밀번호가 일치하지 않습니다.\";\n        }\n\n        // 휴대폰 번호 유효성 검사\n        const phonePattern = /^[0-9]{10,11}$/;\n        if (!phonePattern.test(formData.userPhone)) {\n            errors.userPhone = \"올바른 휴대폰 번호를 입력해주세요.\";\n        }\n\n        // 선호 지역 유효성 검사\n        if (!formData.userPrefer) {\n            errors.userPrefer = \"선호 지역을 입력해주세요.\";\n        }\n\n        if (!formData.userGender) {\n            errors.userGender = \"성별을 선택해주세요.\";\n        }\n\n        // 자기소개 유효성 검사\n        if (!formData.userInfo) {\n            errors.userInfo = \"자기소개를 입력해주세요.\";\n        }\n\n        console.log(errors); // 오류 객체 출력\n\n        console.log(Object.keys(errors).length);\n\n        setValidationErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressFields({ ...addressFields, [e.target.name]: e.target.value });\n    };\n\n    const handleNext = () => {\n        setShowSecondPart(true);\n    };\n\n    const handleBack = () => {\n        if (showSecondPart) {\n            setShowSecondPart(false);\n        } else {\n            navigate(-1);\n        }\n    };\n\n    const handleSignUp = (event) => {\n        event.preventDefault();\n        if (validateForm()) {\n            const combinedAddress = `${addressFields.postalCode} ${addressFields.address} ${addressFields.detailAddress}`.trim();\n            const signUpData = {\n                ...formData,\n                userAddress: combinedAddress\n            };\n\n            axios.post('http://localhost:8050/api/auth/signUp', signUpData)\n                .then(response => {\n                    console.log(\"회원가입 성공: \", response.data);\n                    navigate(\"/login\");\n                })\n                .catch(error => {\n                    // 에러 처리\n                    console.error(\"회원가입 실패: \", error);\n                });\n        }\n    };\n\n    return (\n        <StyledContainer>\n            <FormBox>\n                <BackButton onClick={handleBack}>\n                    <FontAwesomeIcon icon={faArrowLeft} />\n                </BackButton>\n                <LogoImg src={logo} alt=\"Logo\" />\n                <Form onSubmit={handleSignUp}>\n                    {!showSecondPart ? (\n                        <>\n                            <StyledFormGroup controlId=\"formBasicUsername\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"아이디\"\n                                    name=\"userId\"\n                                    value={formData.userId}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userId && <ErrorText>{validationErrors.userId}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicName\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"이름\"\n                                    name=\"userName\"\n                                    value={formData.userName}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userName && <ErrorText>{validationErrors.userName}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicEmail\">\n                                <StyledFormControl\n                                    type=\"email\"\n                                    placeholder=\"이메일\"\n                                    name=\"userEmail\"\n                                    value={formData.userEmail}\n                                    onChange={handleChange}\n                                    disabled={isKakaoOrGoogleEmail}\n                                />\n                                {validationErrors.userEmail && <ErrorText>{validationErrors.userEmail}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPassword\">\n                                <StyledFormControl\n                                    type=\"password\"\n                                    placeholder=\"비밀번호\"\n                                    name=\"userPassword\"\n                                    value={formData.userPassword}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userPassword && <ErrorText>{validationErrors.userPassword}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPasswordCheck\">\n                                <StyledFormControl\n                                    type=\"password\"\n                                    placeholder=\"비밀번호 확인\"\n                                    name=\"userPasswordCheck\"\n                                    value={formData.userPasswordCheck}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userPasswordCheck && <ErrorText>{validationErrors.userPasswordCheck}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPhone\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"전화번호(-빼고 입력)\"\n                                    name=\"userPhone\"\n                                    value={formData.userPhone}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userPhone && <ErrorText>{validationErrors.userPhone}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledButton variant=\"secondary\" onClick={handleNext}>\n                                다음\n                            </StyledButton>\n                        </>\n                    ) : (\n                        <>\n                            <StyledFormGroup>\n                                <Row>\n                                    <Col>\n                                        <StyledFormControl\n                                            type=\"text\"\n                                            placeholder=\"우편번호\"\n                                            name=\"postalCode\"\n                                            value={addressFields.postalCode}\n                                            onChange={handleAddressChange}\n                                            disabled\n                                        />\n                                    </Col>\n                                    <Col md=\"auto\">\n                                        <Button variant=\"outline-secondary\" onClick={searchAddress}>\n                                            검색\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </StyledFormGroup>\n                            <StyledFormGroup>\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"주소\"\n                                    name=\"address\"\n                                    value={addressFields.address}\n                                    onChange={handleAddressChange}\n                                    disabled\n                                />\n                            </StyledFormGroup>\n                            <StyledFormGroup>\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"상세주소\"\n                                    name=\"detailAddress\"\n                                    value={addressFields.detailAddress}\n                                    onChange={handleAddressChange}\n                                />\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicPrefer\">\n                                <StyledFormControl\n                                    type=\"text\"\n                                    placeholder=\"선호 지역\"\n                                    name=\"userPrefer\"\n                                    value={formData.userPrefer}\n                                    onChange={handleChange}\n                                />\n                                {validationErrors.userPrefer && <ErrorText>{validationErrors.userPrefer}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicGender\">\n                                <Form.Control as=\"select\" name=\"userGender\" value={formData.userGender} onChange={handleChange}>\n                                    <option value=\"\">성별 선택</option>\n                                    <option value=\"male\">남성</option>\n                                    <option value=\"female\">여성</option>\n                                </Form.Control>\n                                {validationErrors.userGender && <ErrorText>{validationErrors.userGender}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledFormGroup controlId=\"formBasicIntroduction\">\n                                <StyledFormControl\n                                    as=\"textarea\"\n                                    placeholder=\"자기소개\"\n                                    name=\"userInfo\"\n                                    value={formData.userInfo}\n                                    onChange={handleChange}\n                                    rows={3}\n                                />\n                                {validationErrors.userInfo && <ErrorText>{validationErrors.userInfo}</ErrorText>}\n                            </StyledFormGroup>\n\n                            <StyledButton variant=\"primary\" type=\"submit\">\n                                회원가입\n                            </StyledButton>\n                        </>\n                    )}\n                </Form>\n            </FormBox>\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #ffffff;\n`;\n\nconst FormBox = styled.div`\n  padding: 40px;\n  justify-content: center;\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 450px;\n  margin-top: 150px;\n  position: relative;\n`;\n\nconst StyledFormGroup = styled(Form.Group)`\n  margin-bottom: 20px;\n`;\n\nconst StyledFormControl = styled(Form.Control)`\n  font-size: 16px;\n  padding: 10px;\n\n  ::placeholder {\n    color: #666;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst LogoImg = styled.img`\n  height: 18vh;\n  width: auto;\n  margin-bottom: 10px;\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5em;\n  color: #000;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 40px;\n  align-items:center;\n  justify-content: center;\n  font-size: 15px;\n  font-weight: 500;\n  font-family: \"Berlin Sans FB\",fantasy;\n  color: #996666;\n`;\n\nconst ErrorText = styled.div`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nexport default MemberSignUpPage;\n","/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Components/Footer.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/stores/index.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/stores/user.store.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AboutPage.js",["247","248","249","250","251","252","253","254","255","256","257","258","259"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/RecruitPage.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/CompanyInfoChangePage.js",["260","261","262","263","264","265","266","267","268","269","270","271"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/WritingReviewPage.js",["272","273"],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewContentPage.js",[],[],"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/AboutPolicyPage.js",["274"],[],{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":24,"column":8,"nodeType":"289","messageId":"290","endLine":24,"endColumn":18},{"ruleId":"287","severity":1,"message":"291","line":28,"column":12,"nodeType":"289","messageId":"290","endLine":28,"endColumn":19},{"ruleId":"287","severity":1,"message":"292","line":29,"column":12,"nodeType":"289","messageId":"290","endLine":29,"endColumn":16},{"ruleId":"287","severity":1,"message":"293","line":31,"column":12,"nodeType":"289","messageId":"290","endLine":31,"endColumn":28},{"ruleId":"287","severity":1,"message":"294","line":32,"column":12,"nodeType":"289","messageId":"290","endLine":32,"endColumn":21},{"ruleId":"287","severity":1,"message":"295","line":3,"column":8,"nodeType":"289","messageId":"290","endLine":3,"endColumn":16},{"ruleId":"287","severity":1,"message":"296","line":6,"column":8,"nodeType":"289","messageId":"290","endLine":6,"endColumn":12},{"ruleId":"287","severity":1,"message":"297","line":27,"column":19,"nodeType":"289","messageId":"290","endLine":27,"endColumn":23},{"ruleId":"287","severity":1,"message":"298","line":1,"column":27,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"298","line":1,"column":27,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"299","line":7,"column":22,"nodeType":"289","messageId":"290","endLine":7,"endColumn":27},{"ruleId":"287","severity":1,"message":"300","line":7,"column":29,"nodeType":"289","messageId":"290","endLine":7,"endColumn":39},{"ruleId":"287","severity":1,"message":"301","line":11,"column":8,"nodeType":"289","messageId":"290","endLine":11,"endColumn":19},{"ruleId":"287","severity":1,"message":"302","line":12,"column":8,"nodeType":"289","messageId":"290","endLine":12,"endColumn":12},{"ruleId":"287","severity":1,"message":"303","line":13,"column":9,"nodeType":"289","messageId":"290","endLine":13,"endColumn":13},{"ruleId":"287","severity":1,"message":"304","line":13,"column":15,"nodeType":"289","messageId":"290","endLine":13,"endColumn":25},{"ruleId":"287","severity":1,"message":"293","line":16,"column":12,"nodeType":"289","messageId":"290","endLine":16,"endColumn":28},{"ruleId":"287","severity":1,"message":"305","line":4,"column":9,"nodeType":"289","messageId":"290","endLine":4,"endColumn":27},{"ruleId":"287","severity":1,"message":"306","line":28,"column":11,"nodeType":"289","messageId":"290","endLine":28,"endColumn":30},{"ruleId":"307","severity":1,"message":"308","line":79,"column":8,"nodeType":"309","endLine":79,"endColumn":29,"suggestions":"310"},{"ruleId":"287","severity":1,"message":"311","line":82,"column":11,"nodeType":"289","messageId":"290","endLine":82,"endColumn":27},{"ruleId":"307","severity":1,"message":"308","line":103,"column":8,"nodeType":"309","endLine":103,"endColumn":17,"suggestions":"312"},{"ruleId":"287","severity":1,"message":"313","line":258,"column":7,"nodeType":"289","messageId":"290","endLine":258,"endColumn":19},{"ruleId":"287","severity":1,"message":"314","line":2,"column":17,"nodeType":"289","messageId":"290","endLine":2,"endColumn":20},{"ruleId":"287","severity":1,"message":"315","line":2,"column":22,"nodeType":"289","messageId":"290","endLine":2,"endColumn":31},{"ruleId":"287","severity":1,"message":"316","line":14,"column":21,"nodeType":"289","messageId":"290","endLine":14,"endColumn":30},{"ruleId":"287","severity":1,"message":"317","line":20,"column":18,"nodeType":"289","messageId":"290","endLine":20,"endColumn":25},{"ruleId":"307","severity":1,"message":"318","line":59,"column":8,"nodeType":"309","endLine":59,"endColumn":10,"suggestions":"319"},{"ruleId":"320","severity":1,"message":"321","line":121,"column":21,"nodeType":"322","messageId":"323","endLine":121,"endColumn":30},{"ruleId":"287","severity":1,"message":"324","line":191,"column":7,"nodeType":"289","messageId":"290","endLine":191,"endColumn":19},{"ruleId":"287","severity":1,"message":"325","line":200,"column":7,"nodeType":"289","messageId":"290","endLine":200,"endColumn":14},{"ruleId":"326","severity":1,"message":"327","line":250,"column":5,"nodeType":"322","endLine":258,"endColumn":6},{"ruleId":"287","severity":1,"message":"328","line":276,"column":7,"nodeType":"289","messageId":"290","endLine":276,"endColumn":22},{"ruleId":"287","severity":1,"message":"329","line":1,"column":16,"nodeType":"289","messageId":"290","endLine":1,"endColumn":24},{"ruleId":"287","severity":1,"message":"330","line":1,"column":26,"nodeType":"289","messageId":"290","endLine":1,"endColumn":37},{"ruleId":"287","severity":1,"message":"298","line":1,"column":39,"nodeType":"289","messageId":"290","endLine":1,"endColumn":48},{"ruleId":"287","severity":1,"message":"331","line":2,"column":10,"nodeType":"289","messageId":"290","endLine":2,"endColumn":14},{"ruleId":"287","severity":1,"message":"302","line":18,"column":8,"nodeType":"289","messageId":"290","endLine":18,"endColumn":12},{"ruleId":"332","severity":1,"message":"333","line":69,"column":46,"nodeType":"322","endLine":69,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":70,"column":46,"nodeType":"322","endLine":70,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":71,"column":46,"nodeType":"322","endLine":71,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":72,"column":46,"nodeType":"322","endLine":72,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":94,"column":46,"nodeType":"322","endLine":94,"endColumn":94},{"ruleId":"332","severity":1,"message":"333","line":95,"column":46,"nodeType":"322","endLine":95,"endColumn":94},{"ruleId":"332","severity":1,"message":"333","line":122,"column":46,"nodeType":"322","endLine":122,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":123,"column":46,"nodeType":"322","endLine":123,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":124,"column":46,"nodeType":"322","endLine":124,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":125,"column":46,"nodeType":"322","endLine":125,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":150,"column":46,"nodeType":"322","endLine":150,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":151,"column":46,"nodeType":"322","endLine":151,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":152,"column":46,"nodeType":"322","endLine":152,"endColumn":88},{"ruleId":"332","severity":1,"message":"333","line":153,"column":46,"nodeType":"322","endLine":153,"endColumn":88},{"ruleId":"287","severity":1,"message":"298","line":1,"column":27,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"275","replacedBy":"334"},{"ruleId":"277","replacedBy":"335"},{"ruleId":"279","replacedBy":"336"},{"ruleId":"281","replacedBy":"337"},{"ruleId":"283","replacedBy":"338"},{"ruleId":"285","replacedBy":"339"},{"ruleId":"287","severity":1,"message":"295","line":3,"column":8,"nodeType":"289","messageId":"290","endLine":3,"endColumn":16},{"ruleId":"287","severity":1,"message":"298","line":1,"column":27,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"340","line":452,"column":7,"nodeType":"289","messageId":"290","endLine":452,"endColumn":20},{"ruleId":"287","severity":1,"message":"341","line":8,"column":9,"nodeType":"289","messageId":"290","endLine":8,"endColumn":14},{"ruleId":"287","severity":1,"message":"342","line":10,"column":8,"nodeType":"289","messageId":"290","endLine":10,"endColumn":10},{"ruleId":"287","severity":1,"message":"316","line":17,"column":21,"nodeType":"289","messageId":"290","endLine":17,"endColumn":30},{"ruleId":"287","severity":1,"message":"343","line":30,"column":12,"nodeType":"289","messageId":"290","endLine":30,"endColumn":25},{"ruleId":"307","severity":1,"message":"344","line":69,"column":8,"nodeType":"309","endLine":69,"endColumn":10,"suggestions":"345"},{"ruleId":"287","severity":1,"message":"346","line":127,"column":11,"nodeType":"289","messageId":"290","endLine":127,"endColumn":23},{"ruleId":"287","severity":1,"message":"342","line":10,"column":8,"nodeType":"289","messageId":"290","endLine":10,"endColumn":10},{"ruleId":"287","severity":1,"message":"316","line":14,"column":21,"nodeType":"289","messageId":"290","endLine":14,"endColumn":30},{"ruleId":"307","severity":1,"message":"318","line":54,"column":8,"nodeType":"309","endLine":54,"endColumn":10,"suggestions":"347"},{"ruleId":"287","severity":1,"message":"348","line":210,"column":7,"nodeType":"289","messageId":"290","endLine":210,"endColumn":16},{"ruleId":"287","severity":1,"message":"349","line":216,"column":7,"nodeType":"289","messageId":"290","endLine":216,"endColumn":12},{"ruleId":"287","severity":1,"message":"350","line":220,"column":7,"nodeType":"289","messageId":"290","endLine":220,"endColumn":12},{"ruleId":"287","severity":1,"message":"304","line":3,"column":24,"nodeType":"289","messageId":"290","endLine":3,"endColumn":34},{"ruleId":"287","severity":1,"message":"351","line":342,"column":7,"nodeType":"289","messageId":"290","endLine":342,"endColumn":12},{"ruleId":"287","severity":1,"message":"352","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":24},{"ruleId":"287","severity":1,"message":"304","line":4,"column":24,"nodeType":"289","messageId":"290","endLine":4,"endColumn":34},{"ruleId":"287","severity":1,"message":"351","line":393,"column":7,"nodeType":"289","messageId":"290","endLine":393,"endColumn":12},{"ruleId":"287","severity":1,"message":"353","line":8,"column":8,"nodeType":"289","messageId":"290","endLine":8,"endColumn":14},{"ruleId":"287","severity":1,"message":"354","line":16,"column":8,"nodeType":"289","messageId":"290","endLine":16,"endColumn":14},{"ruleId":"355","severity":1,"message":"356","line":36,"column":25,"nodeType":"322","endLine":36,"endColumn":66},{"ruleId":"355","severity":1,"message":"356","line":63,"column":25,"nodeType":"322","endLine":63,"endColumn":64},{"ruleId":"355","severity":1,"message":"356","line":68,"column":25,"nodeType":"322","endLine":68,"endColumn":64},{"ruleId":"355","severity":1,"message":"356","line":73,"column":25,"nodeType":"322","endLine":73,"endColumn":64},{"ruleId":"355","severity":1,"message":"356","line":83,"column":25,"nodeType":"322","endLine":83,"endColumn":64},{"ruleId":"355","severity":1,"message":"356","line":89,"column":25,"nodeType":"322","endLine":89,"endColumn":64},{"ruleId":"355","severity":1,"message":"356","line":94,"column":25,"nodeType":"322","endLine":94,"endColumn":64},{"ruleId":"355","severity":1,"message":"356","line":117,"column":29,"nodeType":"322","endLine":117,"endColumn":137},{"ruleId":"355","severity":1,"message":"356","line":122,"column":29,"nodeType":"322","endLine":122,"endColumn":137},{"ruleId":"355","severity":1,"message":"356","line":127,"column":29,"nodeType":"322","endLine":127,"endColumn":137},{"ruleId":"355","severity":1,"message":"356","line":134,"column":29,"nodeType":"322","endLine":134,"endColumn":137},{"ruleId":"287","severity":1,"message":"341","line":8,"column":9,"nodeType":"289","messageId":"290","endLine":8,"endColumn":14},{"ruleId":"287","severity":1,"message":"342","line":10,"column":8,"nodeType":"289","messageId":"290","endLine":10,"endColumn":10},{"ruleId":"287","severity":1,"message":"357","line":11,"column":8,"nodeType":"289","messageId":"290","endLine":11,"endColumn":17},{"ruleId":"287","severity":1,"message":"316","line":17,"column":21,"nodeType":"289","messageId":"290","endLine":17,"endColumn":30},{"ruleId":"287","severity":1,"message":"343","line":30,"column":12,"nodeType":"289","messageId":"290","endLine":30,"endColumn":25},{"ruleId":"307","severity":1,"message":"344","line":67,"column":8,"nodeType":"309","endLine":67,"endColumn":10,"suggestions":"358"},{"ruleId":"287","severity":1,"message":"359","line":69,"column":11,"nodeType":"289","messageId":"290","endLine":69,"endColumn":27},{"ruleId":"287","severity":1,"message":"346","line":133,"column":11,"nodeType":"289","messageId":"290","endLine":133,"endColumn":23},{"ruleId":"287","severity":1,"message":"360","line":214,"column":11,"nodeType":"289","messageId":"290","endLine":214,"endColumn":23},{"ruleId":"287","severity":1,"message":"361","line":218,"column":11,"nodeType":"289","messageId":"290","endLine":218,"endColumn":27},{"ruleId":"287","severity":1,"message":"325","line":373,"column":7,"nodeType":"289","messageId":"290","endLine":373,"endColumn":14},{"ruleId":"287","severity":1,"message":"362","line":415,"column":7,"nodeType":"289","messageId":"290","endLine":415,"endColumn":14},{"ruleId":"287","severity":1,"message":"363","line":13,"column":12,"nodeType":"289","messageId":"290","endLine":13,"endColumn":21},{"ruleId":"287","severity":1,"message":"364","line":157,"column":7,"nodeType":"289","messageId":"290","endLine":157,"endColumn":12},{"ruleId":"355","severity":1,"message":"356","line":11,"column":25,"nodeType":"322","endLine":11,"endColumn":68},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["365"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'InputSkill' is defined but never used.","Identifier","unusedVar","'cookies' is assigned a value but never used.","'user' is assigned a value but never used.","'isKakaoSdkLoaded' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'navigate' is defined but never used.","'data' is defined but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'faEye' is defined but never used.","'faEyeSlash' is defined but never used.","'GoogleLogin' is defined but never used.","'logo' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'responsivePropType' is defined but never used.","'handleContentChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAnnouncement'. Either include it or remove the dependency array.","ArrayExpression",["366"],"'handleUpdateFlag' is assigned a value but never used.",["367"],"'ModifyButton' is assigned a value but never used.","'Nav' is defined but never used.","'Container' is defined but never used.","'setCookie' is assigned a value but never used.","'setSize' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cookies.token', 'handleLogout', 'setUser', and 'userType'. Either include them or remove the dependency array.",["368"],"react/jsx-pascal-case","Imported JSX component Nav_Str must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'NavContainer' is assigned a value but never used.","'LogoImg' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'MypageConatiner' is assigned a value but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",[],[],[],["365"],[],[],"'TravelContent' is assigned a value but never used.","'Badge' is defined but never used.","'iu' is defined but never used.","'addressFields' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cookies.token', 'handleLogout', and 'setUser'. Either include them or remove the dependency array.",["369"],"'validateForm' is assigned a value but never used.",["370"],"'DetailRow' is assigned a value but never used.","'Label' is assigned a value but never used.","'Value' is assigned a value but never used.","'Title' is assigned a value but never used.","'MemberSignUpPage' is defined but never used.","'about4' is defined but never used.","'Footer' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'logoSmall' is defined but never used.",["371"],"'getProfilePicSrc' is assigned a value but never used.","'goToNextStep' is assigned a value but never used.","'goToPreviousStep' is assigned a value but never used.","'Divider' is assigned a value but never used.","'showPopup' is assigned a value but never used.","'Popup' is assigned a value but never used.","no-object-constructor",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"376","fix":"380"},{"desc":"378","fix":"381"},"Update the dependencies array to be: [anno_id, fetchAnnouncement, updateFlag]",{"range":"382","text":"383"},"Update the dependencies array to be: [anno_id, fetchAnnouncement]",{"range":"384","text":"385"},"Update the dependencies array to be: [cookies.token, handleLogout, setUser, userType]",{"range":"386","text":"387"},"Update the dependencies array to be: [cookies.token, handleLogout, setUser]",{"range":"388","text":"389"},{"range":"390","text":"387"},{"range":"391","text":"389"},[2439,2460],"[anno_id, fetchAnnouncement, updateFlag]",[3228,3237],"[anno_id, fetchAnnouncement]",[2273,2275],"[cookies.token, handleLogout, setUser, userType]",[2627,2629],"[cookies.token, handleLogout, setUser]",[2088,2090],[2520,2522]]