[{"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\index.js":"1","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\App.js":"2","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\reportWebVitals.js":"3","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Components\\Navigate.js":"4","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\MainPage.js":"5","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\SignupPage.js":"6","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\SigninPage.js":"7","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\CompanySignupPage.js":"8","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\MemberSignupPage.js":"9","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\GoogleLoginPage.js":"10","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\stores\\index.js":"11","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\stores\\user.store.js":"12","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\MyInfoPage.js":"13","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\InfoChangePage.js":"14","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AnnouncementContentPage.js":"15","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\WritingNewsPage.js":"16","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AnnouncementListPage.js":"17","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\NewPage.js":"18","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\ThemaPage.js":"19","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\ReviewPage.js":"20","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Components\\InputSkill.js":"21","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\RegionPage.js":"22","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\RecommendPage.js":"23","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Components\\Footer.js":"24","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\CompanyInfoChangePage.js":"25","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AboutPage.js":"26","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\RecruitPage.js":"27","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\RecruitViewPage.js":"28","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\WritingReviewPage.js":"29","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\ReviewContentPage.js":"30","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AboutPolicyPage.js":"31","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\WritingRecruitPage.js":"32"},{"size":552,"mtime":1699530756186,"results":"33","hashOfConfig":"34"},{"size":3519,"mtime":1700669069213,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1699530756188,"results":"36","hashOfConfig":"34"},{"size":10652,"mtime":1700566055041,"results":"37","hashOfConfig":"34"},{"size":13731,"mtime":1700461127568,"results":"38","hashOfConfig":"34"},{"size":6647,"mtime":1699789453062,"results":"39","hashOfConfig":"34"},{"size":14878,"mtime":1699892711014,"results":"40","hashOfConfig":"34"},{"size":13865,"mtime":1700549863823,"results":"41","hashOfConfig":"34"},{"size":15976,"mtime":1699928007602,"results":"42","hashOfConfig":"34"},{"size":881,"mtime":1699893377495,"results":"43","hashOfConfig":"34"},{"size":66,"mtime":1699795655167,"results":"44","hashOfConfig":"34"},{"size":437,"mtime":1700535018410,"results":"45","hashOfConfig":"34"},{"size":8115,"mtime":1700656255496,"results":"46","hashOfConfig":"34"},{"size":18794,"mtime":1700535238831,"results":"47","hashOfConfig":"34"},{"size":7803,"mtime":1700459352429,"results":"48","hashOfConfig":"34"},{"size":3813,"mtime":1700669151249,"results":"49","hashOfConfig":"34"},{"size":7435,"mtime":1700458552798,"results":"50","hashOfConfig":"34"},{"size":44590,"mtime":1700666874162,"results":"51","hashOfConfig":"34"},{"size":17361,"mtime":1700458553169,"results":"52","hashOfConfig":"34"},{"size":3750,"mtime":1700670032268,"results":"53","hashOfConfig":"34"},{"size":1558,"mtime":1700458552614,"results":"54","hashOfConfig":"34"},{"size":17353,"mtime":1700458552992,"results":"55","hashOfConfig":"34"},{"size":3421,"mtime":1700564501121,"results":"56","hashOfConfig":"34"},{"size":996,"mtime":1700458552572,"results":"57","hashOfConfig":"34"},{"size":17095,"mtime":1700535238852,"results":"58","hashOfConfig":"34"},{"size":16728,"mtime":1700669082082,"results":"59","hashOfConfig":"34"},{"size":3072,"mtime":1700669189300,"results":"60","hashOfConfig":"34"},{"size":1092,"mtime":1700667265000,"results":"61","hashOfConfig":"34"},{"size":4819,"mtime":1700636861000,"results":"62","hashOfConfig":"34"},{"size":1653,"mtime":1700654806000,"results":"63","hashOfConfig":"34"},{"size":3850,"mtime":1700663438000,"results":"64","hashOfConfig":"34"},{"size":5917,"mtime":1700667210000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"10txgi9",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"69"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"69"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\index.js",[],[],["174","175","176","177","178","179"],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\App.js",["180"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\reportWebVitals.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Components\\Navigate.js",["181","182","183","184","185","186","187","188","189","190"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\MainPage.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],[],"import React, {useState, useCallback, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n//swiper App.css에 추가한후 import\r\nimport {Swiper, SwiperSlide} from 'swiper/react';     //swiper 사용할 import\r\nimport {Autoplay, Pagination} from 'swiper/modules';\r\nimport 'swiper/css';\r\nimport 'swiper/css/pagination';\r\nimport '../App.css';\r\nimport new1 from '../imgs/newcourse-1.png';\r\nimport new2 from '../imgs/newcourse-2.png';\r\nimport new3 from '../imgs/newcourse-3.png';\r\nimport new4 from '../imgs/newcourse-4.png';\r\nimport recommend1 from '../imgs/recommendcourse-1.png';\r\nimport recommend2 from '../imgs/recommendcourse-2.png';\r\nimport Footer from '../Components/Footer';\r\nimport logo from \"../imgs/logo-removebg.png\";\r\n//리뷰 Test 데이터\r\nconst dummyReviews = [\r\n    {\r\n        id: 1,\r\n        title: \"멋진 경험이었습니다!\",\r\n        content: \"가이드분이 너무 친절하셨고, 경치도 환상적이었어요. 다음에 또 방문하고 싶습니다.\",\r\n        author: \"홍길동\",\r\n        date: \"2023-01-01\"\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"가족과 함께한 최고의 여행\",\r\n        content: \"아이들과 함께 갔는데 모두가 즐거워했습니다. 추천해요!\",\r\n        author: \"김철수\",\r\n        date: \"2023-02-15\"\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"다시 오고 싶은 곳\",\r\n        content: \"서비스도 좋았고, 특히 음식이 맛있었습니다. 여행의 즐거움을 더해주는 곳이었어요.\",\r\n        author: \"이영희\",\r\n        date: \"2023-03-20\"\r\n    }\r\n];\r\n\r\n\r\n//===============================페이지 UI========================================\r\n\r\nconst MainPage = () => {\r\n\r\n    return (\r\n        <div>\r\n            <MainContainer>\r\n                <NewCourseContainer>\r\n                    <NewCourseTitle><h1>신규코스</h1></NewCourseTitle>\r\n                    <NewCourseSubTitle>이달의 추천코스</NewCourseSubTitle>\r\n                    <NewCourseImage>\r\n                        <>\r\n                            <Swiper\r\n                                slidesPerView={3}\r\n                                spaceBetween={30}\r\n                                modules={[Pagination, Autoplay]} // Autoplay 모듈 추가\r\n                                className=\"mySwiper\"\r\n                                autoplay={{\r\n                                    delay: 2000, // 2초마다 슬라이드\r\n                                    disableOnInteraction: false // 사용자가 슬라이더를 조작한 후에도 자동 재생 계속\r\n                                }}\r\n                                speed={1300} // 슬라이드 전환 속도를 1.3초로 설정\r\n                                // pagination 속성 제거\r\n                            >\r\n                                <SwiperSlide><img src={new1} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new2} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new3} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new4} style={{width: '340px'}}/></SwiperSlide>\r\n                            </Swiper>\r\n                        </>\r\n                    </NewCourseImage>\r\n                </NewCourseContainer>\r\n                <RecommendCourseContainer>\r\n                    <RecommendCourseTitle><h1>추천 코스</h1></RecommendCourseTitle>\r\n                    <RecommendCourseSubTitle>일자리 및 여행 추천</RecommendCourseSubTitle>\r\n                    <RecommendCourseImage>\r\n                        <>\r\n                            <Swiper\r\n                                slidesPerView={3}\r\n                                spaceBetween={30}\r\n                                modules={[Pagination, Autoplay]} // Autoplay 모듈 추가\r\n                                className=\"mySwiper\"\r\n                                autoplay={{\r\n                                    delay: 2000, // 2초마다 슬라이드\r\n                                    disableOnInteraction: false // 사용자가 슬라이더를 조작한 후에도 자동 재생 계속\r\n                                }}\r\n                                speed={1300} // 슬라이드 전환 속도를 1.3초로 설정\r\n                                // pagination 속성 제거\r\n                            >\r\n                                <SwiperSlide><img src={recommend1} style={{width: '310px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={recommend2} style={{width: '310px'}}/></SwiperSlide>\r\n                                <SwiperSlide>3</SwiperSlide>\r\n                                <SwiperSlide>4</SwiperSlide>\r\n                                <SwiperSlide>5</SwiperSlide>\r\n\r\n                            </Swiper>\r\n                        </>\r\n                    </RecommendCourseImage>\r\n                </RecommendCourseContainer>\r\n                <ThemaCourseContainer>\r\n                    <ThemaCourseTitle><h1>테마별 코스</h1></ThemaCourseTitle>\r\n                    <ThemaCourseSubTitle>원하는 테마별로 분류된 코스</ThemaCourseSubTitle>\r\n                    <ThemaCouseImage>\r\n\r\n                        <>\r\n                            <Swiper\r\n                                slidesPerView={3}\r\n                                spaceBetween={30}\r\n                                modules={[Pagination, Autoplay]} // Autoplay 모듈 추가\r\n                                className=\"mySwiper\"\r\n                                autoplay={{\r\n                                    delay: 2000, // 2초마다 슬라이드\r\n                                    disableOnInteraction: false // 사용자가 슬라이더를 조작한 후에도 자동 재생 계속\r\n                                }}\r\n                                speed={1300} // 슬라이드 전환 속도를 1.3초로 설정\r\n                                // pagination 속성 제거\r\n                            >\r\n                                <SwiperSlide><img src={new1} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new2} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new3} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new4} style={{width: '340px'}}/></SwiperSlide>\r\n                            </Swiper>\r\n                        </>\r\n\r\n                    </ThemaCouseImage>\r\n                </ThemaCourseContainer>\r\n\r\n                <RegionalCourseContainer>\r\n                    <RegionalCourseTitle><h1>지역별 코스</h1></RegionalCourseTitle>\r\n                    <RegionalCourseSubTitle>원하는 테마별로 분류된 코스</RegionalCourseSubTitle>\r\n                    <RegionalCouseImage>\r\n\r\n                        <>\r\n                            <Swiper\r\n                                slidesPerView={3}\r\n                                spaceBetween={30}\r\n                                modules={[Pagination, Autoplay]} // Autoplay 모듈 추가\r\n                                className=\"mySwiper\"\r\n                                autoplay={{\r\n                                    delay: 2000, // 2초마다 슬라이드\r\n                                    disableOnInteraction: false // 사용자가 슬라이더를 조작한 후에도 자동 재생 계속\r\n                                }}\r\n                                speed={1300} // 슬라이드 전환 속도를 1.3초로 설정\r\n                                // pagination 속성 제거\r\n                            >\r\n                                <SwiperSlide><img src={new1} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new2} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new3} style={{width: '340px'}}/></SwiperSlide>\r\n                                <SwiperSlide><img src={new4} style={{width: '340px'}}/></SwiperSlide>\r\n\r\n                            </Swiper>\r\n                        </>\r\n\r\n                    </RegionalCouseImage>\r\n                </RegionalCourseContainer>\r\n                <ReviewContainer>\r\n                    <ReviewTitle>체험 후기</ReviewTitle>\r\n                    <ReviewSubTitle>다양한 체험 후기를 들어보세요</ReviewSubTitle>\r\n                    <ReviewContext>\r\n\r\n                        {dummyReviews.map(review => (\r\n                            <Review\r\n                                key={review.id}\r\n                                title={review.title}\r\n                                content={review.content}\r\n                                author={review.author}\r\n                                date={review.date}\r\n                            />\r\n                        ))}\r\n\r\n                    </ReviewContext>\r\n                </ReviewContainer>\r\n                <Footer/>\r\n            </MainContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\n//==============================================페이지 CSS===================================================\r\n//=================페이지전체 컨테이너==============\r\nconst MainContainer = styled.div`\r\n  font-family: 'Arial', sans-serif;\r\n`\r\n\r\n//==================구글맵 css===================\r\nconst containerStyle = {    //지도크기 css\r\n    width: '100%',\r\n    // height: '400px',\r\n    flex:1\r\n};\r\n\r\nconst GoogleMapContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 800px;\r\n`\r\n// 제목 스타일 공통으로 적용\r\nconst TitleStyle = styled.div`\r\n  font-size: 24px;       // 통일된 글씨 크기\r\n  margin-left: 20px;     // 왼쪽 마진 추가\r\n  background-color: white;\r\n`;\r\n\r\nconst SubTitleStyle = styled.div`\r\n  font-size: 18px;       // 부제목 글씨 크기\r\n  background-color: white;\r\n  margin-top: -10px;     // 제목과의 간격 조정\r\n`;\r\n// =============================================\r\n//==================신규코스 css==================\r\nconst NewCourseContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: 500px;\r\n  border: 1px solid gray;\r\n  padding-left: 50px;\r\n`\r\n\r\nconst NewCourseTitle = styled.div`\r\n  display: flex;\r\n  flex: 2;\r\n  background-color: white;\r\n  margin-top: 30px;\r\n  margin-bottom: -40px;\r\n  color: #D1774C;\r\n`\r\nconst NewCourseSubTitle = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  background-color: white;\r\n  padding-top: 0;\r\n  font-weight: bolder;\r\n`\r\n\r\nconst NewCourseImage = styled.div`\r\n  display: flex;\r\n  flex: 7;\r\n  background-color: white;\r\n`\r\n//==============================================\r\n//==================추천코스 css===================\r\nconst RecommendCourseContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  padding-left: 50px;\r\n`\r\nconst RecommendCourseTitle = styled.div`\r\n  display: flex;\r\n  flex: 2;\r\n  background-color: white;\r\n  margin-top: 30px;\r\n  margin-bottom: -40px;\r\n  color: #D1774C;\r\n`\r\nconst RecommendCourseSubTitle = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  background-color: white;\r\n  font-weight: bolder;\r\n`\r\nconst RecommendCourseImage = styled.div`\r\n  display: flex;\r\n  flex: 4;\r\n`\r\n//==============================================\r\n//==============테마별코스=========================\r\nconst ThemaCourseContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: 500px;\r\n  border: 1px solid gray;\r\n  padding-left: 50px;\r\n`\r\nconst ThemaCourseTitle = styled.div`\r\n  display: flex;\r\n  flex: 2;\r\n  background-color: white;\r\n  margin-top: 30px;\r\n  margin-bottom: -40px;\r\n  color: #D1774C;\r\n`\r\nconst ThemaCourseSubTitle = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  background-color: white;\r\n  font-weight: bolder;\r\n`\r\nconst ThemaCouseImage = styled.div`\r\n  display: flex;\r\n  flex: 7;\r\n`\r\n//==============================================\r\n//==================지역별 코스 css=================\r\nconst RegionalCourseContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: 500px;\r\n  border: 1px solid gray;\r\n  padding-left: 50px;\r\n`\r\nconst RegionalCourseTitle = styled.div`\r\n  display: flex;\r\n  flex: 2;\r\n  background-color: white;\r\n  margin-top: 30px;\r\n  margin-bottom: -40px;\r\n  color: #D1774C;\r\n`\r\nconst RegionalCourseSubTitle = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  background-color: white;\r\n  font-weight: bolder;\r\n`\r\nconst RegionalCouseImage = styled.div`\r\n  display: flex;\r\n  flex: 7;\r\n`\r\n//==============================================\r\n//====================체험후기====================\r\nconst ReviewContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  height: 800px;\r\n  background-color: white;\r\n  border: 1px solid grey;\r\n  padding-left: 50px;\r\n`\r\nconst ReviewTitle = styled.div`\r\n  display: flex;\r\n  flex: 2;\r\n  background-color: white;\r\n  margin-top: 30px;\r\n  margin-bottom: -40px;\r\n  font-size: 40px;\r\n  color: #D1774C;\r\n`\r\nconst ReviewSubTitle = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  background-color: white;\r\n  font-weight: bolder;\r\n`\r\nconst ReviewContext = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 7;\r\n  background-color: white;\r\n`\r\nconst Review = ({ title, content, author, date }) => {\r\n    return (\r\n        <div style={{marginBottom: '20px'}}>\r\n            <h3>{title}</h3>\r\n            <p>{content}</p>\r\n            <p>작성자: {author} | 작성일: {date}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n//==============================================\r\n\r\nexport default MainPage;","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\SignupPage.js",["214","215","216","217","218","219","220"],[],"import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport company from \"../imgs/company.png\"\r\nimport member from \"../imgs/member.png\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\r\nimport kakao from \"../imgs/kakaoRegister.png\";\r\nimport google from \"../imgs/googleRegister.png\";\r\nimport email from \"../imgs/emailRegister.png\"\r\nimport GoogleLogin from \"react-google-login\";\r\nimport logo from \"../imgs/logo2.png\";\r\nimport {Form, InputGroup} from \"react-bootstrap\";\r\nconst SignupPage = (props) => {\r\n    const [showMemberForm, setShowMemberForm] = useState(false);\r\n    const [isKakaoSdkLoaded, setIsKakaoSdkLoaded] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = \"https://developers.kakao.com/sdk/js/kakao.min.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n\r\n        script.onload = () => {\r\n            if (window.Kakao && !window.Kakao.isInitialized()) {\r\n                window.Kakao.init('af3894518c9ad04274d8c7c098885abd');\r\n            }\r\n            setIsKakaoSdkLoaded(true); // SDK 로드 완료 후 상태 업데이트\r\n        };\r\n\r\n        return () => {\r\n            if (document.body.contains(script)) {\r\n                document.body.removeChild(script);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const handleCompanyImageClick = () => {\r\n        navigate(\"/companyRegister\")\r\n    };\r\n\r\n    const handleMemberImageClick = () => {\r\n        setShowMemberForm(true);\r\n    };\r\n\r\n    const handleGoogleRegisterImageClick = () => {\r\n        const clientId = \"234889770604-vcqi694q1kvfblt30ajhq77gsh5s8j2t.apps.googleusercontent.com\";\r\n        const redirectUri = \"http://localhost:3000/googleCallback\";\r\n        const scope = \"https://www.googleapis.com/auth/userinfo.email\";\r\n        const url = `https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&access_type=offline&prompt=consent`;\r\n\r\n        window.location.href = url;\r\n    };\r\n\r\n    const handleEmailRegisterImageClick = () => {\r\n        navigate(\"/memberRegister\")\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setShowMemberForm(false);\r\n    };\r\n\r\n    const handleKakaoRegisterImageClick = () => {\r\n\r\n        if (window.Kakao && window.Kakao.isInitialized()) { // Kakao SDK 초기화 확인\r\n            window.Kakao.Auth.login({\r\n                success: function(authObj) {\r\n                    console.log(authObj); // 인증 객체 확인\r\n\r\n                    window.Kakao.API.request({\r\n                        url: '/v2/user/me',\r\n                        success: function(response) {\r\n                            console.log(response);\r\n                            if (response.kakao_account && response.kakao_account.email) {\r\n                                const email = \"(kakao)\" + response.kakao_account.email;\r\n                                navigate(\"/memberRegister\", { state: { email } });\r\n                            } else {\r\n                                console.log(\"이메일 정보를 가져올 수 없습니다.\");\r\n                            }\r\n                        },\r\n                        fail: function(error) {\r\n                            console.log(error);\r\n                        },\r\n                    });\r\n                },\r\n                fail: function(err) {\r\n                    console.log(err);\r\n                },\r\n            });\r\n        } else {\r\n            console.error(\"Kakao SDK가 아직 로드되지 않았거나 초기화되지 않았습니다.\");\r\n        }\r\n    };\r\n\r\n\r\n    if (!showMemberForm) {\r\n        return (\r\n            <StyledContainer>\r\n                <Title>회원가입</Title>\r\n                <ImageContainer>\r\n                    <UserImg onClick={handleCompanyImageClick}>\r\n                        <SelectImg alt=\"company\" src={company} />\r\n                    </UserImg>\r\n                    <UserImg onClick={handleMemberImageClick}>\r\n                        <SelectImg alt=\"member\" src={member} />\r\n                    </UserImg>\r\n                </ImageContainer>\r\n            </StyledContainer>\r\n        );\r\n    }else if(showMemberForm){\r\n        return (\r\n            <StyledContainer>\r\n                <FormBox>\r\n                    <BackButton onClick={handleBack}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </BackButton>\r\n                    <Title>일반회원가입</Title>\r\n                    <UserImg onClick={handleKakaoRegisterImageClick}>\r\n                        <RegisterSelectImg alt=\"kakao\" src={kakao} />\r\n                    </UserImg>\r\n                    <UserImg onClick={handleGoogleRegisterImageClick}>\r\n                        <RegisterSelectImg alt=\"google\" src={google} />\r\n                    </UserImg>\r\n                    <UserImg onClick={handleEmailRegisterImageClick}>\r\n                        <RegisterEmailImg alt=\"email\" src={email} />\r\n                    </UserImg>\r\n                </FormBox>\r\n            </StyledContainer>\r\n        )\r\n    }\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #ffffff;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  margin-bottom: 80px;\r\n  align-items:center;\r\n  justify-content: center;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserImg = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SelectImg = styled.img`\r\n  height: 45vh;\r\n  width: auto;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst RegisterSelectImg = styled.img`\r\n  height: 10vh;\r\n  width: 500px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst RegisterEmailImg = styled.img`\r\n  height: 8.8vh;\r\n  width: 500px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5em; \r\n  color: #000; \r\n`;\r\n\r\nconst FormBox = styled.div`\r\n  padding: 40px;\r\n  justify-content: center;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-top: 150px;\r\n  position: relative;\r\n`;\r\n\r\nexport default SignupPage;","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\SigninPage.js",["221","222","223","224"],[],"import React, {useEffect, useState} from 'react';\r\nimport {Form, Button, InputGroup} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styled from 'styled-components';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport logo from \"../imgs/logo2.png\";\r\nimport kakao from \"../imgs/kakao.png\"\r\nimport google from \"../imgs/google.png\"\r\nimport company from \"../imgs/company.png\"\r\nimport member from \"../imgs/member.png\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {useUserStore} from \"../stores\";\r\n\r\nconst SigninPage = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showMemberForm, setShowMemberForm] = useState(false);\r\n    const [showCompanyForm, setShowCompanyForm] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const [userId, setUserId] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [providerId, setProviderId] = useState('');\r\n    const [providerPassword, setProviderPassword] = useState('');\r\n\r\n    const [cookies, setCookies] = useCookies();\r\n    const {user, setUser} = useUserStore();\r\n\r\n    const [isKakaoSdkLoaded, setIsKakaoSdkLoaded] = useState(false);\r\n    const [userEmail, setUserEmail] = useState('');\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = \"https://developers.kakao.com/sdk/js/kakao.min.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n\r\n        script.onload = () => {\r\n            if (window.Kakao && !window.Kakao.isInitialized()) {\r\n                window.Kakao.init('af3894518c9ad04274d8c7c098885abd');\r\n            }\r\n            setIsKakaoSdkLoaded(true); // SDK 로드 완료 후 상태 업데이트\r\n        };\r\n\r\n        return () => {\r\n            if (document.body.contains(script)) {\r\n                document.body.removeChild(script);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const handleKakaoLoginImageClick = () => {\r\n\r\n        if (window.Kakao && window.Kakao.isInitialized()) { // Kakao SDK 초기화 확인\r\n            window.Kakao.Auth.login({\r\n                success: function(authObj) {\r\n                    window.Kakao.API.request({\r\n                        url: '/v2/user/me',\r\n                        success: function(response) {\r\n                            const userEmail = response.kakao_account?.email;\r\n                            if (userEmail) {\r\n                                setUserEmail(\"(kakao)\" + userEmail);\r\n                                handleKakaoLogin(\"(kakao)\" + userEmail);\r\n                            } else {\r\n                                console.log(\"이메일 정보를 가져올 수 없습니다.\");\r\n                            }\r\n                        },\r\n                        fail: function(error) {\r\n                            console.log(error);\r\n                        },\r\n                    });\r\n                },\r\n                fail: function(err) {\r\n                    console.log(err);\r\n                },\r\n            });\r\n        } else {\r\n            console.error(\"Kakao SDK가 아직 로드되지 않았거나 초기화되지 않았습니다.\");\r\n        }\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        if(userId.length === 0 || userPassword.length === 0){\r\n            alert('아이디와 비밀번호를 입력하세요');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            userId,\r\n            userPassword\r\n        }\r\n        axios.post(\"http://localhost:8050/api/auth/signIn\", data).then((response) => {\r\n            const responseData = response.data;\r\n            console.log(responseData);\r\n            if(!responseData.result){\r\n                alert('아이디 또는 비밀번호가 일치하지 않습니다. ');\r\n                return;\r\n            }\r\n            const { token, exprTime, user, userType } = responseData.data;\r\n            const expires = new Date();\r\n            expires.setMilliseconds(expires.getMilliseconds() + exprTime);\r\n\r\n            setCookies('token', token, {expires});\r\n            setCookies('userType', userType, {expires});\r\n            setUser(user);\r\n            navigate(\"/\");\r\n        }).catch((error) => {\r\n            alert('로그인에 실패했습니다. ')\r\n        })\r\n    };\r\n\r\n    const handleCompanyLogin = () => {\r\n        if(providerId.length === 0 || providerPassword.length === 0){\r\n            alert('아이디와 비밀번호를 입력하세요');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            providerId,\r\n            providerPassword\r\n        }\r\n        axios.post(\"http://localhost:8050/api/auth/signIn/company\", data).then((response) => {\r\n            const responseData = response.data;\r\n            console.log(responseData);\r\n            if(!responseData.result){\r\n                alert('아이디 또는 비밀번호가 일치하지 않습니다. ');\r\n                return;\r\n            }\r\n            const { token, exprTime, user, userType } = responseData.data;\r\n            const expires = new Date();\r\n            expires.setMilliseconds(expires.getMilliseconds() + exprTime);\r\n\r\n            setCookies('token', token, {expires});\r\n            setCookies('userType', userType, {expires});\r\n            setUser(user);\r\n            navigate(\"/\")\r\n        }).catch((error) => {\r\n            alert('로그인에 실패했습니다. ')\r\n        })\r\n    };\r\n\r\n    const handleKakaoLogin = (userEmail) => {\r\n        axios.post(\"http://localhost:8050/api/auth/signIn/kakao\", { userEmail })\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                if (!responseData.result) {\r\n                    alert('일치하는 사용자를 찾을 수 없습니다.');\r\n                    return;\r\n                }\r\n                const { token, exprTime, user, userType } = responseData.data;\r\n                const expires = new Date();\r\n                expires.setMilliseconds(expires.getMilliseconds() + exprTime);\r\n\r\n                setCookies('token', token, { expires });\r\n                setCookies('userType', userType, { expires });\r\n                setUser(user);\r\n                navigate(\"/\");\r\n            })\r\n            .catch(error => {\r\n                alert('로그인에 실패했습니다.');\r\n            });\r\n    };\r\n\r\n\r\n    const handleSignUp = () => {\r\n        navigate(\"/register\")\r\n    };\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleCompanyImageClick = () => {\r\n        setShowCompanyForm(true);\r\n    };\r\n\r\n    const handleMemberImageClick = () => {\r\n        setShowMemberForm(true);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setShowCompanyForm(false);\r\n        setShowMemberForm(false);\r\n    };\r\n\r\n\r\n    if (!showMemberForm && !showCompanyForm) {\r\n        return (\r\n            <StyledContainer>\r\n                <Title>로그인</Title>\r\n                <ImageContainer>\r\n                    <UserImg onClick={handleCompanyImageClick}>\r\n                        <SelectImg alt=\"company\" src={company} />\r\n                    </UserImg>\r\n                    <UserImg onClick={handleMemberImageClick}>\r\n                        <SelectImg alt=\"member\" src={member} />\r\n                    </UserImg>\r\n                </ImageContainer>\r\n            </StyledContainer>\r\n        );\r\n    }else if(showMemberForm && !showCompanyForm){\r\n        return (\r\n            <StyledContainer>\r\n                <FormBox>\r\n                    <BackButton onClick={handleBack}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </BackButton>\r\n                    <LogoImg src={logo} alt=\"Logo\" />\r\n                    <Form>\r\n                        <StyledFormGroup controlId=\"formBasicId\">\r\n                            <StyledFormControl\r\n                                type=\"text\"\r\n                                placeholder=\"아이디 입력\"\r\n                                onChange={(e) => setUserId(e.target.value)}\r\n                            />\r\n                        </StyledFormGroup>\r\n\r\n                        <StyledFormGroup controlId=\"formBasicPassword\">\r\n                            <InputGroup>\r\n                                <StyledFormControl\r\n                                    type={showPassword ? \"text\" : \"password\"}\r\n                                    placeholder=\"비밀번호 입력\"\r\n                                    onChange={(e) => setUserPassword(e.target.value)}\r\n                                />\r\n                                <InputGroup.Text onClick={togglePasswordVisibility} style={{ borderLeft: 'none', cursor: 'pointer' }}>\r\n                                    <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\r\n                                </InputGroup.Text>\r\n                            </InputGroup>\r\n                        </StyledFormGroup>\r\n\r\n                        <StyledButton variant=\"primary\" type=\"button\" onClick={handleLogin}>\r\n                            로그인\r\n                        </StyledButton>\r\n\r\n                        <Divider>또는</Divider>\r\n                        <UserImg type=\"button\" onClick={handleKakaoLoginImageClick}>\r\n                            <KakaoImg alt=\"kakao\" src={kakao} />\r\n                        </UserImg>\r\n                        <UserImg >\r\n                            <GoogleImg alt=\"google\" src={google} />\r\n                        </UserImg>\r\n                    </Form>\r\n                    <NavigationLinks>\r\n                        <NavLink>아이디 찾기</NavLink>\r\n                        <NavLinkDivider>•</NavLinkDivider>\r\n                        <NavLink href=\"#find-password\">비밀번호 찾기</NavLink>\r\n                        <NavLinkDivider>•</NavLinkDivider>\r\n                        <NavLink onClick={handleSignUp}>회원가입</NavLink>\r\n                    </NavigationLinks>\r\n                </FormBox>\r\n            </StyledContainer>\r\n        )\r\n    }else if(!showMemberForm && showCompanyForm){\r\n        return (\r\n            <StyledContainer>\r\n                <FormBox>\r\n                    <BackButton onClick={handleBack}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </BackButton>\r\n                    <LogoImg src={logo} alt=\"Logo\" />\r\n                    <Form>\r\n                        <StyledFormGroup controlId=\"formBasicId\">\r\n                            <StyledFormControl\r\n                                type=\"text\"\r\n                                placeholder=\"기업 아이디 입력\"\r\n                                onChange={(e) => setProviderId(e.target.value)}\r\n                            />\r\n                        </StyledFormGroup>\r\n\r\n                        <StyledFormGroup controlId=\"formBasicPassword\">\r\n                            <InputGroup>\r\n                                <StyledFormControl\r\n                                    type={showPassword ? \"text\" : \"password\"}\r\n                                    placeholder=\"비밀번호 입력\"\r\n                                    onChange={(e) => setProviderPassword(e.target.value)}\r\n                                />\r\n                                <InputGroup.Text onClick={togglePasswordVisibility} style={{ borderLeft: 'none', cursor: 'pointer' }}>\r\n                                    <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />\r\n                                </InputGroup.Text>\r\n                            </InputGroup>\r\n                        </StyledFormGroup>\r\n\r\n                        <StyledButton variant=\"primary\" type=\"button\" onClick={handleCompanyLogin}>\r\n                            로그인\r\n                        </StyledButton>\r\n                    </Form>\r\n                    <NavigationLinks>\r\n                        <NavLink href=\"#find-id\">아이디 찾기</NavLink>\r\n                        <NavLinkDivider>•</NavLinkDivider>\r\n                        <NavLink href=\"#find-password\">비밀번호 찾기</NavLink>\r\n                        <NavLinkDivider>•</NavLinkDivider>\r\n                        <NavLink onClick={handleSignUp}>회원가입</NavLink>\r\n                    </NavigationLinks>\r\n                </FormBox>\r\n            </StyledContainer>\r\n\r\n        )\r\n\r\n    }\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #ffffff;\r\n`;\r\n\r\nconst FormBox = styled.div`\r\n  padding: 40px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 450px; \r\n  margin-top: 20px;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledFormGroup = styled(Form.Group)`\r\n  margin-bottom: 20px; \r\n`;\r\n\r\nconst StyledFormControl = styled(Form.Control)`\r\n  font-size: 16px; \r\n  padding: 10px; \r\n  \r\n  ::placeholder {\r\n    color: #666; \r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  height: 20vh;\r\n  width: auto;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n  &::before {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  &::after {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst UserImg = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SelectImg = styled.img`\r\n  height: 45vh;\r\n  width: auto;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst KakaoImg = styled.img`\r\n  height: 5.5vh;\r\n  width: auto;\r\n`;\r\n\r\nconst GoogleImg = styled.img`\r\n  height: 7vh;\r\n  width: auto;\r\n`;\r\n\r\nconst NavigationLinks = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 13px;\r\n  font-weight: bolder;\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst NavLink = styled.a`\r\n  text-decoration: none;\r\n  color: #000; \r\n  margin: 0 10px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst NavLinkDivider = styled.span`\r\n  color: #000; \r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5em; \r\n  color: #000; \r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  margin-bottom: 80px;\r\n  align-items:center;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n\r\n\r\nexport default SigninPage;\r\n","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\CompanySignupPage.js",["225","226"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\MemberSignupPage.js",["227","228"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Form, Button, InputGroup, Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport logo from \"../imgs/logo2.png\";\r\n\r\nconst MemberSignUpPage = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [isKakaoOrGoogleEmail, setIsKakaoOrGoogleEmail] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (location.state && location.state.email) {\r\n            setFormData(prevFormData => ({\r\n                ...prevFormData,\r\n                userEmail: location.state.email\r\n            }));\r\n            setIsKakaoOrGoogleEmail(true);\r\n        }\r\n    }, [location]);\r\n\r\n    const [showSecondPart, setShowSecondPart] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        userId: '',\r\n        userName: '',\r\n        userEmail: '',\r\n        userPassword: '',\r\n        userPasswordCheck: '',\r\n        userGender: '',\r\n        userInfo: '',\r\n        userPrefer: '',\r\n        userPhone: '',\r\n        userAddress: '',\r\n        userProfile: ''\r\n    });\r\n    const [addressFields, setAddressFields] = useState({\r\n        postalCode: '',\r\n        address: '',\r\n        detailAddress: ''\r\n    });\r\n\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        };\r\n    }, []);\r\n\r\n    const searchAddress = () => {\r\n        new window.daum.Postcode({\r\n            oncomplete: function(data) {\r\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\r\n                const fullAddress = {\r\n                    postalCode: data.zonecode,\r\n                    address: addr,\r\n                    detailAddress: ''\r\n                };\r\n                setAddressFields(fullAddress);\r\n            }\r\n        }).open();\r\n    };\r\n    const validateForm = () => {\r\n        let errors = {};\r\n\r\n        // 아이디 유효성 검사\r\n        if (formData.userId.length < 4 || formData.userId.length > 12) {\r\n            errors.userId = \"아이디는 4자 이상 12자 이하로 입력해주세요.\";\r\n        }\r\n\r\n        // 이름 유효성 검사\r\n        if (!formData.userName) {\r\n            errors.userName = \"이름을 입력해주세요.\";\r\n        }\r\n\r\n        // 이메일 유효성 검사\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(formData.userEmail)) {\r\n            errors.userEmail = \"올바른 이메일 주소를 입력해주세요.\";\r\n        }\r\n\r\n        // 비밀번호 유효성 검사\r\n        const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9]).{4,12}$/;\r\n        if (!passwordPattern.test(formData.userPassword)) {\r\n            errors.userPassword = \"비밀번호는 4~12자의 영문 대소문자, 숫자로만 입력해야 합니다.\";\r\n        }\r\n\r\n        // 비밀번호 확인 검사\r\n        if (formData.userPassword !== formData.userPasswordCheck) {\r\n            errors.userPasswordCheck = \"비밀번호가 일치하지 않습니다.\";\r\n        }\r\n\r\n        // 휴대폰 번호 유효성 검사\r\n        const phonePattern = /^[0-9]{10,11}$/;\r\n        if (!phonePattern.test(formData.userPhone)) {\r\n            errors.userPhone = \"올바른 휴대폰 번호를 입력해주세요.\";\r\n        }\r\n\r\n        // 선호 지역 유효성 검사\r\n        if (!formData.userPrefer) {\r\n            errors.userPrefer = \"선호 지역을 입력해주세요.\";\r\n        }\r\n\r\n        if (!formData.userGender) {\r\n            errors.userGender = \"성별을 선택해주세요.\";\r\n        }\r\n\r\n        // 자기소개 유효성 검사\r\n        if (!formData.userInfo) {\r\n            errors.userInfo = \"자기소개를 입력해주세요.\";\r\n        }\r\n\r\n        console.log(errors); // 오류 객체 출력\r\n\r\n        console.log(Object.keys(errors).length);\r\n\r\n        setValidationErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleAddressChange = (e) => {\r\n        setAddressFields({ ...addressFields, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setShowSecondPart(true);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        if (showSecondPart) {\r\n            setShowSecondPart(false);\r\n        } else {\r\n            navigate(-1);\r\n        }\r\n    };\r\n\r\n    const handleSignUp = (event) => {\r\n        event.preventDefault();\r\n        if (validateForm()) {\r\n            const combinedAddress = `${addressFields.postalCode} ${addressFields.address} ${addressFields.detailAddress}`.trim();\r\n            const signUpData = {\r\n                ...formData,\r\n                userAddress: combinedAddress\r\n            };\r\n\r\n            axios.post('http://localhost:8050/api/auth/signUp', signUpData)\r\n                .then(response => {\r\n                    console.log(\"회원가입 성공: \", response.data);\r\n                    navigate(\"/login\");\r\n                })\r\n                .catch(error => {\r\n                    // 에러 처리\r\n                    console.error(\"회원가입 실패: \", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <FormBox>\r\n                <BackButton onClick={handleBack}>\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </BackButton>\r\n                <LogoImg src={logo} alt=\"Logo\" />\r\n                <Form onSubmit={handleSignUp}>\r\n                    {!showSecondPart ? (\r\n                        <>\r\n                            <StyledFormGroup controlId=\"formBasicUsername\">\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"아이디\"\r\n                                    name=\"userId\"\r\n                                    value={formData.userId}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.userId && <ErrorText>{validationErrors.userId}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicName\">\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"이름\"\r\n                                    name=\"userName\"\r\n                                    value={formData.userName}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.userName && <ErrorText>{validationErrors.userName}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicEmail\">\r\n                                <StyledFormControl\r\n                                    type=\"email\"\r\n                                    placeholder=\"이메일\"\r\n                                    name=\"userEmail\"\r\n                                    value={formData.userEmail}\r\n                                    onChange={handleChange}\r\n                                    disabled={isKakaoOrGoogleEmail}\r\n                                />\r\n                                {validationErrors.userEmail && <ErrorText>{validationErrors.userEmail}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicPassword\">\r\n                                <StyledFormControl\r\n                                    type=\"password\"\r\n                                    placeholder=\"비밀번호\"\r\n                                    name=\"userPassword\"\r\n                                    value={formData.userPassword}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.userPassword && <ErrorText>{validationErrors.userPassword}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicPasswordCheck\">\r\n                                <StyledFormControl\r\n                                    type=\"password\"\r\n                                    placeholder=\"비밀번호 확인\"\r\n                                    name=\"userPasswordCheck\"\r\n                                    value={formData.userPasswordCheck}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.userPasswordCheck && <ErrorText>{validationErrors.userPasswordCheck}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicPhone\">\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"전화번호(-빼고 입력)\"\r\n                                    name=\"userPhone\"\r\n                                    value={formData.userPhone}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.userPhone && <ErrorText>{validationErrors.userPhone}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledButton variant=\"secondary\" onClick={handleNext}>\r\n                                다음\r\n                            </StyledButton>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <StyledFormGroup>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <StyledFormControl\r\n                                            type=\"text\"\r\n                                            placeholder=\"우편번호\"\r\n                                            name=\"postalCode\"\r\n                                            value={addressFields.postalCode}\r\n                                            onChange={handleAddressChange}\r\n                                            disabled\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"auto\">\r\n                                        <Button variant=\"outline-secondary\" onClick={searchAddress}>\r\n                                            검색\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </StyledFormGroup>\r\n                            <StyledFormGroup>\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"주소\"\r\n                                    name=\"address\"\r\n                                    value={addressFields.address}\r\n                                    onChange={handleAddressChange}\r\n                                    disabled\r\n                                />\r\n                            </StyledFormGroup>\r\n                            <StyledFormGroup>\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"상세주소\"\r\n                                    name=\"detailAddress\"\r\n                                    value={addressFields.detailAddress}\r\n                                    onChange={handleAddressChange}\r\n                                />\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicPrefer\">\r\n                                <StyledFormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"선호 지역\"\r\n                                    name=\"userPrefer\"\r\n                                    value={formData.userPrefer}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {validationErrors.userPrefer && <ErrorText>{validationErrors.userPrefer}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicGender\">\r\n                                <Form.Control as=\"select\" name=\"userGender\" value={formData.userGender} onChange={handleChange}>\r\n                                    <option value=\"\">성별 선택</option>\r\n                                    <option value=\"male\">남성</option>\r\n                                    <option value=\"female\">여성</option>\r\n                                </Form.Control>\r\n                                {validationErrors.userGender && <ErrorText>{validationErrors.userGender}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledFormGroup controlId=\"formBasicIntroduction\">\r\n                                <StyledFormControl\r\n                                    as=\"textarea\"\r\n                                    placeholder=\"자기소개\"\r\n                                    name=\"userInfo\"\r\n                                    value={formData.userInfo}\r\n                                    onChange={handleChange}\r\n                                    rows={3}\r\n                                />\r\n                                {validationErrors.userInfo && <ErrorText>{validationErrors.userInfo}</ErrorText>}\r\n                            </StyledFormGroup>\r\n\r\n                            <StyledButton variant=\"primary\" type=\"submit\">\r\n                                회원가입\r\n                            </StyledButton>\r\n                        </>\r\n                    )}\r\n                </Form>\r\n            </FormBox>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #ffffff;\r\n`;\r\n\r\nconst FormBox = styled.div`\r\n  padding: 40px;\r\n  justify-content: center;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 450px;\r\n  margin-top: 150px;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledFormGroup = styled(Form.Group)`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StyledFormControl = styled(Form.Control)`\r\n  font-size: 16px;\r\n  padding: 10px;\r\n\r\n  ::placeholder {\r\n    color: #666;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  height: 18vh;\r\n  width: auto;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5em;\r\n  color: #000;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  margin-bottom: 40px;\r\n  align-items:center;\r\n  justify-content: center;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  font-family: \"Berlin Sans FB\",fantasy;\r\n  color: #996666;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  color: red;\r\n  font-size: 12px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport default MemberSignUpPage;\r\n","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\AuthPage\\GoogleLoginPage.js",["229"],[],"import { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport MemberSignUpPage from \"./MemberSignupPage\";\r\n\r\nconst GoogleLoginPage = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const urlParams = new URLSearchParams(location.search);\r\n        const code = urlParams.get('code');\r\n        console.log(code)\r\n\r\n        if (code) {\r\n            axios.post('http://localhost:8050/api/auth/google', { code })\r\n                .then(response => {\r\n                    navigate('/memberRegister', { state: { email: response.data.email } });\r\n                })\r\n                .catch(error => console.error(error));\r\n        }\r\n    }, [location, navigate]);\r\n\r\n    return <div>Google 인증 중...</div>;\r\n};\r\n\r\nexport default GoogleLoginPage;\r\n","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\stores\\index.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\stores\\user.store.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\MyInfoPage.js",["230","231","232","233","234","235"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\InfoChangePage.js",["236","237","238","239","240","241"],[],"import React, {useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport defaultProfilePic from '../imgs/default_profile.png';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {useUserStore} from \"../stores\";\r\nimport axios from \"axios\";\r\nimport {Badge} from \"react-bootstrap\";\r\nimport logo from \"../imgs/gwanghui.jpg\";\r\nimport iu from \"../imgs/iu3.png\"\r\nimport logoSmall from \"../imgs/logo2.png\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faCamera} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst InfoChangePage = (props) => {\r\n    const navigate = useNavigate();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\r\n    const { user, setUser } = useUserStore();\r\n    const userType = cookies.userType;\r\n    const [step, setStep] = useState(1);\r\n\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [passwordConfirmed, setPasswordConfirmed] = useState(false);\r\n\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [previewImage, setPreviewImage] = useState(null);\r\n\r\n    const fileInputRef = useRef(null);\r\n\r\n    const [addressFields, setAddressFields] = useState({\r\n        postalCode: '',\r\n        address: '',\r\n        detailAddress: ''\r\n    });\r\n\r\n    const [userInfo, setUserInfo] = useState(user.userInfo || '');\r\n    const [userAddress, setUserAddress] = useState(user.userAddress || '');\r\n    const [userPrefer, setUserPrefer] = useState(user.userPrefer || '');\r\n    const [userGender, setUserGender] = useState(user.userGender || '');\r\n    const [userPhone, setUserPhone] = useState(user.userPhone || '');\r\n\r\n    useEffect(() => {\r\n        if (cookies.token) {\r\n            axios.get('http://localhost:8050/api/auth/currentUser', {\r\n                headers: {\r\n                    Authorization: `Bearer ${cookies.token}`\r\n                }\r\n            }).then(response => {\r\n                console.log(cookies.token)\r\n                // 토큰이 유효한 경우\r\n                const fetchedUser = response.data;\r\n                console.log(fetchedUser)\r\n                setUser(fetchedUser);\r\n            }).catch(error => {\r\n                // 토큰이 유효하지 않은 경우\r\n                console.error(\"Token verification failed:\", error);\r\n                handleLogout();\r\n            });\r\n        }\r\n\r\n        const script = document.createElement('script');\r\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        };\r\n    }, []);\r\n    const handlePasswordConfirm = async () => {\r\n        try {\r\n            const token = cookies.token;\r\n            if (!token) {\r\n                alert('로그인을 다시 해주세요.');\r\n                handleLogout();\r\n                return;\r\n            }\r\n            const response = await axios.post('http://localhost:8050/api/auth/verifyPassword', { userPassword, token });\r\n            if (response.data.isValid) {\r\n                setPasswordConfirmed(true);\r\n                setStep(1);\r\n            } else {\r\n                alert('비밀번호가 일치하지 않습니다.');\r\n            }\r\n        } catch (error) {\r\n            alert('잠시후 다시 시도해주세요');\r\n        }\r\n    };\r\n\r\n    const searchAddress = () => {\r\n        new window.daum.Postcode({\r\n            oncomplete: function(data) {\r\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\r\n                setAddressFields({\r\n                    postalCode: data.zonecode,\r\n                    address: addr,\r\n                    detailAddress: ''\r\n                });\r\n                setUserAddress(addr);\r\n            }\r\n        }).open();\r\n    };\r\n\r\n\r\n    const handleLogout = () => {\r\n        removeCookie('token');\r\n        setUser(null);\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const triggerFileInput = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setProfileImage(file);\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewImage(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const validateForm = () => {\r\n        let errors = {};\r\n\r\n        if (!userInfo) {\r\n            errors.userInfo = \"1\";\r\n        }\r\n\r\n        if (!userPrefer) {\r\n            errors.userPrefer = \"2\";\r\n        }\r\n\r\n        if (!userPhone) {\r\n            errors.userPhone = \"3\";\r\n        }\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const uploadProfileImage = async () => {\r\n        if (!profileImage) return null;\r\n\r\n        const formData = new FormData();\r\n        formData.append('profileImage', profileImage);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8050/api/uploadProfileImage', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            return response.data.imageUrl;\r\n        } catch (error) {\r\n            console.error('Error uploading profile image:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n\r\n    const handleSaveChanges = async () => {\r\n        const imageUrl = await uploadProfileImage();\r\n\r\n        const updatedInfo = {\r\n            userInfo: userInfo,\r\n            userAddress: userAddress,\r\n            userPrefer: userPrefer,\r\n            userGender: userGender,\r\n            userPhone: userPhone,\r\n            userProfile: imageUrl\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8050/api/auth/updateUserInfo', updatedInfo, {\r\n                headers: {\r\n                    Authorization: `Bearer ${cookies.token}`\r\n                }\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                alert('정보가 성공적으로 업데이트되었습니다.');\r\n                window.location.href = \"/\";\r\n            } else {\r\n                alert('정보 업데이트에 실패했습니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating user information:', error);\r\n            alert('업데이트 중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n\r\n    const goToNextStep = () => {\r\n        setStep(2);\r\n    };\r\n\r\n    const goToPreviousStep = () => {\r\n        setStep(1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        navigate(\"/MyInfo\");\r\n    };\r\n\r\n    const handleUserInfoChange = (e) => {\r\n        setUserInfo(e.target.value);\r\n    };\r\n\r\n    const handleAddressChange = (e) => {\r\n        setUserAddress(e.target.value);\r\n    };\r\n\r\n    const handlePreferredAreaChange = (e) => {\r\n        setUserPrefer(e.target.value);\r\n    };\r\n\r\n    const handleGenderChange = (e) => {\r\n        setUserGender(e.target.value);\r\n    };\r\n\r\n    const handlePhoneNumberChange = (e) => {\r\n        setUserPhone(e.target.value);\r\n    };\r\n\r\n    const getProfilePic = () => {\r\n        if(userType === \"company\"){\r\n            if (user.providerProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.providerProfile) {\r\n                return defaultProfilePic;\r\n            }\r\n            return user.providerProfile;\r\n        }else{\r\n            if (user.userProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.userProfile) {\r\n                return defaultProfilePic;\r\n            }\r\n            return user.userProfile;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <BoxContainer>\r\n                <ImageBox>\r\n                    <LargeImage src={logo} alt=\"logo\" />\r\n                </ImageBox>\r\n                {passwordConfirmed === false && (\r\n                    <InfoBox>\r\n                        <BackButton onClick={handleBack}>\r\n                            <FontAwesomeIcon icon={faArrowLeft} />\r\n                        </BackButton>\r\n                        <EditInfoTitle>정보 수정</EditInfoTitle>\r\n                        <ProfileEditSection>\r\n                            <ImageEditContainer>\r\n                                <ProfileImagePreview src={getProfilePic()} alt=\"Profile Preview\" />\r\n                            </ImageEditContainer>\r\n                            <Name>{user.userName + \"님\" || 'No Name'}</Name>\r\n                            <Email>{user.userEmail || 'No Email'}</Email>\r\n                            <Divider3>비밀번호 확인</Divider3>\r\n                            <InfoSection>\r\n                                <PasswordInput\r\n                                    type=\"password\"\r\n                                    value={userPassword}\r\n                                    onChange={(e) => setUserPassword(e.target.value)}\r\n                                    placeholder=\"비밀번호를 입력하세요\"\r\n                                />\r\n                            </InfoSection>\r\n                            <SaveChangesButton onClick={handlePasswordConfirm}>확인</SaveChangesButton>\r\n                        </ProfileEditSection>\r\n                    </InfoBox>\r\n                )}\r\n                {passwordConfirmed && step === 1 && (\r\n                    <InfoBox>\r\n                        <BackButton onClick={handleBack}>\r\n                            <FontAwesomeIcon icon={faArrowLeft} />\r\n                        </BackButton>\r\n                        <EditInfoTitle>정보 수정</EditInfoTitle>\r\n                        <ProfileEditSection>\r\n                            <ImageEditContainer>\r\n                                <ProfileImagePreview src={previewImage || getProfilePic()} alt=\"Profile Preview\" />\r\n                                <CameraIconLabel onClick={triggerFileInput}>\r\n                                    <FontAwesomeIcon icon={faCamera} />\r\n                                </CameraIconLabel>\r\n                                <HiddenFileInput\r\n                                    type=\"file\"\r\n                                    ref={fileInputRef}\r\n                                    onChange={handleImageChange}\r\n                                />\r\n                            </ImageEditContainer>\r\n                            <Name>{user.userName + \"님\" || 'No Name'}</Name>\r\n                            <Email>{user.userEmail || 'No Email'}</Email>\r\n                            <Divider>자기소개</Divider>\r\n                            <SelfIntroductionTextarea\r\n                                value={userInfo}\r\n                                onChange={handleUserInfoChange}\r\n                                placeholder=\"자기소개\"\r\n                            />\r\n                        </ProfileEditSection>\r\n                        <SaveChangesButton onClick={goToNextStep}>다음</SaveChangesButton>\r\n                    </InfoBox>\r\n                )}\r\n                {passwordConfirmed && step === 2 && (\r\n                    <InfoBox>\r\n                        <BackButton onClick={goToPreviousStep}>\r\n                            <FontAwesomeIcon icon={faArrowLeft} />\r\n                        </BackButton>\r\n                        <LogoImg src={logoSmall} alt=\"Logo\" />\r\n                        <InfoSection>\r\n                            <Divider2>주소</Divider2>\r\n                            <AddressContainer>\r\n                                <AddressInput\r\n                                    type=\"text\"\r\n                                    value={userAddress}\r\n                                    onChange={handleAddressChange}\r\n                                    placeholder=\"주소\"\r\n                                />\r\n                                <SearchButton onClick={searchAddress}>\r\n                                    검색\r\n                                </SearchButton>\r\n                            </AddressContainer>\r\n                            <Divider2>선호 지역</Divider2>\r\n                            <PreferredAreaInput\r\n                                type=\"text\"\r\n                                value={userPrefer}\r\n                                onChange={handlePreferredAreaChange}\r\n                                placeholder=\"선호 지역\"\r\n                            />\r\n                            <Divider2>성별</Divider2>\r\n                            <GenderSelect\r\n                                value={userGender}\r\n                                onChange={handleGenderChange}\r\n                            >\r\n                                <option value=\"\">성별 선택</option>\r\n                                <option value=\"male\">남성</option>\r\n                                <option value=\"female\">여성</option>\r\n                            </GenderSelect>\r\n                            <Divider2>전화번호</Divider2>\r\n                            <PhoneNumberInput\r\n                                type=\"text\"\r\n                                value={userPhone}\r\n                                onChange={handlePhoneNumberChange}\r\n                                placeholder=\"전화번호\"\r\n                            />\r\n                        </InfoSection>\r\n                        <SaveChangesButton onClick={handleSaveChanges}>저장</SaveChangesButton>\r\n                    </InfoBox>\r\n                )}\r\n            </BoxContainer>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 1000px; \r\n  margin: 0 auto;\r\n`;\r\n\r\nconst InfoBox = styled.div`\r\n  width: 90%;\r\n  max-width: 500px;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n`;\r\n\r\nconst EditInfoTitle = styled.h2`\r\n  text-align: center;\r\n  margin-top: 0;\r\n  margin-bottom: 20px; \r\n  color: #381E1F; \r\n  font-size: 25px;\r\n  font-weight: bold;\r\n`;\r\n\r\n\r\nconst BackButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5em;\r\n  color: #000;\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  height: 20vh;\r\n  width: auto;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  height: 90%;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LargeImage = styled.img`\r\n  max-width: 100%;\r\n  max-height: 90%;\r\n  border-radius: 10px;\r\n  object-fit: cover; \r\n`;\r\n\r\nconst Name = styled.h2`\r\n  margin: 0;\r\n  margin-top: 20px;\r\n  color: #381E1F;\r\n`;\r\n\r\nconst Email = styled.p`\r\n  color: gray;\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    margin-left: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n  &::before {\r\n    margin-right: 10px;\r\n  }\r\n\r\n`;\r\n\r\nconst Divider2 = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  margin-bottom: 10px;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    margin-left: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n`;\r\n\r\nconst Divider3 = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  margin-top: 40px;\r\n  margin-bottom: 10px;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    margin-left: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n  display: block;\r\n  width: 80%;\r\n  text-align: center;\r\n  margin-top: 35px;\r\n  margin-bottom: 35px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  border: 1px solid #ccc;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nconst SelfIntroductionTextarea = styled.textarea`\r\n  width: 100%;\r\n  height: 120px; \r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  border: 1px solid #ccc;\r\n  resize: none;\r\n  font-size: 15px;\r\n  color: #333;\r\n  background-color: #f7f7f7; \r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &:focus {\r\n    outline: none; \r\n    border-color: #F7E600; \r\n  }\r\n`;\r\nconst ProfileEditSection = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ProfileImagePreview = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst SaveChangesButton = styled.button`\r\n  padding: 8px 12px;\r\n  border-radius: 20px;\r\n  background-color: #F7E600;\r\n  color: #381E1F;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  margin-top: 10px;\r\n  &:hover {\r\n    background-color: #e6d700;\r\n  }\r\n`;\r\n\r\nconst ImageEditContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CameraIconLabel = styled.label`\r\n  position: absolute;\r\n  bottom: 0;\r\n  transform: translate(50%, 50%);\r\n  cursor: pointer;\r\n  background-color: white; \r\n  border-radius: 50%;\r\n  padding: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); \r\n`;\r\n\r\nconst HiddenFileInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst AddressContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n  width: 80%; \r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  margin-left: 10px; \r\n  padding: 8px 12px; \r\n  border: 1px solid #ccc; \r\n  background-color: white;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f7f7f7; \r\n  }\r\n`;\r\n\r\nconst AddressInput = styled.input`\r\n  display: block;\r\n  width: 60%;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nconst PreferredAreaInput = styled.input`\r\n  display: block;\r\n  width: 60%;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nconst GenderSelect = styled.select`\r\n  display: block;\r\n  width: 60%;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nconst PhoneNumberInput = styled.input`\r\n  display: block;\r\n  width: 60%;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nexport default InfoChangePage;\r\n","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AnnouncementContentPage.js",["242","243","244","245","246","247"],[],"import React, { useEffect, useState } from 'react';\r\nimport {useNavigate, useParams} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport {responsivePropType} from \"react-bootstrap/createUtilityClasses\";\r\nimport axios from \"axios\";\r\n\r\nconst AnnouncementContentPage = () => {\r\n    const { anno_id } = useParams();\r\n    const [announcement, setAnnouncement] = useState(null);\r\n    const writer = '관리자';\r\n    const navigate = useNavigate();\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [modifiedContent, setModifiedContent] = useState('');\r\n    const [updateFlag, setUpdateFlag] = useState(false);\r\n\r\n    // 수정 버튼 클릭 시 수정 모드 활성화\r\n    const activateEditMode = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    // 수정 취소 시 수정 모드 비활성화 및 내용 초기화\r\n    const cancelEdit = () => {\r\n        setIsEditing(false);\r\n        setModifiedContent(announcement.anno_content); // 수정된 내용을 이전 내용으로 초기화\r\n    };\r\n\r\n    // 글 내용이 수정될 때마다 상태 업데이트\r\n    const handleContentChange = (e) => {\r\n        setModifiedContent(e.target.value);\r\n    };\r\n\r\n    //삭제 물어보는메서드\r\n    const confirmDelete = () => {\r\n        const isConfirmed = window.confirm('삭제하시겠습니까?');\r\n        if (isConfirmed) {\r\n            deleteAnnouncement();\r\n        }\r\n    };\r\n\r\n    //삭제 메서드\r\n    const deleteAnnouncement = async () => {\r\n        try {\r\n            const response = await axios.delete(`http://localhost:8050/api/announcements/${anno_id}`);\r\n            if (response.status === 200) {\r\n                alert(\"삭제 되었습니다.\");\r\n                navigate(\"/announcementlist\");\r\n            } else {\r\n                throw new Error('Failed to delete announcement');\r\n            }\r\n        } catch(error) {\r\n            console.error('error', error);\r\n        }\r\n    };\r\n\r\n    //수정 메서드\r\n    const saveEdit = async () => {\r\n        const modifiedData = {\r\n            anno_content: modifiedContent,\r\n        };\r\n        try {\r\n            const response = await axios.put(`http://localhost:8050/api/announcements/${anno_id}`,modifiedData)\r\n\r\n            if (response.status ===200) {\r\n                alert(\"수정 되었습니다.\");\r\n                setUpdateFlag((prevFlag) => !prevFlag);\r\n            } else {\r\n                throw new Error('Failed to modify announcement');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error modifying announcement: ', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (updateFlag) {\r\n            setIsEditing(false);\r\n        }\r\n        fetchAnnouncement();\r\n    }, [anno_id, updateFlag]);\r\n\r\n    // 수정되었을 때 호출되는 함수\r\n    const handleUpdateFlag = () => {\r\n        setUpdateFlag((prevFlag) => !prevFlag);\r\n    };\r\n\r\n    const fetchAnnouncement = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8050/api/announcements/${anno_id}`)\r\n            if (response.status !== 200 ) {\r\n                throw new Error('Failed to fetch announcement content');\r\n            }\r\n            const data = response.data;\r\n            setAnnouncement(data);\r\n            setModifiedContent(data.anno_content);\r\n            console.log('Announcement Content: ', data);\r\n        } catch (error) {\r\n            console.error('Error fetching announcement content: ', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAnnouncement();\r\n    }, [anno_id]);\r\n\r\n\r\n    if (!announcement) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <NoticeTitleContainer>공지사항</NoticeTitleContainer>\r\n            <MiddleContainer>\r\n\r\n                <Title>\r\n                    <h2>글 제목 : {announcement.anno_title}</h2>\r\n                    <h6>조회수 : {announcement.anno_views}</h6>\r\n                </Title>\r\n                <WriterContainer>\r\n                    <h6>작성자 : {writer} </h6>\r\n                </WriterContainer>\r\n                <ContentContainer>\r\n                    {isEditing ? (\r\n                        // 수정 모드일 때 textarea로 변경\r\n                        <textarea\r\n                            value={modifiedContent}\r\n                            onChange={(e) => setModifiedContent(e.target.value)}\r\n                            rows={10}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                    ) : (\r\n                        // 수정 모드가 아닐 때는 <p> 태그로 표시\r\n                        <p>{announcement.anno_content}</p>\r\n                    )}\r\n                </ContentContainer>\r\n            </MiddleContainer>\r\n            <ButtonContainer>\r\n                {isEditing ? (\r\n                    // 수정 모드일 때 저장 및 취소 버튼 표시\r\n                    <>\r\n                        <SaveButton onClick={saveEdit}>저장</SaveButton>\r\n                        <CancelButton onClick={cancelEdit}>취소</CancelButton>\r\n                    </>\r\n                ) : (\r\n\r\n                    // 수정 모드가 아닐 때 수정 버튼 표시\r\n                    <EditButton onClick={activateEditMode}>수정</EditButton>\r\n                )}\r\n                <DeleteButton onClick={confirmDelete}>삭제</DeleteButton>\r\n            </ButtonContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  height: 700px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MiddleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 900px;\r\n  height: 500px;\r\n  background-color: #f8f8f8; /* Light gray background */\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow */\r\n  padding: 20px; /* Add some padding */\r\n  margin-top: 20px; /* Add space at the top */\r\n`;\r\n\r\nconst NoticeTitleContainer = styled.div`\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  width: 800px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst EditButton = styled.button`\r\n  background-color: #007bff;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 10px;\r\n  width: 80px;\r\n  height: 30px;\r\n  margin-right: 1rem;\r\n`;\r\nconst Title = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  margin-left: 2rem;\r\n  margin-right: 2rem;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst WriterContainer = styled.div`\r\n  display: flex;\r\n  font-size: 20px;\r\n  flex: 3;\r\n  align-items: center;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  display: flex;\r\n  flex: 4;\r\n  font-size: 20px;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 50px;\r\n  width: 900px;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst SaveButton = styled.button`\r\n  background-color: #28a745;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 10px;\r\n  width: 80px;\r\n  height: 30px;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst CancelButton = styled.button`\r\n  background-color: #dc3545;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 10px;\r\n  width: 80px;\r\n  height: 30px;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  background-color: #ff3b30; /* Red color */\r\n  border: none;\r\n  color: white;\r\n  border-radius: 10px;\r\n  margin-right: 1rem;\r\n  width: 80px;\r\n  height: 30px;\r\n`;\r\n\r\nconst ModifyButton = styled.button`\r\n  background-color: #007bff; /* Blue color */\r\n  border: none;\r\n  color: white;\r\n  border-radius: 10px;\r\n  width: 80px;\r\n  height: 30px;\r\n`;\r\n\r\nexport default AnnouncementContentPage;\r\n","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\WritingNewsPage.js",["248"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AnnouncementListPage.js",["249","250","251"],[],"import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport navigate from \"../Components/Navigate\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport data from \"bootstrap/js/src/dom/data\";\nconst AnnouncementListPage = (props) => {\n    const navigate = useNavigate();\n    const [announcements, setAnnouncements] = useState([]);\n    //페이지 시작번호\n    const [currentPage, setCurrentPage] = useState(1);\n    //최대 5개까지만 목록에 표시\n    const itemsPerPage = 5;\n    //글 작성 버튼 클릭시 작성페이지로 이동\n    const WritingNews = () => {\n        navigate(\"/WritingNewsPage\");\n    }\n    // 전체 공지사항 목록에서 현재 페이지에 표시할 목록만 추출\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItems = announcements.slice(indexOfFirstItem, indexOfLastItem);\n    // 글 번호 고유Id값\n     // 글 제목 클릭시 상세내용 페이지 이동\n    const viewAnnouncement = async (annoId) => {\n        try {\n            const response = await axios.get(`http://localhost:8050/api/announcements/${annoId}`);\n            const data = response.data;\n\n            await axios.put(`http://localhost:8050/api/announcements/${annoId}/increaseViews`);\n\n            navigate(`/AnnouncementContent/${annoId}`);\n        } catch (error) {\n            console.error('Error fetching or updating announcement:', error);\n        }\n    };\n\n\n    //글 목록 띄우기\n    useEffect(() => {\n        // API 호출을 통해 공지사항 목록 가져오기\n        axios.get('http://localhost:8050/api/announcements')\n            .then(response => {\n\n                // 받아온 목록을 오름차순으로 정렬\n                const reversedAnnouncements = [...response.data].reverse();\n                setAnnouncements(reversedAnnouncements);\n            })\n            .catch(error => console.error('Error fetching announcements:', error));\n    }, []);\n\n    // 페이지 번호 클릭 시 호출되는 함수\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n    return (\n        <Container>\n            <MiddleContainer>\n                <AnnouncementTitle>공지사항</AnnouncementTitle>\n                <NewsTitle>\n                    <SmallNewsTitle>\n                        <LeftNewsTitle>한소연 소식</LeftNewsTitle>\n                        <RightNewsTitle>\n                            <WritingButton onClick={WritingNews}>글 작성</WritingButton>\n                            <ExitButton>더 보기 ></ExitButton>\n                        </RightNewsTitle>\n                    </SmallNewsTitle>\n                </NewsTitle>\n                <MainTitle>\n                    <TopMainTitle>\n                        <h3 style={{flex: '1', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>번호</h3>\n                        <h3 style={{flex: '3', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>제목</h3>\n                        <h3 style={{flex: '1.3', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>등록일</h3>\n                        <h3 style={{flex: '0.7', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', color: \"#747474\",justifyContent:'center'}}>조회수</h3>\n                    </TopMainTitle>\n                    <BottomTitle>\n                        {currentItems.map((announcement) => (\n                            <BottomContent key={announcement.anno_id}>\n                            <h3 style={{flex: '1', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>{announcement.anno_id}</h3>\n                            <button style={{flex: '3', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\",border: 'none', backgroundColor:'white'}} onClick={() => viewAnnouncement(announcement.anno_id)} >{announcement.anno_title}</button>\n                            <h3 style={{flex: '1.3', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', display: \"flex\",justifyContent:'center', color: \"#747474\"}}>{announcement.anno_regist.substring(0, 10)}</h3>\n                            <h3 style={{flex: '0.7', marginTop: \"1rem\",fontSize:'20px',fontWeight:'700', color: \"#747474\",justifyContent:'center'}}>{announcement.anno_views}</h3>\n                        </BottomContent>\n                            ))}\n                    </BottomTitle>\n                </MainTitle>\n                <Pagination>\n                    {Array.from({ length: Math.ceil(announcements.length / itemsPerPage) }, (_, i) => i + 1).map((number) => (\n                        <PageNumber key={number} onClick={() => paginate(number)}>\n                            {number}\n                        </PageNumber>\n                    ))}\n                </Pagination>\n            </MiddleContainer>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 700px;\n  align-items: center;\n  justify-content: center;\n`\n\nconst MiddleContainer = styled.div`\n  display: flex;\n  height: 500px;\n  width: 1000px;\n  flex-direction: column;\n`\nconst AnnouncementTitle = styled.div`\n  display: flex;\n  flex: 1;\n  align-items:center;\n  font-size: 40px;\n  font-weight: 700;\n`\n\nconst NewsTitle = styled.div`\n  display: flex;\n  flex: 2;\n  flex-direction: row;\n  align-items: center;\n`\nconst SmallNewsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 60px;\n  flex: 1;\n`\n\nconst LeftNewsTitle = styled.div`\n  display: flex;\n  flex: 5;\n  height: 60px;\n  font-size: 20px;\n  align-items: center;\n  margin-left: 0.5rem;\n`\n\nconst RightNewsTitle = styled.div`\n  display: flex;\n  flex: 5;\n  height: 60px;\n  font-weight: 700;\n  align-items: center;\n  justify-content: right;\n`\nconst WritingButton = styled.button`\n  background-color: skyblue;\n  display: flex;\n  width: 100px;\n  height: 40px;\n  text-align: center;\n  color: white;\n  margin-right: 1rem;\n  border-radius: 10px;\n  font-size: 20px;\n  align-items: center;\n  justify-content: center;\n  border: none;\n`\n\nconst ExitButton = styled.div`\n  display: flex;\n  width: 100px;\n  height: 40px;\n  text-align: center;\n  color: white;\n  border-radius: 10px;\n  background-color: mediumseagreen;\n  font-size: 20px;\n  float: right;\n  align-items: center;\n  justify-content: center;\n`\nconst MainTitle = styled.div`\n  display: flex;\n  flex: 7;\n  flex-direction: column;\n`\nconst TopMainTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 2px solid hotpink;\n  border-top: 2px solid gray;\n  height: 50px;\n  align-items: center;\n`\nconst BottomTitle = styled.div`\n  display: flex;\n  height: 250px;\n  flex-direction: column;\n\n`\nconst BottomContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 50px;\n  border-bottom: 1px solid skyblue;\n`\n\nconst Pagination = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst PageNumber = styled.div`\n  cursor: pointer;\n  margin: 0 0.5rem;\n  padding: 0.3rem 0.5rem;\n  border: 1px solid #61dafb;\n  border-radius: 5px;\n  color: #61dafb;\n  &:hover {\n    background-color: #61dafb;\n    color: white;\n  }\n`;\n\nexport default AnnouncementListPage;","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\NewPage.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\ThemaPage.js",["271"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sharing from '../imgs/sharing.png';\nimport bookmark from '../imgs/bookmark.png';\nimport hart from '../imgs/hart.png';\nimport jijele from '../imgs/jijele.jpeg';\n\nconst ThemaPage = (props) => {\n    // 공유\n    const handleSharingClick = () => {\n        console.log('Click');\n    };\n    // 북마크\n    const handleBookmarkClick = () => {\n        console.log('Click2');\n    };\n    // 좋아요\n    const handleHartClick = () => {\n        console.log('Click3');\n    };\n    const [activeTab, setActiveTab] = useState(1);\n\n    const handleTabClick = (tabNumber) => {\n        setActiveTab(tabNumber);\n    };\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 1:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                <NewCourseContainer>\n                                    <NewCourseTitle>테마별 코스</NewCourseTitle>\n                                </NewCourseContainer>\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                            <SmallTitleContainer>\n                                <SmallTitle>\n                                    <SmallTitleContent>[으메 ~ 보자마자 깜짝놀랐구만~ 윤승준 피지컬보소잉 ~?]</SmallTitleContent>\n                                </SmallTitle>\n                                <SmallTag>{/* 이부분에 InputSkill 추가하면됨 */}</SmallTag>\n                            </SmallTitleContainer>\n                            <ContentContainer>\n                                <ContentTitleContainer>\n                                    <ContentSmallTitleContainer>모집 일정</ContentSmallTitleContainer>\n                                </ContentTitleContainer>\n                                <ContentMainContainer>\n                                    <ContentMainTextContainer>\n                                        <ContentTitle>\n                                            <h2>웹 디자이너</h2>\n                                            <h3>(경력)</h3>\n                                        </ContentTitle>\n                                        <ContentMemory>\n                                            <h2>이런 일을 해요</h2>\n                                            <ul>\n                                                <li>11</li>\n                                                <li>22</li>\n                                                <li>33</li>\n                                            </ul>\n                                        </ContentMemory>\n                                    </ContentMainTextContainer>\n                                </ContentMainContainer>\n                            </ContentContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 4:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={jijele} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return <Container>{renderTabContent()}</Container>;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  flex-direction: column;\n  //background-color: blue;\n`;\nconst TopImage = styled.img`\n  height: 300px;\n  width: 500px;\n`;\nconst TopContainer = styled.div`\n  //background-color: red;\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst MiddleContainer = styled.div`\n  //background-color: orange;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst MiddleTopContainer = styled.div`\n  //background-color: blue;\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n`;\nconst ThreeImgs = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: gray;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 2rem;\n`;\nconst StyledButton = styled.button`\n  background: none;\n  border: none;\n`;\nconst StyledImage = styled.img`\n  width: 20px;\n  height: 15px;\n`;\nconst MiddleBottomContainer = styled.div`\n  //background-color: pink;\n  display: flex;\n  flex: 8;\n`;\n\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 7;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewCourseTitle = styled.div`\n  font-size: 44px;\n  color: orange;\n  font-weight: 800;\n  //background-color: green;\n`;\n\nconst BottomContainer = styled.div`\n  //background-color: yellow;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst MenuContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  //background: #61dafb;\n`;\nconst MenuTitle = styled.div`\n  display: flex;\n  flex: 0.6;\n  flex-direction: row;\n  height: 50px;\n  //background-color: red;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\nconst TabButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 24px;\n  margin: 0 10px;\n  position: relative;\n\n  // hover 효과\n  &:hover {\n    color: orange;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n\n  // 선택된 탭의 스타일\n  &.active {\n    color: orange;\n    font-size: 32px;\n    font-weight: 700;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n`;\n\nconst SmallTitleContainer = styled.div`\n  //background-color: purple;\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  margin-top: 1rem;\n`;\nconst SmallTitle = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: yellow;\n  justify-content: center;\n  align-items: center;\n`;\nconst SmallTitleContent = styled.div`\n  display: flex;\n  flex: 0.6;\n  //background-color: orange;\n  font-size: 36px;\n  font-weight: 700;\n`;\nconst SmallTag = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: green;\n`;\nconst ContentContainer = styled.div`\n  //background-color: bisque;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst ContentTitleContainer = styled.div`\n  display: flex;\n  flex: 1.5;\n  //background-color: gray;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: 700;\n  align-items: center;\n`;\nconst ContentSmallTitleContainer = styled.div`\n  display: flex;\n  flex: 0.6;\n  margin-top: 1rem;\n`;\nconst ContentMainContainer = styled.div`\n  display: flex;\n  flex: 8.5;\n  justify-content: center;\n  align-items: flex-start; /* 세로 기준으로 top에 위치하도록 설정 */\n`;\nconst ContentMainTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: brown;\n  border-radius: 5px;\n  border: dodgerblue 5px solid;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  width: 1100px;\n  height: 400px;\n`;\nconst ContentTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  align-items: flex-start;\n  //background-color: white;\n  h2 {\n    color: dodgerblue;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n  }\n\n  h3 {\n    color: dodgerblue;\n    font-weight: 600;\n    margin-left: 2rem;\n  }\n`;\nconst ContentMemory = styled.div`\n  display: flex;\n  flex: 8;\n  flex-direction: column;\n  //background-color: yellow;\n  border-left: dodgerblue 3px solid;\n  align-items: flex-start;\n  h2 {\n    color: black;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    //background-color: red;\n  }\n  ul {\n    //background-color: gray;\n    display: block;\n    flex-direction: column;\n    list-style-type: disc; /* 원형 글머리 기호 */\n    margin-top: 1rem;\n  }\n\n  li {\n    font-size: 24px;\n    display: flex;\n    color: black;\n    font-weight: 600;\n    margin-bottom: 0.5em; /* 각 항목 사이의 간격 조절 */\n  }\n`;\n\n\nexport default ThemaPage;","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\ReviewPage.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Components\\InputSkill.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\RegionPage.js",["272"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport sharing from '../imgs/sharing.png';\nimport bookmark from '../imgs/bookmark.png';\nimport hart from '../imgs/hart.png';\nimport ningning from '../imgs/ningning.jpeg';\n\nconst RegionPage = (props) => {\n    // 공유\n    const handleSharingClick = () => {\n        console.log('Click');\n    };\n    // 북마크\n    const handleBookmarkClick = () => {\n        console.log('Click2');\n    };\n    // 좋아요\n    const handleHartClick = () => {\n        console.log('Click3');\n    };\n    const [activeTab, setActiveTab] = useState(1);\n\n    const handleTabClick = (tabNumber) => {\n        setActiveTab(tabNumber);\n    };\n\n    const renderTabContent = () => {\n        switch (activeTab) {\n            case 1:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                <NewCourseContainer>\n                                    <NewCourseTitle>지역별 코스</NewCourseTitle>\n                                </NewCourseContainer>\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                            <SmallTitleContainer>\n                                <SmallTitle>\n                                    <SmallTitleContent>[와따마,, 다시봐도 으마무시하고마잉 ~?]</SmallTitleContent>\n                                </SmallTitle>\n                                <SmallTag>{/* 이부분에 InputSkill 추가하면됨 */}</SmallTag>\n                            </SmallTitleContainer>\n                            <ContentContainer>\n                                <ContentTitleContainer>\n                                    <ContentSmallTitleContainer>모집 일정</ContentSmallTitleContainer>\n                                </ContentTitleContainer>\n                                <ContentMainContainer>\n                                    <ContentMainTextContainer>\n                                        <ContentTitle>\n                                            <h2>웹 디자이너</h2>\n                                            <h3>(경력)</h3>\n                                        </ContentTitle>\n                                        <ContentMemory>\n                                            <h2>이런 일을 해요</h2>\n                                            <ul>\n                                                <li>11</li>\n                                                <li>22</li>\n                                                <li>33</li>\n                                            </ul>\n                                        </ContentMemory>\n                                    </ContentMainTextContainer>\n                                </ContentMainContainer>\n                            </ContentContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 2:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 3:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            case 4:\n                return (\n                    <>\n                        <TopContainer>\n                            <TopImage className=\"NewCourse\" alt=\"Title\" src={ningning} />\n                        </TopContainer>\n                        <MiddleContainer>\n                            <MiddleTopContainer>\n                                <ThreeImgs>\n                                    <StyledButton onClick={handleSharingClick}>\n                                        <StyledImage className=\"sharing\" alt=\"sharing\" src={sharing} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleBookmarkClick}>\n                                        <StyledImage className=\"bookmark\" alt=\"bookmark\" src={bookmark} />\n                                    </StyledButton>\n                                    <StyledButton onClick={handleHartClick}>\n                                        <StyledImage className=\"hart\" alt=\"hart\" src={hart} />\n                                    </StyledButton>\n                                </ThreeImgs>\n                            </MiddleTopContainer>\n                            <MiddleBottomContainer>\n                                {/*여기에 사진들추가*/}\n                            </MiddleBottomContainer>\n                        </MiddleContainer>\n                        <BottomContainer>\n                            <MenuContainer>\n                                <MenuTitle>\n                                    <TabButton onClick={() => {handleTabClick(1);console.log('Tab 1 clicked');}} className={activeTab === 1 ? 'active' : ''}>정보</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(2);console.log('Tab 2 clicked');}} className={activeTab === 2 ? 'active' : ''}>여행지</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(3);console.log('Tab 3 clicked');}} className={activeTab === 3 ? 'active' : ''}>갤러리</TabButton>\n                                    <TabButton onClick={() => {handleTabClick(4);console.log('Tab 4 clicked');}} className={activeTab === 4 ? 'active' : ''}>후기</TabButton>\n                                </MenuTitle>\n                            </MenuContainer>\n                        </BottomContainer>\n                    </>\n                );\n            default:\n                return null;\n        }\n    };\n\n    return <Container>{renderTabContent()}</Container>;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  flex-direction: column;\n  //background-color: blue;\n`;\nconst TopImage = styled.img`\n  height: 300px;\n  width: 500px;\n`;\nconst TopContainer = styled.div`\n  //background-color: red;\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst MiddleContainer = styled.div`\n  //background-color: orange;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\nconst MiddleTopContainer = styled.div`\n  //background-color: blue;\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n`;\nconst ThreeImgs = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: gray;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 2rem;\n`;\nconst StyledButton = styled.button`\n  background: none;\n  border: none;\n`;\nconst StyledImage = styled.img`\n  width: 20px;\n  height: 15px;\n`;\nconst MiddleBottomContainer = styled.div`\n  //background-color: pink;\n  display: flex;\n  flex: 8;\n`;\n\nconst NewCourseContainer = styled.div`\n  display: flex;\n  flex: 7;\n  justify-content: center;\n  align-items: center;\n`;\nconst NewCourseTitle = styled.div`\n  font-size: 44px;\n  color: orange;\n  font-weight: 800;\n  //background-color: green;\n`;\n\nconst BottomContainer = styled.div`\n  //background-color: yellow;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst MenuContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  //background: #61dafb;\n`;\nconst MenuTitle = styled.div`\n  display: flex;\n  flex: 0.6;\n  flex-direction: row;\n  height: 50px;\n  //background-color: red;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  margin-top: 1rem;\n  justify-content: space-around;\n`;\nconst TabButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 24px;\n  margin: 0 10px;\n  position: relative;\n\n  // hover 효과\n  &:hover {\n    color: orange;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n\n  // 선택된 탭의 스타일\n  &.active {\n    color: orange;\n    font-size: 32px;\n    font-weight: 700;\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 50%; /* 가운데 정렬을 위해 left 속성 수정 */\n      transform: translateX(-50%); /* 가운데 정렬을 위한 변환 적용 */\n      bottom: -2px;\n      width: 120px;\n      height: 3px;\n      background-color: orange;\n    }\n  }\n`;\n\nconst SmallTitleContainer = styled.div`\n  //background-color: purple;\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  margin-top: 1rem;\n`;\nconst SmallTitle = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: yellow;\n  justify-content: center;\n  align-items: center;\n`;\nconst SmallTitleContent = styled.div`\n  display: flex;\n  flex: 0.6;\n  //background-color: orange;\n  font-size: 36px;\n  font-weight: 700;\n`;\nconst SmallTag = styled.div`\n  display: flex;\n  flex: 5;\n  //background-color: green;\n`;\nconst ContentContainer = styled.div`\n  //background-color: bisque;\n  display: flex;\n  flex-direction: column;\n  flex: 7;\n`;\nconst ContentTitleContainer = styled.div`\n  display: flex;\n  flex: 1.5;\n  //background-color: gray;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: 700;\n  align-items: center;\n`;\nconst ContentSmallTitleContainer = styled.div`\n  display: flex;\n  flex: 0.6;\n  margin-top: 1rem;\n`;\nconst ContentMainContainer = styled.div`\n  display: flex;\n  flex: 8.5;\n  justify-content: center;\n  align-items: flex-start; /* 세로 기준으로 top에 위치하도록 설정 */\n`;\nconst ContentMainTextContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  //background-color: brown;\n  border-radius: 5px;\n  border: dodgerblue 5px solid;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  width: 1100px;\n  height: 400px;\n`;\nconst ContentTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n  align-items: flex-start;\n  //background-color: white;\n  h2 {\n    color: dodgerblue;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n  }\n\n  h3 {\n    color: dodgerblue;\n    font-weight: 600;\n    margin-left: 2rem;\n  }\n`;\nconst ContentMemory = styled.div`\n  display: flex;\n  flex: 8;\n  flex-direction: column;\n  //background-color: yellow;\n  border-left: dodgerblue 3px solid;\n  align-items: flex-start;\n  h2 {\n    color: black;\n    font-weight: 800;\n    margin-left: 2rem;\n    margin-top: 2rem;\n    //background-color: red;\n  }\n  ul {\n    //background-color: gray;\n    display: block;\n    flex-direction: column;\n    list-style-type: disc; /* 원형 글머리 기호 */\n    margin-top: 1rem;\n  }\n\n  li {\n    font-size: 24px;\n    display: flex;\n    color: black;\n    font-weight: 600;\n    margin-bottom: 0.5em; /* 각 항목 사이의 간격 조절 */\n  }\n`;\n\nexport default RegionPage;","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\RecommendPage.js",["273"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Components\\Footer.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\CompanyInfoChangePage.js",["274","275","276","277","278","279","280","281","282","283","284","285"],[],"import React, {useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport defaultProfilePic from '../imgs/default_profile.png';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {useUserStore} from \"../stores\";\r\nimport axios from \"axios\";\r\nimport {Badge} from \"react-bootstrap\";\r\nimport logo from \"../imgs/gwanghui.jpg\";\r\nimport iu from \"../imgs/iu3.png\"\r\nimport logoSmall from \"../imgs/logo2.png\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faCamera} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CompanyInfoChangePage = (props) => {\r\n    const navigate = useNavigate();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['token']);\r\n    const { user, setUser } = useUserStore();\r\n    const userType = cookies.userType;\r\n    const [step, setStep] = useState(1);\r\n\r\n    const [providerPassword, setProviderPassword] = useState('');\r\n    const [passwordConfirmed, setPasswordConfirmed] = useState(false);\r\n\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [previewImage, setPreviewImage] = useState(null);\r\n\r\n    const fileInputRef = useRef(null);\r\n\r\n    const [addressFields, setAddressFields] = useState({\r\n        postalCode: '',\r\n        address: '',\r\n        detailAddress: ''\r\n    });\r\n\r\n    const [companyName, setCompanyName] = useState(user.companyName || '');\r\n    const [companyAddress, setCompanyAddress] = useState(user.companyAddress || '');\r\n    const [companyTel, setCompanyTel] = useState(user.companyTel || '');\r\n\r\n    useEffect(() => {\r\n        if (cookies.token) {\r\n            axios.get('http://localhost:8050/api/auth/currentCompany', {\r\n                headers: {\r\n                    Authorization: `Bearer ${cookies.token}`\r\n                }\r\n            }).then(response => {\r\n                console.log(cookies.token)\r\n                // 토큰이 유효한 경우\r\n                const fetchedUser = response.data;\r\n                console.log(fetchedUser)\r\n                setUser(fetchedUser);\r\n            }).catch(error => {\r\n                // 토큰이 유효하지 않은 경우\r\n                console.error(\"Token verification failed:\", error);\r\n                handleLogout();\r\n            });\r\n        }\r\n\r\n        const script = document.createElement('script');\r\n        script.src = \"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        };\r\n    }, []);\r\n\r\n    const getProfilePicSrc = () => {\r\n        if (user.providerProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.providerProfile) {\r\n            return defaultProfilePic;\r\n        }\r\n        return user.providerProfile;\r\n    };\r\n\r\n    const handlePasswordConfirm = async () => {\r\n        try {\r\n            const token = cookies.token;\r\n            if (!token) {\r\n                alert('로그인을 다시 해주세요.');\r\n                handleLogout();\r\n                return;\r\n            }\r\n            const response = await axios.post('http://localhost:8050/api/auth/verifyPasswordCompany', { providerPassword, token });\r\n            if (response.data.isValid) {\r\n                setPasswordConfirmed(true);\r\n                setStep(1);\r\n            } else {\r\n                alert('비밀번호가 일치하지 않습니다.');\r\n            }\r\n        } catch (error) {\r\n            alert('잠시후 다시 시도해주세요');\r\n        }\r\n    };\r\n\r\n    const searchAddress = () => {\r\n        new window.daum.Postcode({\r\n            oncomplete: function(data) {\r\n                const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\r\n                setAddressFields({\r\n                    postalCode: data.zonecode,\r\n                    address: addr,\r\n                    detailAddress: ''\r\n                });\r\n                setCompanyAddress(addr);\r\n            }\r\n        }).open();\r\n    };\r\n\r\n\r\n    const handleLogout = () => {\r\n        removeCookie('token');\r\n        setUser(null);\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const triggerFileInput = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setProfileImage(file);\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setPreviewImage(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const validateForm = () => {\r\n        let errors = {};\r\n\r\n        if (!companyAddress) {\r\n            errors.userInfo = \"1\";\r\n        }\r\n\r\n        if (!companyName) {\r\n            errors.userPrefer = \"2\";\r\n        }\r\n\r\n        if (!companyTel) {\r\n            errors.userPhone = \"3\";\r\n        }\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const uploadProfileImage = async () => {\r\n        if (!profileImage) return null;\r\n\r\n        const formData = new FormData();\r\n        formData.append('profileImage', profileImage);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8050/api/uploadProfileImage', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            return response.data.imageUrl;\r\n        } catch (error) {\r\n            console.error('Error uploading profile image:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const handleSaveChanges = async () => {\r\n        const imageUrl = await uploadProfileImage(); // 프로필 이미지 업로드 및 URL 가져오기\r\n\r\n        const updatedInfo = {\r\n            companyName: companyName,\r\n            companyAddress: companyAddress,\r\n            companyTel: companyTel,\r\n            providerProfile: imageUrl\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8050/api/auth/updateCompanyInfo', updatedInfo, {\r\n                headers: {\r\n                    Authorization: `Bearer ${cookies.token}` // 인증 토큰 사용\r\n                }\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                alert('회사 정보가 성공적으로 업데이트되었습니다.');\r\n                window.location.href = \"/\";\r\n            } else {\r\n                alert('회사 정보 업데이트에 실패했습니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating company information:', error);\r\n            alert('업데이트 중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    const getProfilePic = () => {\r\n        if(userType === \"company\"){\r\n            if (user.providerProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.providerProfile) {\r\n                return defaultProfilePic;\r\n            }\r\n            return user.providerProfile;\r\n        }else{\r\n            if (user.userProfile === \"hansoyeon/src/imgs/default_profile.png\" || !user.userProfile) {\r\n                return defaultProfilePic;\r\n            }\r\n            return user.userProfile;\r\n        }\r\n    };\r\n\r\n\r\n    const goToNextStep = () => {\r\n        setStep(2);\r\n    };\r\n\r\n    const goToPreviousStep = () => {\r\n        setStep(1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        navigate(\"/MyInfo\");\r\n    };\r\n\r\n    const handleCompanyNameChange = (e) => {\r\n        setCompanyName(e.target.value);\r\n    };\r\n\r\n    const handleCompanyAddressChange = (e) => {\r\n        setCompanyAddress(e.target.value);\r\n    };\r\n\r\n    const handleCompanyTelChange = (e) => {\r\n        setCompanyTel(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <BoxContainer>\r\n                <ImageBox>\r\n                    <LargeImage src={logo} alt=\"logo\" />\r\n                </ImageBox>\r\n                {passwordConfirmed === false && (\r\n                    <InfoBox>\r\n                        <BackButton onClick={handleBack}>\r\n                            <FontAwesomeIcon icon={faArrowLeft} />\r\n                        </BackButton>\r\n                        <EditInfoTitle>정보 수정</EditInfoTitle>\r\n                        <ProfileEditSection>\r\n                            <ImageEditContainer>\r\n                                <ProfileImagePreview src={getProfilePic()} alt=\"Profile Preview\" />\r\n                            </ImageEditContainer>\r\n                            <Name>{user.providerName + \"님\" || 'No Name'}</Name>\r\n                            <Email>{user.providerEmail || 'No Email'}</Email>\r\n                            <Divider3>비밀번호 확인</Divider3>\r\n                            <InfoSection>\r\n                                <PasswordInput\r\n                                    type=\"password\"\r\n                                    value={providerPassword}\r\n                                    onChange={(e) => setProviderPassword(e.target.value)}\r\n                                    placeholder=\"비밀번호를 입력하세요\"\r\n                                />\r\n                            </InfoSection>\r\n                            <SaveChangesButton onClick={handlePasswordConfirm}>확인</SaveChangesButton>\r\n                        </ProfileEditSection>\r\n                    </InfoBox>\r\n                )}\r\n                {passwordConfirmed && step === 1 && (\r\n                    <InfoBox>\r\n                        <BackButton onClick={handleBack}>\r\n                            <FontAwesomeIcon icon={faArrowLeft} />\r\n                        </BackButton>\r\n                        <EditInfoTitle>정보 수정</EditInfoTitle>\r\n                        <ProfileEditSection>\r\n                            <ImageEditContainer>\r\n                                <ProfileImagePreview src={previewImage || getProfilePic()} alt=\"Profile Preview\" />\r\n                                <CameraIconLabel onClick={triggerFileInput}>\r\n                                    <FontAwesomeIcon icon={faCamera} />\r\n                                </CameraIconLabel>\r\n                                <HiddenFileInput\r\n                                    type=\"file\"\r\n                                    ref={fileInputRef}\r\n                                    onChange={handleImageChange}\r\n                                />\r\n                            </ImageEditContainer>\r\n                            <Name>{user.providerName + \"님\" || 'No Name'}</Name>\r\n                            <Email>{user.providerEmail || 'No Email'}</Email>\r\n                            <InfoSection>\r\n                                <Divider2>회사명</Divider2>\r\n                                <PreferredAreaInput\r\n                                    type=\"text\"\r\n                                    value={companyName}\r\n                                    onChange={handleCompanyNameChange}\r\n                                    placeholder=\"선호 지역\"\r\n                                />\r\n                                <Divider2>회사 주소</Divider2>\r\n                                <AddressContainer>\r\n                                    <AddressInput\r\n                                        type=\"text\"\r\n                                        value={companyAddress}\r\n                                        onChange={handleCompanyAddressChange}\r\n                                        placeholder=\"회사 주소\"\r\n                                    />\r\n                                    <SearchButton onClick={searchAddress}>\r\n                                        검색\r\n                                    </SearchButton>\r\n                                </AddressContainer>\r\n                                <Divider2>회사 전화번호</Divider2>\r\n                                <PhoneNumberInput\r\n                                    type=\"text\"\r\n                                    value={companyTel}\r\n                                    onChange={handleCompanyTelChange}\r\n                                    placeholder=\"전화번호\"\r\n                                />\r\n                            </InfoSection>\r\n                        </ProfileEditSection>\r\n                        <SaveChangesButton onClick={handleSaveChanges}>저장</SaveChangesButton>\r\n                    </InfoBox>\r\n                )}\r\n            </BoxContainer>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 1000px; \r\n  margin: 0 auto;\r\n`;\r\n\r\nconst InfoBox = styled.div`\r\n  width: 90%;\r\n  max-width: 500px;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n`;\r\n\r\nconst EditInfoTitle = styled.h2`\r\n  text-align: center;\r\n  margin-top: 0;\r\n  margin-bottom: 15px; \r\n  color: #381E1F; \r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\n\r\nconst BackButton = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5em;\r\n  color: #000;\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  height: 20vh;\r\n  width: auto;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  height: 90%;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LargeImage = styled.img`\r\n  max-width: 100%;\r\n  max-height: 90%;\r\n  border-radius: 10px;\r\n  object-fit: cover; \r\n`;\r\n\r\nconst Name = styled.h4`\r\n  margin: 0;\r\n  margin-top: 20px;\r\n  color: #381E1F;\r\n`;\r\n\r\nconst Email = styled.p`\r\n  color: gray;\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    margin-left: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n  &::before {\r\n    margin-right: 10px;\r\n  }\r\n\r\n`;\r\n\r\nconst Divider2 = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  margin-bottom: 10px;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    margin-left: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n`;\r\n\r\nconst Divider3 = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  margin-top: 50px;\r\n  margin-bottom: 10px;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    margin-left: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n  display: block;\r\n  width: 80%;\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  border: 1px solid #ccc;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nconst ProfileEditSection = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ProfileImagePreview = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst SaveChangesButton = styled.button`\r\n  padding: 8px 12px;\r\n  border-radius: 20px;\r\n  background-color: #F7E600;\r\n  color: #381E1F;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  margin-top: 20px;\r\n  &:hover {\r\n    background-color: #e6d700;\r\n  }\r\n`;\r\n\r\nconst ImageEditContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CameraIconLabel = styled.label`\r\n  position: absolute;\r\n  bottom: 0;\r\n  transform: translate(50%, 50%);\r\n  cursor: pointer;\r\n  background-color: white; \r\n  border-radius: 50%;\r\n  padding: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); \r\n`;\r\n\r\nconst HiddenFileInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst AddressContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n  width: 80%; \r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  margin-left: 10px; \r\n  padding: 8px 12px; \r\n  border: 1px solid #ccc; \r\n  background-color: white;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f7f7f7; \r\n  }\r\n`;\r\n\r\nconst AddressInput = styled.input`\r\n  display: block;\r\n  width: 60%;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nconst PreferredAreaInput = styled.input`\r\n  display: block;\r\n  width: 60%;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nconst PhoneNumberInput = styled.input`\r\n  display: block;\r\n  width: 60%;\r\n  text-align: center;\r\n  &:focus {\r\n    outline: none;\r\n    border-color: #F7E600;\r\n  }\r\n`;\r\n\r\nexport default CompanyInfoChangePage;\r\n","C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AboutPage.js",["286","287","288","289","290","291","292","293","294","295","296","297","298"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\RecruitPage.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\RecruitViewPage.js",["299","300","301","302"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\WritingReviewPage.js",["303","304"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\ReviewContentPage.js",[],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\AboutPolicyPage.js",["305"],[],"C:\\Users\\jwoo3\\OneDrive\\문서\\GitHub\\HanSoYeon\\hansoyeon\\src\\Pages\\WritingRecruitPage.js",[],[],{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","severity":1,"message":"319","line":24,"column":8,"nodeType":"320","messageId":"321","endLine":24,"endColumn":18},{"ruleId":"318","severity":1,"message":"322","line":2,"column":17,"nodeType":"320","messageId":"321","endLine":2,"endColumn":20},{"ruleId":"318","severity":1,"message":"323","line":2,"column":22,"nodeType":"320","messageId":"321","endLine":2,"endColumn":31},{"ruleId":"318","severity":1,"message":"324","line":14,"column":21,"nodeType":"320","messageId":"321","endLine":14,"endColumn":30},{"ruleId":"318","severity":1,"message":"325","line":20,"column":18,"nodeType":"320","messageId":"321","endLine":20,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":59,"column":8,"nodeType":"328","endLine":59,"endColumn":10,"suggestions":"329"},{"ruleId":"330","severity":1,"message":"331","line":121,"column":21,"nodeType":"332","messageId":"333","endLine":121,"endColumn":30},{"ruleId":"318","severity":1,"message":"334","line":191,"column":11,"nodeType":"320","messageId":"321","endLine":191,"endColumn":23},{"ruleId":"318","severity":1,"message":"335","line":200,"column":11,"nodeType":"320","messageId":"321","endLine":200,"endColumn":18},{"ruleId":"336","severity":1,"message":"337","line":250,"column":9,"nodeType":"332","endLine":258,"endColumn":10},{"ruleId":"318","severity":1,"message":"338","line":276,"column":7,"nodeType":"320","messageId":"321","endLine":276,"endColumn":22},{"ruleId":"318","severity":1,"message":"339","line":1,"column":16,"nodeType":"320","messageId":"321","endLine":1,"endColumn":24},{"ruleId":"318","severity":1,"message":"340","line":1,"column":26,"nodeType":"320","messageId":"321","endLine":1,"endColumn":37},{"ruleId":"318","severity":1,"message":"341","line":1,"column":39,"nodeType":"320","messageId":"321","endLine":1,"endColumn":48},{"ruleId":"318","severity":1,"message":"342","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"318","severity":1,"message":"343","line":18,"column":8,"nodeType":"320","messageId":"321","endLine":18,"endColumn":12},{"ruleId":"344","severity":1,"message":"345","line":69,"column":46,"nodeType":"332","endLine":69,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":70,"column":46,"nodeType":"332","endLine":70,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":71,"column":46,"nodeType":"332","endLine":71,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":72,"column":46,"nodeType":"332","endLine":72,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":94,"column":46,"nodeType":"332","endLine":94,"endColumn":94},{"ruleId":"344","severity":1,"message":"345","line":95,"column":46,"nodeType":"332","endLine":95,"endColumn":94},{"ruleId":"344","severity":1,"message":"345","line":122,"column":46,"nodeType":"332","endLine":122,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":123,"column":46,"nodeType":"332","endLine":123,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":124,"column":46,"nodeType":"332","endLine":124,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":125,"column":46,"nodeType":"332","endLine":125,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":150,"column":46,"nodeType":"332","endLine":150,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":151,"column":46,"nodeType":"332","endLine":151,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":152,"column":46,"nodeType":"332","endLine":152,"endColumn":88},{"ruleId":"344","severity":1,"message":"345","line":153,"column":46,"nodeType":"332","endLine":153,"endColumn":88},{"ruleId":"318","severity":1,"message":"346","line":190,"column":7,"nodeType":"320","messageId":"321","endLine":190,"endColumn":21},{"ruleId":"318","severity":1,"message":"347","line":196,"column":7,"nodeType":"320","messageId":"321","endLine":196,"endColumn":25},{"ruleId":"318","severity":1,"message":"348","line":203,"column":7,"nodeType":"320","messageId":"321","endLine":203,"endColumn":17},{"ruleId":"318","severity":1,"message":"349","line":209,"column":7,"nodeType":"320","messageId":"321","endLine":209,"endColumn":20},{"ruleId":"318","severity":1,"message":"350","line":7,"column":22,"nodeType":"320","messageId":"321","endLine":7,"endColumn":27},{"ruleId":"318","severity":1,"message":"351","line":7,"column":29,"nodeType":"320","messageId":"321","endLine":7,"endColumn":39},{"ruleId":"318","severity":1,"message":"352","line":11,"column":8,"nodeType":"320","messageId":"321","endLine":11,"endColumn":19},{"ruleId":"318","severity":1,"message":"343","line":12,"column":8,"nodeType":"320","messageId":"321","endLine":12,"endColumn":12},{"ruleId":"318","severity":1,"message":"353","line":13,"column":9,"nodeType":"320","messageId":"321","endLine":13,"endColumn":13},{"ruleId":"318","severity":1,"message":"354","line":13,"column":15,"nodeType":"320","messageId":"321","endLine":13,"endColumn":25},{"ruleId":"318","severity":1,"message":"355","line":16,"column":12,"nodeType":"320","messageId":"321","endLine":16,"endColumn":28},{"ruleId":"318","severity":1,"message":"356","line":28,"column":12,"nodeType":"320","messageId":"321","endLine":28,"endColumn":19},{"ruleId":"318","severity":1,"message":"357","line":29,"column":12,"nodeType":"320","messageId":"321","endLine":29,"endColumn":16},{"ruleId":"318","severity":1,"message":"355","line":31,"column":12,"nodeType":"320","messageId":"321","endLine":31,"endColumn":28},{"ruleId":"318","severity":1,"message":"358","line":32,"column":12,"nodeType":"320","messageId":"321","endLine":32,"endColumn":21},{"ruleId":"318","severity":1,"message":"354","line":3,"column":24,"nodeType":"320","messageId":"321","endLine":3,"endColumn":34},{"ruleId":"318","severity":1,"message":"359","line":342,"column":7,"nodeType":"320","messageId":"321","endLine":342,"endColumn":12},{"ruleId":"318","severity":1,"message":"354","line":4,"column":24,"nodeType":"320","messageId":"321","endLine":4,"endColumn":34},{"ruleId":"318","severity":1,"message":"359","line":393,"column":7,"nodeType":"320","messageId":"321","endLine":393,"endColumn":12},{"ruleId":"318","severity":1,"message":"360","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":24},{"ruleId":"318","severity":1,"message":"361","line":10,"column":8,"nodeType":"320","messageId":"321","endLine":10,"endColumn":10},{"ruleId":"318","severity":1,"message":"324","line":14,"column":21,"nodeType":"320","messageId":"321","endLine":14,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":54,"column":8,"nodeType":"328","endLine":54,"endColumn":10,"suggestions":"362"},{"ruleId":"318","severity":1,"message":"363","line":210,"column":7,"nodeType":"320","messageId":"321","endLine":210,"endColumn":16},{"ruleId":"318","severity":1,"message":"364","line":216,"column":7,"nodeType":"320","messageId":"321","endLine":216,"endColumn":12},{"ruleId":"318","severity":1,"message":"365","line":220,"column":7,"nodeType":"320","messageId":"321","endLine":220,"endColumn":12},{"ruleId":"318","severity":1,"message":"366","line":8,"column":9,"nodeType":"320","messageId":"321","endLine":8,"endColumn":14},{"ruleId":"318","severity":1,"message":"361","line":10,"column":8,"nodeType":"320","messageId":"321","endLine":10,"endColumn":10},{"ruleId":"318","severity":1,"message":"324","line":17,"column":21,"nodeType":"320","messageId":"321","endLine":17,"endColumn":30},{"ruleId":"318","severity":1,"message":"367","line":30,"column":12,"nodeType":"320","messageId":"321","endLine":30,"endColumn":25},{"ruleId":"326","severity":1,"message":"368","line":69,"column":8,"nodeType":"328","endLine":69,"endColumn":10,"suggestions":"369"},{"ruleId":"318","severity":1,"message":"370","line":127,"column":11,"nodeType":"320","messageId":"321","endLine":127,"endColumn":23},{"ruleId":"318","severity":1,"message":"371","line":4,"column":9,"nodeType":"320","messageId":"321","endLine":4,"endColumn":27},{"ruleId":"318","severity":1,"message":"372","line":28,"column":11,"nodeType":"320","messageId":"321","endLine":28,"endColumn":30},{"ruleId":"326","severity":1,"message":"373","line":79,"column":8,"nodeType":"328","endLine":79,"endColumn":29,"suggestions":"374"},{"ruleId":"318","severity":1,"message":"375","line":82,"column":11,"nodeType":"320","messageId":"321","endLine":82,"endColumn":27},{"ruleId":"326","severity":1,"message":"373","line":103,"column":8,"nodeType":"328","endLine":103,"endColumn":17,"suggestions":"376"},{"ruleId":"318","severity":1,"message":"377","line":258,"column":7,"nodeType":"320","messageId":"321","endLine":258,"endColumn":19},{"ruleId":"318","severity":1,"message":"378","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":16},{"ruleId":"318","severity":1,"message":"378","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":16},{"ruleId":"318","severity":1,"message":"379","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":12},{"ruleId":"318","severity":1,"message":"380","line":27,"column":19,"nodeType":"320","messageId":"321","endLine":27,"endColumn":23},{"ruleId":"318","severity":1,"message":"381","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":14},{"ruleId":"318","severity":1,"message":"382","line":18,"column":21,"nodeType":"320","messageId":"321","endLine":18,"endColumn":31},{"ruleId":"318","severity":1,"message":"324","line":36,"column":21,"nodeType":"320","messageId":"321","endLine":36,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":240,"column":8,"nodeType":"328","endLine":240,"endColumn":10,"suggestions":"383"},{"ruleId":"326","severity":1,"message":"384","line":251,"column":8,"nodeType":"328","endLine":251,"endColumn":16,"suggestions":"385"},{"ruleId":"318","severity":1,"message":"386","line":641,"column":7,"nodeType":"320","messageId":"321","endLine":641,"endColumn":15},{"ruleId":"318","severity":1,"message":"387","line":778,"column":7,"nodeType":"320","messageId":"321","endLine":778,"endColumn":26},{"ruleId":"318","severity":1,"message":"388","line":785,"column":7,"nodeType":"320","messageId":"321","endLine":785,"endColumn":17},{"ruleId":"318","severity":1,"message":"389","line":792,"column":7,"nodeType":"320","messageId":"321","endLine":792,"endColumn":24},{"ruleId":"318","severity":1,"message":"390","line":799,"column":7,"nodeType":"320","messageId":"321","endLine":799,"endColumn":15},{"ruleId":"318","severity":1,"message":"391","line":804,"column":7,"nodeType":"320","messageId":"321","endLine":804,"endColumn":23},{"ruleId":"318","severity":1,"message":"392","line":810,"column":7,"nodeType":"320","messageId":"321","endLine":810,"endColumn":28},{"ruleId":"318","severity":1,"message":"393","line":819,"column":7,"nodeType":"320","messageId":"321","endLine":819,"endColumn":33},{"ruleId":"318","severity":1,"message":"394","line":824,"column":7,"nodeType":"320","messageId":"321","endLine":824,"endColumn":27},{"ruleId":"318","severity":1,"message":"395","line":830,"column":7,"nodeType":"320","messageId":"321","endLine":830,"endColumn":31},{"ruleId":"318","severity":1,"message":"396","line":841,"column":7,"nodeType":"320","messageId":"321","endLine":841,"endColumn":19},{"ruleId":"318","severity":1,"message":"397","line":860,"column":7,"nodeType":"320","messageId":"321","endLine":860,"endColumn":20},{"ruleId":"318","severity":1,"message":"398","line":890,"column":7,"nodeType":"320","messageId":"321","endLine":890,"endColumn":20},{"ruleId":"318","severity":1,"message":"399","line":957,"column":7,"nodeType":"320","messageId":"321","endLine":957,"endColumn":18},{"ruleId":"318","severity":1,"message":"341","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":36},{"ruleId":"318","severity":1,"message":"341","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":36},{"ruleId":"326","severity":1,"message":"400","line":16,"column":8,"nodeType":"328","endLine":16,"endColumn":16,"suggestions":"401"},{"ruleId":"318","severity":1,"message":"366","line":8,"column":9,"nodeType":"320","messageId":"321","endLine":8,"endColumn":14},{"ruleId":"318","severity":1,"message":"361","line":10,"column":8,"nodeType":"320","messageId":"321","endLine":10,"endColumn":10},{"ruleId":"318","severity":1,"message":"402","line":11,"column":8,"nodeType":"320","messageId":"321","endLine":11,"endColumn":17},{"ruleId":"318","severity":1,"message":"324","line":17,"column":21,"nodeType":"320","messageId":"321","endLine":17,"endColumn":30},{"ruleId":"318","severity":1,"message":"367","line":30,"column":12,"nodeType":"320","messageId":"321","endLine":30,"endColumn":25},{"ruleId":"326","severity":1,"message":"368","line":67,"column":8,"nodeType":"328","endLine":67,"endColumn":10,"suggestions":"403"},{"ruleId":"318","severity":1,"message":"404","line":69,"column":11,"nodeType":"320","messageId":"321","endLine":69,"endColumn":27},{"ruleId":"318","severity":1,"message":"370","line":133,"column":11,"nodeType":"320","messageId":"321","endLine":133,"endColumn":23},{"ruleId":"318","severity":1,"message":"405","line":214,"column":11,"nodeType":"320","messageId":"321","endLine":214,"endColumn":23},{"ruleId":"318","severity":1,"message":"406","line":218,"column":11,"nodeType":"320","messageId":"321","endLine":218,"endColumn":27},{"ruleId":"318","severity":1,"message":"335","line":373,"column":7,"nodeType":"320","messageId":"321","endLine":373,"endColumn":14},{"ruleId":"318","severity":1,"message":"407","line":415,"column":7,"nodeType":"320","messageId":"321","endLine":415,"endColumn":14},{"ruleId":"318","severity":1,"message":"408","line":8,"column":8,"nodeType":"320","messageId":"321","endLine":8,"endColumn":14},{"ruleId":"318","severity":1,"message":"409","line":16,"column":8,"nodeType":"320","messageId":"321","endLine":16,"endColumn":14},{"ruleId":"410","severity":1,"message":"411","line":36,"column":33,"nodeType":"332","endLine":36,"endColumn":74},{"ruleId":"410","severity":1,"message":"411","line":63,"column":25,"nodeType":"332","endLine":63,"endColumn":64},{"ruleId":"410","severity":1,"message":"411","line":68,"column":25,"nodeType":"332","endLine":68,"endColumn":64},{"ruleId":"410","severity":1,"message":"411","line":73,"column":25,"nodeType":"332","endLine":73,"endColumn":64},{"ruleId":"410","severity":1,"message":"411","line":83,"column":25,"nodeType":"332","endLine":83,"endColumn":64},{"ruleId":"410","severity":1,"message":"411","line":89,"column":25,"nodeType":"332","endLine":89,"endColumn":64},{"ruleId":"410","severity":1,"message":"411","line":94,"column":25,"nodeType":"332","endLine":94,"endColumn":64},{"ruleId":"410","severity":1,"message":"411","line":117,"column":33,"nodeType":"332","endLine":117,"endColumn":141},{"ruleId":"410","severity":1,"message":"411","line":122,"column":33,"nodeType":"332","endLine":122,"endColumn":141},{"ruleId":"410","severity":1,"message":"411","line":127,"column":33,"nodeType":"332","endLine":127,"endColumn":141},{"ruleId":"410","severity":1,"message":"411","line":134,"column":33,"nodeType":"332","endLine":134,"endColumn":141},{"ruleId":"318","severity":1,"message":"341","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":26},{"ruleId":"318","severity":1,"message":"339","line":1,"column":28,"nodeType":"320","messageId":"321","endLine":1,"endColumn":36},{"ruleId":"318","severity":1,"message":"412","line":2,"column":9,"nodeType":"320","messageId":"321","endLine":2,"endColumn":20},{"ruleId":"318","severity":1,"message":"413","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":12},{"ruleId":"318","severity":1,"message":"414","line":13,"column":12,"nodeType":"320","messageId":"321","endLine":13,"endColumn":21},{"ruleId":"318","severity":1,"message":"415","line":157,"column":7,"nodeType":"320","messageId":"321","endLine":157,"endColumn":12},{"ruleId":"410","severity":1,"message":"411","line":11,"column":25,"nodeType":"332","endLine":11,"endColumn":68},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["416"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'InputSkill' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Container' is defined but never used.","'setCookie' is assigned a value but never used.","'setSize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.token', 'handleLogout', 'setUser', and 'userType'. Either include them or remove the dependency array.","ArrayExpression",["417"],"react/jsx-pascal-case","Imported JSX component Nav_Str must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'NavContainer' is assigned a value but never used.","'LogoImg' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'MypageConatiner' is assigned a value but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'containerStyle' is assigned a value but never used.","'GoogleMapContainer' is assigned a value but never used.","'TitleStyle' is assigned a value but never used.","'SubTitleStyle' is assigned a value but never used.","'faEye' is defined but never used.","'faEyeSlash' is defined but never used.","'GoogleLogin' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'isKakaoSdkLoaded' is assigned a value but never used.","'cookies' is assigned a value but never used.","'user' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'Title' is assigned a value but never used.","'MemberSignUpPage' is defined but never used.","'iu' is defined but never used.",["418"],"'DetailRow' is assigned a value but never used.","'Label' is assigned a value but never used.","'Value' is assigned a value but never used.","'Badge' is defined but never used.","'addressFields' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cookies.token', 'handleLogout', and 'setUser'. Either include them or remove the dependency array.",["419"],"'validateForm' is assigned a value but never used.","'responsivePropType' is defined but never used.","'handleContentChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAnnouncement'. Either include it or remove the dependency array.",["420"],"'handleUpdateFlag' is assigned a value but never used.",["421"],"'ModifyButton' is assigned a value but never used.","'navigate' is defined but never used.","'data' is defined but never used.","'data' is assigned a value but never used.","'winter' is defined but never used.","'setKeyword' is assigned a value but never used.",["422"],"React Hook useEffect has missing dependencies: 'fetchContentData', 'fetchLocalData', 'keyword', 'pageContentNo', and 'searchContentKeyword'. Either include them or remove the dependency array.",["423"],"'TopImage' is assigned a value but never used.","'SmallTitleContainer' is assigned a value but never used.","'SmallTitle' is assigned a value but never used.","'SmallTitleContent' is assigned a value but never used.","'SmallTag' is assigned a value but never used.","'ContentContainer' is assigned a value but never used.","'ContentTitleContainer' is assigned a value but never used.","'ContentSmallTitleContainer' is assigned a value but never used.","'ContentMainContainer' is assigned a value but never used.","'ContentMainTextContainer' is assigned a value but never used.","'ContentTitle' is assigned a value but never used.","'ContentMemory' is assigned a value but never used.","'TravelContent' is assigned a value but never used.","'SearchInput' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'keyword'. Either include them or remove the dependency array.",["424"],"'logoSmall' is defined but never used.",["425"],"'getProfilePicSrc' is assigned a value but never used.","'goToNextStep' is assigned a value but never used.","'goToPreviousStep' is assigned a value but never used.","'Divider' is assigned a value but never used.","'about4' is defined but never used.","'Footer' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useNavigate' is defined but never used.","'Card' is defined but never used.","'showPopup' is assigned a value but never used.","'Popup' is assigned a value but never used.","no-object-constructor",{"desc":"426","fix":"427"},{"desc":"426","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"426","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"429","fix":"440"},"Update the dependencies array to be: [cookies.token, handleLogout, setUser, userType]",{"range":"441","text":"442"},{"range":"443","text":"442"},"Update the dependencies array to be: [cookies.token, handleLogout, setUser]",{"range":"444","text":"445"},"Update the dependencies array to be: [anno_id, fetchAnnouncement, updateFlag]",{"range":"446","text":"447"},"Update the dependencies array to be: [anno_id, fetchAnnouncement]",{"range":"448","text":"449"},{"range":"450","text":"442"},"Update the dependencies array to be: [fetchContentData, fetchLocalData, keyword, pageContentNo, pageNo, searchContentKeyword]",{"range":"451","text":"452"},"Update the dependencies array to be: [fetchData, keyword, pageNo]",{"range":"453","text":"454"},{"range":"455","text":"445"},[2331,2333],"[cookies.token, handleLogout, setUser, userType]",[2141,2143],[2695,2697],"[cookies.token, handleLogout, setUser]",[2517,2538],"[anno_id, fetchAnnouncement, updateFlag]",[3330,3339],"[anno_id, fetchAnnouncement]",[14674,14676],[14931,14939],"[fetchContentData, fetchLocalData, keyword, pageContentNo, pageNo, searchContentKeyword]",[570,578],"[fetchData, keyword, pageNo]",[2586,2588]]