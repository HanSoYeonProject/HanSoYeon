{"ast":null,"code":"var _jsxFileName = \"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport navigate from \"../Components/Navigate\";\n\n// 더미 데이터 배열\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyData = Array.from({\n  length: 8\n}, (_, i) => ({\n  id: i,\n  title: `Review Title ${i + 1}`,\n  content: `Review Content ${i + 1}`,\n  imagePath: \"/../imgs/IU.png\" // 더미 이미지 경로\n}));\n\nconst ITEMS_PER_PAGE = 4;\nconst ReviewPage = props => {\n  _s();\n  const navigate = useNavigate();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // 현재 페이지에 해당하는 리뷰들을 계산합니다.\n  const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n  const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n  const currentItems = dummyData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // 페이지 번호를 클릭했을 때 실행되는 함수입니다.\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const handleWriteButtonClick = () => {\n    navigate('/writingReview'); // 경로는 실제 WritingReviewPage 경로에 맞춰서 조정\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ReviewPageTitle, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD6C4\\uAE30 \\uCCB4\\uD5D8\\uB2F4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleWriteButtonClick,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReviewPageSubTitle, {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC0DD\\uC0DD\\uD55C \\uD6C4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReviewPageContentContainer, {\n      children: /*#__PURE__*/_jsxDEV(ReviewPageContent, {\n        children: currentItems.map(item => /*#__PURE__*/_jsxDEV(ReviewPageContentItem, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: item.imagePath,\n            alt: \"\\uC548\\uB155\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: Array.from({\n        length: Math.ceil(dummyData.length / ITEMS_PER_PAGE)\n      }, (_, i) => /*#__PURE__*/_jsxDEV(PageNumber, {\n        onClick: () => paginate(i + 1),\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ReviewPage, \"Qb1TdfgC3GPK8eOTlcjNyVYADC0=\", false, function () {\n  return [useNavigate];\n});\n_c = ReviewPage;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`;\n_c2 = Container;\nconst ReviewPageTitle = styled.div`\n  display: flex;\n  flex-direction: row; // 가로 방향으로 내용을 정렬\n  align-items: center; // 수직 방향으로 가운데 정렬\n  justify-content: space-between; // 내용을 양 끝으로 정렬\n\n  background-color: lightgreen;\n  margin-top: 20%;\n  flex: 2;\n  text-align: right; // 텍스트 오른쪽 정렬\n  margin-left: 40px;\n`;\n_c3 = ReviewPageTitle;\nconst ReviewPageSubTitle = styled.div`\n  display: flex;\n  flex: 1; // 비율 1로 설정\n  text-align: right; // 텍스트 오른쪽 정렬\n  margin-left: 40px;\n`;\n_c4 = ReviewPageSubTitle;\nconst ReviewPageContentContainer = styled.div`\n  //display:flex;\n  //flex: 7;\n  width: 80%;\n  margin: 0 auto;// 좌우 마진을 auto로 설정하여 가운데 정렬\n`;\n_c5 = ReviewPageContentContainer;\nconst ReviewPageContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr); // 세 개의 열을 동일한 너비로 생성합니다.\n  gap: 20px; // 그리드 아이템 사이의 간격을 추가합니다.\n  padding: 20px; // 그리드 컨테이너 안쪽에 패딩을 추가합니다.\n  background-color: darkviolet; // 원래의 배경색입니다.\n`;\n_c6 = ReviewPageContent;\nconst ReviewPageContentItem = styled.div`\n  display: flex;\n  flex-direction: column; // 세로 방향으로 내용을 쌓기 위해 변경합니다.\n  align-items: center; // 내용을 가운데 정렬합니다.\n  background-color: yellow;\n  padding: 16px; // 패딩을 추가하여 내용과 테두리 사이에 공간을 만듭니다.\n  border-radius: 8px; // 카드 모서리를 둥글게 합니다.\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1); // 그림자를 추가하여 입체감을 줍니다.\n  overflow: hidden; // 내용이 밖으로 넘치지 않도록 합니다.\n  height: 300px;\n`;\n\n// 이미지 컴포넌트를 만듭니다.\n_c7 = ReviewPageContentItem;\nconst Image = styled.img`\n  width: 100%; // 이미지의 너비를 부모 요소에 맞춥니다.\n  height: auto; // 이미지의 높이를 자동으로 설정하여 비율을 유지합니다.\n  margin-bottom: 8px; // 이미지와 텍스트 사이의 간격을 추가합니다.\n`;\n_c8 = Image;\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n`;\n_c9 = Pagination;\nconst PageNumber = styled.button`\n  border: none;\n  background-color: #f0f0f0;\n  margin: 0 5px;\n  padding: 8px 16px;\n  cursor: pointer;\n  &:hover {\n    background-color: #ddd;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n_c10 = PageNumber;\nexport default ReviewPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"ReviewPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"ReviewPageTitle\");\n$RefreshReg$(_c4, \"ReviewPageSubTitle\");\n$RefreshReg$(_c5, \"ReviewPageContentContainer\");\n$RefreshReg$(_c6, \"ReviewPageContent\");\n$RefreshReg$(_c7, \"ReviewPageContentItem\");\n$RefreshReg$(_c8, \"Image\");\n$RefreshReg$(_c9, \"Pagination\");\n$RefreshReg$(_c10, \"PageNumber\");","map":{"version":3,"names":["React","useState","styled","useNavigate","navigate","jsxDEV","_jsxDEV","dummyData","Array","from","length","_","i","id","title","content","imagePath","ITEMS_PER_PAGE","ReviewPage","props","_s","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","handleWriteButtonClick","Container","children","ReviewPageTitle","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ReviewPageSubTitle","ReviewPageContentContainer","ReviewPageContent","map","item","ReviewPageContentItem","Image","src","alt","Pagination","Math","ceil","PageNumber","_c","div","_c2","_c3","_c4","_c5","_c6","_c7","img","_c8","_c9","button","_c10","$RefreshReg$"],"sources":["/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport navigate from \"../Components/Navigate\";\n\n\n// 더미 데이터 배열\nconst dummyData = Array.from({ length: 8 }, (_, i) => ({\n    id: i,\n    title: `Review Title ${i + 1}`,\n    content: `Review Content ${i + 1}`,\n    imagePath: \"/../imgs/IU.png\" // 더미 이미지 경로\n}));\n\nconst ITEMS_PER_PAGE = 4;\n\n\n\nconst ReviewPage = (props) => {\n\n    const navigate = useNavigate();\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    // 현재 페이지에 해당하는 리뷰들을 계산합니다.\n    const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n    const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n    const currentItems = dummyData.slice(indexOfFirstItem, indexOfLastItem);\n\n    // 페이지 번호를 클릭했을 때 실행되는 함수입니다.\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    const handleWriteButtonClick = () => {\n        navigate('/writingReview'); // 경로는 실제 WritingReviewPage 경로에 맞춰서 조정\n    };\n\n\n\n    return (\n        <Container>\n            <ReviewPageTitle>\n                <h1>후기 체험담</h1>\n                <button onClick={handleWriteButtonClick}><h4>글쓰기</h4></button>\n            </ReviewPageTitle>\n            <ReviewPageSubTitle><h4>생생한 후기</h4></ReviewPageSubTitle>\n            <ReviewPageContentContainer>\n                <ReviewPageContent>\n                    {currentItems.map(item => (\n                        <ReviewPageContentItem key={item.id}>\n                            <Image src={item.imagePath} alt=\"안녕\" />\n                            <h3>{item.title}</h3>\n                            <p>{item.content}</p>\n                        </ReviewPageContentItem>\n                    ))}\n                </ReviewPageContent>\n            </ReviewPageContentContainer>\n            <Pagination>\n                {Array.from({ length: Math.ceil(dummyData.length / ITEMS_PER_PAGE) }, (_, i) => (\n                    <PageNumber key={i} onClick={() => paginate(i + 1)}>\n                        {i + 1}\n                    </PageNumber>\n                ))}\n            </Pagination>\n        </Container>\n    );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`\nconst ReviewPageTitle = styled.div`\n  display: flex;\n  flex-direction: row; // 가로 방향으로 내용을 정렬\n  align-items: center; // 수직 방향으로 가운데 정렬\n  justify-content: space-between; // 내용을 양 끝으로 정렬\n\n  background-color: lightgreen;\n  margin-top: 20%;\n  flex: 2;\n  text-align: right; // 텍스트 오른쪽 정렬\n  margin-left: 40px;\n`\n\nconst ReviewPageSubTitle = styled.div`\n  display: flex;\n  flex: 1; // 비율 1로 설정\n  text-align: right; // 텍스트 오른쪽 정렬\n  margin-left: 40px;\n`\n\nconst ReviewPageContentContainer = styled.div`\n  //display:flex;\n  //flex: 7;\n  width: 80%;\n  margin: 0 auto;// 좌우 마진을 auto로 설정하여 가운데 정렬\n`\n\nconst ReviewPageContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr); // 세 개의 열을 동일한 너비로 생성합니다.\n  gap: 20px; // 그리드 아이템 사이의 간격을 추가합니다.\n  padding: 20px; // 그리드 컨테이너 안쪽에 패딩을 추가합니다.\n  background-color: darkviolet; // 원래의 배경색입니다.\n`\n\nconst ReviewPageContentItem = styled.div`\n  display: flex;\n  flex-direction: column; // 세로 방향으로 내용을 쌓기 위해 변경합니다.\n  align-items: center; // 내용을 가운데 정렬합니다.\n  background-color: yellow;\n  padding: 16px; // 패딩을 추가하여 내용과 테두리 사이에 공간을 만듭니다.\n  border-radius: 8px; // 카드 모서리를 둥글게 합니다.\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1); // 그림자를 추가하여 입체감을 줍니다.\n  overflow: hidden; // 내용이 밖으로 넘치지 않도록 합니다.\n  height: 300px;\n`\n\n// 이미지 컴포넌트를 만듭니다.\nconst Image = styled.img`\n  width: 100%; // 이미지의 너비를 부모 요소에 맞춥니다.\n  height: auto; // 이미지의 높이를 자동으로 설정하여 비율을 유지합니다.\n  margin-bottom: 8px; // 이미지와 텍스트 사이의 간격을 추가합니다.\n`\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n`;\n\nconst PageNumber = styled.button`\n  border: none;\n  background-color: #f0f0f0;\n  margin: 0 5px;\n  padding: 8px 16px;\n  cursor: pointer;\n  &:hover {\n    background-color: #ddd;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport default ReviewPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}