{"ast":null,"code":"var _jsxFileName = \"/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [reviews, setReviews] = useState([]);\n\n  // 서버에서 리뷰 데이터 가져오기\n  useEffect(() => {\n    fetch('http://localhost:8050/api/reviews').then(response => response.json()).then(data => setReviews(data)).catch(error => console.error('Error fetching reviews:', error));\n  }, []);\n  const ITEMS_PER_PAGE = 4;\n  const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n  const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n  const currentItems = reviews.slice(indexOfFirstItem, indexOfLastItem);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const handleWriteButtonClick = () => {\n    navigate('/writeReview');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ReviewPageTitle, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD6C4\\uAE30 \\uCCB4\\uD5D8\\uB2F4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleWriteButtonClick,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReviewPageSubTitle, {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC0DD\\uC0DD\\uD55C \\uD6C4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReviewPageContentContainer, {\n      children: /*#__PURE__*/_jsxDEV(ReviewPageContent, {\n        children: currentItems.map(item => /*#__PURE__*/_jsxDEV(ReviewPageContentItem, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: item.imagePath,\n            alt: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: Array.from({\n        length: Math.ceil(reviews.length / ITEMS_PER_PAGE)\n      }, (_, i) => /*#__PURE__*/_jsxDEV(PageNumber, {\n        onClick: () => paginate(i + 1),\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ReviewPage, \"sDJj10FaNxzOwEKailgIhfvZ8oA=\", false, function () {\n  return [useNavigate];\n});\n_c = ReviewPage;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`;\n_c2 = Container;\nconst ReviewPageTitle = styled.div`\n  display: flex;\n  flex-direction: row; // 가로 방향으로 내용을 정렬\n  align-items: center; // 수직 방향으로 가운데 정렬\n  justify-content: space-between; // 내용을 양 끝으로 정렬\n\n  background-color: lightgreen;\n  margin-top: 20%;\n  flex: 2;\n  text-align: right; // 텍스트 오른쪽 정렬\n  margin-left: 40px;\n`;\n_c3 = ReviewPageTitle;\nconst ReviewPageSubTitle = styled.div`\n  display: flex;\n  flex: 1; // 비율 1로 설정\n  text-align: right; // 텍스트 오른쪽 정렬\n  margin-left: 40px;\n`;\n_c4 = ReviewPageSubTitle;\nconst ReviewPageContentContainer = styled.div`\n  //display:flex;\n  //flex: 7;\n  width: 80%;\n  margin: 0 auto;// 좌우 마진을 auto로 설정하여 가운데 정렬\n`;\n_c5 = ReviewPageContentContainer;\nconst ReviewPageContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr); // 세 개의 열을 동일한 너비로 생성합니다.\n  gap: 20px; // 그리드 아이템 사이의 간격을 추가합니다.\n  padding: 20px; // 그리드 컨테이너 안쪽에 패딩을 추가합니다.\n  background-color: darkviolet; // 원래의 배경색입니다.\n`;\n_c6 = ReviewPageContent;\nconst ReviewPageContentItem = styled.div`\n  display: flex;\n  flex-direction: column; // 세로 방향으로 내용을 쌓기 위해 변경합니다.\n  align-items: center; // 내용을 가운데 정렬합니다.\n  background-color: yellow;\n  padding: 16px; // 패딩을 추가하여 내용과 테두리 사이에 공간을 만듭니다.\n  border-radius: 8px; // 카드 모서리를 둥글게 합니다.\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1); // 그림자를 추가하여 입체감을 줍니다.\n  overflow: hidden; // 내용이 밖으로 넘치지 않도록 합니다.\n  height: 300px;\n`;\n\n// 이미지 컴포넌트를 만듭니다.\n_c7 = ReviewPageContentItem;\nconst Image = styled.img`\n  width: 100%; // 이미지의 너비를 부모 요소에 맞춥니다.\n  height: auto; // 이미지의 높이를 자동으로 설정하여 비율을 유지합니다.\n  margin-bottom: 8px; // 이미지와 텍스트 사이의 간격을 추가합니다.\n`;\n_c8 = Image;\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n`;\n_c9 = Pagination;\nconst PageNumber = styled.button`\n  border: none;\n  background-color: #f0f0f0;\n  margin: 0 5px;\n  padding: 8px 16px;\n  cursor: pointer;\n  &:hover {\n    background-color: #ddd;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n_c10 = PageNumber;\nexport default ReviewPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"ReviewPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"ReviewPageTitle\");\n$RefreshReg$(_c4, \"ReviewPageSubTitle\");\n$RefreshReg$(_c5, \"ReviewPageContentContainer\");\n$RefreshReg$(_c6, \"ReviewPageContent\");\n$RefreshReg$(_c7, \"ReviewPageContentItem\");\n$RefreshReg$(_c8, \"Image\");\n$RefreshReg$(_c9, \"Pagination\");\n$RefreshReg$(_c10, \"PageNumber\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","jsxDEV","_jsxDEV","ReviewPage","_s","navigate","currentPage","setCurrentPage","reviews","setReviews","fetch","then","response","json","data","catch","error","console","ITEMS_PER_PAGE","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","handleWriteButtonClick","Container","children","ReviewPageTitle","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ReviewPageSubTitle","ReviewPageContentContainer","ReviewPageContent","map","item","ReviewPageContentItem","Image","src","imagePath","alt","title","content","id","Pagination","Array","from","length","Math","ceil","_","i","PageNumber","_c","div","_c2","_c3","_c4","_c5","_c6","_c7","img","_c8","_c9","button","_c10","$RefreshReg$"],"sources":["/Users/seungjunyoon/Desktop/HanSoYeon/hansoyeon/src/Pages/ReviewPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\n\nconst ReviewPage = () => {\n    const navigate = useNavigate();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [reviews, setReviews] = useState([]);\n\n    // 서버에서 리뷰 데이터 가져오기\n    useEffect(() => {\n        fetch('http://localhost:8050/api/reviews')\n            .then(response => response.json())\n            .then(data => setReviews(data))\n            .catch(error => console.error('Error fetching reviews:', error));\n    }, []);\n\n    const ITEMS_PER_PAGE = 4;\n    const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n    const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n    const currentItems = reviews.slice(indexOfFirstItem, indexOfLastItem);\n\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    const handleWriteButtonClick = () => {\n        navigate('/writeReview');\n    };\n\n    return (\n        <Container>\n            <ReviewPageTitle>\n                <h1>후기 체험담</h1>\n                <button onClick={handleWriteButtonClick}><h4>글쓰기</h4></button>\n            </ReviewPageTitle>\n            <ReviewPageSubTitle><h4>생생한 후기</h4></ReviewPageSubTitle>\n            <ReviewPageContentContainer>\n                <ReviewPageContent>\n                    {currentItems.map(item => (\n                        <ReviewPageContentItem key={item.id}>\n                            <Image src={item.imagePath} alt=\"Review\" />\n                            <h3>{item.title}</h3>\n                            <p>{item.content}</p>\n                        </ReviewPageContentItem>\n                    ))}\n                </ReviewPageContent>\n            </ReviewPageContentContainer>\n            <Pagination>\n                {Array.from({ length: Math.ceil(reviews.length / ITEMS_PER_PAGE) }, (_, i) => (\n                    <PageNumber key={i} onClick={() => paginate(i + 1)}>\n                        {i + 1}\n                    </PageNumber>\n                ))}\n            </Pagination>\n        </Container>\n    );\n};\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`\nconst ReviewPageTitle = styled.div`\n  display: flex;\n  flex-direction: row; // 가로 방향으로 내용을 정렬\n  align-items: center; // 수직 방향으로 가운데 정렬\n  justify-content: space-between; // 내용을 양 끝으로 정렬\n\n  background-color: lightgreen;\n  margin-top: 20%;\n  flex: 2;\n  text-align: right; // 텍스트 오른쪽 정렬\n  margin-left: 40px;\n`\n\nconst ReviewPageSubTitle = styled.div`\n  display: flex;\n  flex: 1; // 비율 1로 설정\n  text-align: right; // 텍스트 오른쪽 정렬\n  margin-left: 40px;\n`\n\nconst ReviewPageContentContainer = styled.div`\n  //display:flex;\n  //flex: 7;\n  width: 80%;\n  margin: 0 auto;// 좌우 마진을 auto로 설정하여 가운데 정렬\n`\n\nconst ReviewPageContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr); // 세 개의 열을 동일한 너비로 생성합니다.\n  gap: 20px; // 그리드 아이템 사이의 간격을 추가합니다.\n  padding: 20px; // 그리드 컨테이너 안쪽에 패딩을 추가합니다.\n  background-color: darkviolet; // 원래의 배경색입니다.\n`\n\nconst ReviewPageContentItem = styled.div`\n  display: flex;\n  flex-direction: column; // 세로 방향으로 내용을 쌓기 위해 변경합니다.\n  align-items: center; // 내용을 가운데 정렬합니다.\n  background-color: yellow;\n  padding: 16px; // 패딩을 추가하여 내용과 테두리 사이에 공간을 만듭니다.\n  border-radius: 8px; // 카드 모서리를 둥글게 합니다.\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1); // 그림자를 추가하여 입체감을 줍니다.\n  overflow: hidden; // 내용이 밖으로 넘치지 않도록 합니다.\n  height: 300px;\n`\n\n// 이미지 컴포넌트를 만듭니다.\nconst Image = styled.img`\n  width: 100%; // 이미지의 너비를 부모 요소에 맞춥니다.\n  height: auto; // 이미지의 높이를 자동으로 설정하여 비율을 유지합니다.\n  margin-bottom: 8px; // 이미지와 텍스트 사이의 간격을 추가합니다.\n`\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n`;\n\nconst PageNumber = styled.button`\n  border: none;\n  background-color: #f0f0f0;\n  margin: 0 5px;\n  padding: 8px 16px;\n  cursor: pointer;\n  &:hover {\n    background-color: #ddd;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport default ReviewPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}