{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwoo3\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\HanSoYeon\\\\hansoyeon\\\\src\\\\Pages\\\\RecommendPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecommendPage = () => {\n  _s();\n  const [touristSpots, setTouristSpots] = useState([]);\n  const serviceKey = 'YRUALCBQQWvU6w/tG7ZkUtWtjAeaO9bJjyummGjvfF9SjR0QYO+CRveierZlwe97v5toXybLb6aoFCl1sZ8q4Q==';\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const keyword = encodeURIComponent(\"강원\"); // 한글 인코딩\n        const response = await axios.get(`http://apis.data.go.kr/B551011/KorService1/searchKeyword1?serviceKey=${serviceKey}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&listYN=Y&srt=A&contTypeId=12&keyword=${keyword}`);\n        console.log(response.data);\n        // 데이터 구조에 따라 적절한 경로 설정\n        setTouristSpots(response.data.items.item);\n      } catch (error) {\n        console.error('Error fetching data: ', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: touristSpots.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: touristSpots.map((spot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: spot.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: spot.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(RecommendPage, \"fvfWtn1b24/ysp34w05QUncCNCc=\");\n_c = RecommendPage;\nexport default RecommendPage;\nvar _c;\n$RefreshReg$(_c, \"RecommendPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RecommendPage","_s","touristSpots","setTouristSpots","serviceKey","fetchData","keyword","encodeURIComponent","response","get","console","log","data","items","item","error","children","length","map","spot","index","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["C:/Users/jwoo3/OneDrive/문서/GitHub/HanSoYeon/hansoyeon/src/Pages/RecommendPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst RecommendPage = () => {\n    const [touristSpots, setTouristSpots] = useState([]);\n\n    const serviceKey = 'YRUALCBQQWvU6w/tG7ZkUtWtjAeaO9bJjyummGjvfF9SjR0QYO+CRveierZlwe97v5toXybLb6aoFCl1sZ8q4Q==';\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const keyword = encodeURIComponent(\"강원\"); // 한글 인코딩\n                const response = await axios.get(`http://apis.data.go.kr/B551011/KorService1/searchKeyword1?serviceKey=${serviceKey}&MobileApp=AppTest&MobileOS=ETC&pageNo=1&numOfRows=10&listYN=Y&srt=A&contTypeId=12&keyword=${keyword}`);\n                console.log(response.data);\n                // 데이터 구조에 따라 적절한 경로 설정\n                setTouristSpots(response.data.items.item);\n            } catch (error) {\n                console.error('Error fetching data: ', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            {touristSpots.length > 0 ? (\n                <ul>\n                    {touristSpots.map((spot, index) => (\n                        <li key={index}>\n                            <h3>{spot.title}</h3> {/* 'title'은 관광지의 제목 필드를 가정 */}\n                            <p>{spot.description}</p> {/* 'description'은 설명 필드를 가정 */}\n                            {/* 기타 필요한 정보를 표시 */}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    );\n};\n\nexport default RecommendPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,UAAU,GAAG,0FAA0F;EAE7GR,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,OAAO,GAAGC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,wEAAuEL,UAAW,8FAA6FE,OAAQ,EAAC,CAAC;QAC3NI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;QAC1B;QACAT,eAAe,CAACK,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC;MAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDV,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAAiB,QAAA,EACKd,YAAY,CAACe,MAAM,GAAG,CAAC,gBACpBlB,OAAA;MAAAiB,QAAA,EACKd,YAAY,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BrB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAAiB,QAAA,EAAKG,IAAI,CAACE;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC,eACtB1B,OAAA;UAAAiB,QAAA,EAAIG,IAAI,CAACO;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC;MAAA,GAFrBL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAEL1B,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACnB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtCID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}